[{"path":[]},{"path":"https://gdrplatform.github.io/gDRcore/PULL_REQUEST_TEMPLATE.html","id":"what-changed","dir":"","previous_headings":"","what":"What changed?","title":"Description","text":"Related JIRA issue:","code":""},{"path":[]},{"path":"https://gdrplatform.github.io/gDRcore/PULL_REQUEST_TEMPLATE.html","id":"checklist-for-sustainable-code-base","dir":"","previous_headings":"","what":"Checklist for sustainable code base","title":"Description","text":"added tests code changed/added added documentation code changed/added made sure naming new functions self-explanatory consistent","code":""},{"path":"https://gdrplatform.github.io/gDRcore/PULL_REQUEST_TEMPLATE.html","id":"logistic-checklist","dir":"","previous_headings":"","what":"Logistic checklist","title":"Description","text":"Package version bumped Changelog updated","code":""},{"path":[]},{"path":"https://gdrplatform.github.io/gDRcore/articles/gDR-data-model.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"gDR -- data model","text":"vignette dedicated providing -depth exploration underlying data model employed gDR suite, focus versatile MultiAssayExperiment object – cornerstone gDR ecosystem. vignette delves intricacies data model, shedding light different components organized within MultiAssayExperiment object. basic essential object gDR, MultiAssayExperiment encapsulates diverse dimensions drug response data, providing unified coherent framework analysis. primary goal equip users detailed understanding gDRsuite data model utilization within MultiAssayExperiment object. practical examples thorough explanations, aim demonstrate gDRcore’s core functions pipeline facilitate efficient analysis, providing valuable insights drug response dynamics. information data processing can found gDRcore.","code":""},{"path":"https://gdrplatform.github.io/gDRcore/articles/gDR-data-model.html","id":"general-overview-of-the-data-model","dir":"Articles","previous_headings":"","what":"General overview of the data model","title":"gDR -- data model","text":"gDR suite, culmination drug response data encapsulated form MultiAssayExperiment object, representing versatile cohesive framework analysis diverse experimental scenarios.","code":""},{"path":"https://gdrplatform.github.io/gDRcore/articles/gDR-data-model.html","id":"supported-experiments","dir":"Articles","previous_headings":"General overview of the data model","what":"Supported Experiments:","title":"gDR -- data model","text":"gDR suite accommodates three primary types experiments within MultiAssayExperiment object: single-agent experiment: involves assessment drug responses single agent, providing insights individual treatment effects. combination experiments: explores interactions multiple agents, unraveling complexities combined drug treatments effects. co-dilution experiments: Focused studying effects diluting concentrations compounds, codilution experiments provide valuable data concentration-dependent aspects drug responses.","code":""},{"path":"https://gdrplatform.github.io/gDRcore/articles/gDR-data-model.html","id":"summarizedexperiment-objects","dir":"Articles","previous_headings":"General overview of the data model","what":"SummarizedExperiment objects:","title":"gDR -- data model","text":"experiment within MultiAssayExperiment represented SummarizedExperiment object. encapsulates essential components necessary comprehensive analysis: assays: Containing actual data, assays provide numerical representation drug responses associated experimental measurements. gDR, assays represented BumpyMatrix object. rowData: Encompassing information related features, rowData provides context entities analyzed, drugs, compounds, concentrations. gDR, rowData represented DataFrame object S4Vectors colData: Describing experimental conditions, colData captures metadata associated cell lines, including tissues, reference division time, relevant covariates. gDR, colData represented DataFrame object S4Vectors metadata: Offering additional information experiment, metadata provides contextual layer enhance understanding experimental setup.","code":""},{"path":"https://gdrplatform.github.io/gDRcore/articles/gDR-data-model.html","id":"multiassayexperiment-object","dir":"Articles","previous_headings":"","what":"MultiAssayExperiment object","title":"gDR -- data model","text":"core, MultiAssayExperiment object designed hold collection SummarizedExperiment objects, representing distinct experiment type within gDR suite. simplicity ensures clean efficient organization data, facilitating user-friendly experience. extract specific experiments MultiAssayExperiment object, [[ operator can used example, access data related combination experiments, one can use MAE[[\"combination\"]], MAE represents MultiAssayExperiment object. gain insights available experiments within MultiAssayExperiment object, MultiAssayExperiment::experiments function can used.","code":""},{"path":"https://gdrplatform.github.io/gDRcore/articles/gDR-data-model.html","id":"summarizedexperiment-object","dir":"Articles","previous_headings":"","what":"SummarizedExperiment object","title":"gDR -- data model","text":"SummarizedExperiment object emerges pivotal structure, integrating drug response data essential metadata. versatile container plays central role storage information related drugs, cell lines, experimental conditions, providing comprehensive foundation nuanced analysis within gDR. SummarizedExperiment object gDR contains four essential components:","code":""},{"path":"https://gdrplatform.github.io/gDRcore/articles/gDR-data-model.html","id":"assays","dir":"Articles","previous_headings":"SummarizedExperiment object","what":"Assays","title":"gDR -- data model","text":"section encapsulates drug response data , offering numerical representation experimental measurements. Whether involves single-agent studies, combination treatments, co-dilution experiments, assays contain crucial data points analysis. list available assays given gDR experiment can obtained using SummarizedExperiment::assayNames SummarizedExperiment object. extraction specific assay can done using SummarizedExperiment::assay function, .e. SummarizedExperiment::assay(se, \"Normalized\"), se SummarizedExperiment object, Normalized name assay within experiment. gDR experiments contain two sets assays. One set single-agent co-dilution experiments (five basic assays), another set combinations experiments (five basic assays plus four – combination-specific). List assays (combination-specific assays marked asterisk): RawTreated – stores treated references Controls – represents untreated, control references Normalized – represents normalized data compute RelativeViability GRValues (default gDR normalization types) Averaged – stores averaged replicates computed mean standard deviation Metrics – contains fitted response curves excess (*) – excess data pair concentration values (represents Bliss excess, HSA excess, data smoothing values) all_iso_points (*) stores isobologram points isobolograms (*) – stores isobologram curves scores (*) – scores data pair concentration values (HSA score, Bliss Score, CI (combination index) scores) assays stored BumpyMatrix objects. Assays represented numbers 3-9 additionally contain information normalization_type distinguish different metrics calculated normalization type (RelativeViability GRValues default). gDR BumpyMatrix objects can easily transformed data.table object using gDRutils::convert_se_assay_to_dt function. function also includes information rowData colData.","code":""},{"path":"https://gdrplatform.github.io/gDRcore/articles/gDR-data-model.html","id":"rowdata","dir":"Articles","previous_headings":"SummarizedExperiment object","what":"rowData","title":"gDR -- data model","text":"rowData provides context features analyzed, rowData dedicated information drugs, compounds, concentrations annotations database. Additional perturbations replicates might also stored rowData. rowData can extracted SummarizedExperiment object using SummarizedExperiment::rowData function.","code":""},{"path":"https://gdrplatform.github.io/gDRcore/articles/gDR-data-model.html","id":"coldata","dir":"Articles","previous_headings":"SummarizedExperiment object","what":"colData","title":"gDR -- data model","text":"colData represents experimental cell lines. includes details cell lines annotations. colData can extracted SummarizedExperiment object using SummarizedExperiment::colData function.","code":""},{"path":"https://gdrplatform.github.io/gDRcore/articles/gDR-data-model.html","id":"metadata","dir":"Articles","previous_headings":"SummarizedExperiment object","what":"metadata","title":"gDR -- data model","text":"metadata offers extra layer information experiment , metadata provides context enhance comprehension. may include details experimental design, sources data, relevant information aids interpretation results. metadata information can extracted using S4Vectors::metadata function. gDR object metadata information stored list.","code":""},{"path":"https://gdrplatform.github.io/gDRcore/articles/gDR-data-model.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"gDR -- data model","text":"","code":"## R version 4.3.0 (2023-04-21) ## Platform: x86_64-pc-linux-gnu (64-bit) ## Running under: Ubuntu 22.04.3 LTS ##  ## Matrix products: default ## BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  ## LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 ##  ## locale: ##  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               ##  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8     ##  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8    ##  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                  ##  [9] LC_ADDRESS=C               LC_TELEPHONE=C             ## [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C        ##  ## time zone: Etc/UTC ## tzcode source: system (glibc) ##  ## attached base packages: ## [1] stats     graphics  grDevices utils     datasets  methods   base      ##  ## other attached packages: ## [1] BiocStyle_2.30.0 ##  ## loaded via a namespace (and not attached): ##  [1] vctrs_0.6.5         cli_3.6.2           knitr_1.45          ##  [4] rlang_1.1.3         xfun_0.42           stringi_1.8.3       ##  [7] purrr_1.0.2         textshaping_0.3.7   jsonlite_1.8.8      ## [10] glue_1.7.0          htmltools_0.5.7     ragg_1.2.7          ## [13] sass_0.4.8          rmarkdown_2.25      evaluate_0.23       ## [16] jquerylib_0.1.4     fastmap_1.1.1       yaml_2.3.8          ## [19] lifecycle_1.0.4     memoise_2.0.1       bookdown_0.37       ## [22] BiocManager_1.30.22 stringr_1.5.1       compiler_4.3.0      ## [25] fs_1.6.3            systemfonts_1.0.5   digest_0.6.34       ## [28] R6_2.5.1            magrittr_2.0.3      bslib_0.6.1         ## [31] tools_4.3.0         pkgdown_2.0.7       cachem_1.0.8        ## [34] desc_1.4.3"},{"path":"https://gdrplatform.github.io/gDRcore/articles/gDRcore.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"gDRcore","text":"gDRcore part gDR suite. package provides set tools proces analyze drug response data.","code":""},{"path":[]},{"path":"https://gdrplatform.github.io/gDRcore/articles/gDRcore.html","id":"data-model","dir":"Articles","previous_headings":"Introduction","what":"Data model","title":"gDRcore","text":"data model built MultiAssayExperiments (MAE) structure. Within MAE, SummarizedExperiment (SE) contains different unit type (e.g. single-agent, combination treatment). Columns MAE defined cell lines modification shared SEs. Rows defined treatments (e.g drugs, perturbations) specific SE. Assays SE different levels data processing (raw, control, normalized, averaged data, well metrics). nested element assays SEs comprises series table (data.table practice). Although elements need series number elements, attributes (columns table) consistent across SE.","code":""},{"path":"https://gdrplatform.github.io/gDRcore/articles/gDRcore.html","id":"drug-processing","dir":"Articles","previous_headings":"Introduction","what":"Drug processing","title":"gDRcore","text":"drug response data, input files need merged measurement (data) associated right metadata (cell line properties treatment definition). Metadata can added function cleanup_metadata right reference databases place. data metadata merged long table, wrapper function runDrugResponseProcessingPipeline can used generate MAE processed analyzed data. . practice runDrugResponseProcessingPipeline following steps: create_SE creates structure MAE associated SEs assigning metadata row column attributes. assignment performed function split_SE_components (see details assumption made building SE structures). create_SE also dispatches raw data controls right nested tables. Note data may duplicated different SEs make self-contained. normalize_SE normalizes raw data based control. Calculation GR value based cell line division time provided reference database pre-treatment control provided. information missing, GR values calculated. Additional normalization can added new rows nested table. average_SE averages technical replicates stored nested table averaged. fit_SE fits dose-response curves calculates response metrics normalization type. fit_SE.combinations calculates synergy scores drug combination data , data appropriate, fits along two drugs matrix-level metrics (e.g. isobolograms) calculated. also performed normalization type independently. . functions process data parameters specifying names variables assays. Additional parameters available personalize processing steps force nesting () attribute, specify attributes considered technical replicates .","code":""},{"path":[]},{"path":"https://gdrplatform.github.io/gDRcore/articles/gDRcore.html","id":"data-preprocessing","dir":"Articles","previous_headings":"Use Cases","what":"Data preprocessing","title":"gDRcore","text":"Please familiarize gDRimport package containing bunch tools allowing prepare input data gDRcore. example made based artificial dataset called data1 available within gDRimport package. gDR required three types data used raw input: Template, Manifest, RawData. info three types data find general documentation. Provided dataset needs merged one data.table object able run gDR pipeline. process can done using two functions – gDRimport::load_data() gDRcore::merge_data().","code":"td <- gDRimport::get_test_data()"},{"path":"https://gdrplatform.github.io/gDRcore/articles/gDRcore.html","id":"running-gdr-pipeline","dir":"Articles","previous_headings":"Use Cases","what":"Running gDR pipeline","title":"gDRcore","text":"provide --one function splits data appropriate data types, creates SummarizedExperiment object data type, splits data treatment control assays, normalizes, averages, calculates gDR metrics, finally, creates MultiAssayExperiment object. function called runDrugResponseProcessingPipeline. can subset MultiAssayExperiment receive SummarizedExperiment specific data type, e.g.","code":"mae <- runDrugResponseProcessingPipeline(input_df) mae #> A MultiAssayExperiment object of 2 listed #>  experiments with user-defined names and respective classes. #>  Containing an ExperimentList class object of length 2: #>  [1] combination: SummarizedExperiment with 2 rows and 6 columns #>  [2] single-agent: SummarizedExperiment with 3 rows and 6 columns #> Functionality: #>  experiments() - obtain the ExperimentList instance #>  colData() - the primary/phenotype DataFrame #>  sampleMap() - the sample coordination DataFrame #>  `$`, `[`, `[[` - extract colData columns, subset, or experiment #>  *Format() - convert into a long or wide DataFrame #>  assays() - convert ExperimentList to a SimpleList of matrices #>  exportClass() - save data to flat files mae[[\"single-agent\"]] #> class: SummarizedExperiment  #> dim: 3 6  #> metadata(5): identifiers experiment_metadata Keys fit_parameters #>   .internal #> assays(5): RawTreated Controls Normalized Averaged Metrics #> rownames(3): G00002_drug_002_moa_A_168 G00004_drug_004_moa_A_168 #>   G00011_drug_011_moa_B_168 #> rowData names(4): Gnumber DrugName drug_moa Duration #> colnames(6): CL00011_cellline_BA_breast_cellline_BA_unknown_26 #>   CL00012_cellline_CA_breast_cellline_CA_unknown_30 ... #>   CL00015_cellline_FA_breast_cellline_FA_unknown_42 #>   CL00018_cellline_IB_breast_cellline_IB_unknown_54 #> colData names(6): clid CellLineName ... subtype ReferenceDivisionTime"},{"path":"https://gdrplatform.github.io/gDRcore/articles/gDRcore.html","id":"data-extraction","dir":"Articles","previous_headings":"Use Cases","what":"Data extraction","title":"gDRcore","text":"Extraction data either MultiAssayExperiment SummarizedExperiment objects user-friendly structures well data transformations can done using gDRutils. encourage read gDRutils vignette familiarize functionalities.","code":""},{"path":"https://gdrplatform.github.io/gDRcore/articles/gDRcore.html","id":"sessioninfo","dir":"Articles","previous_headings":"","what":"SessionInfo","title":"gDRcore","text":"","code":"sessionInfo() #> R version 4.3.0 (2023-04-21) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.3 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               #>  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8     #>  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8    #>  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                  #>  [9] LC_ADDRESS=C               LC_TELEPHONE=C             #> [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C        #>  #> time zone: Etc/UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] gDRcore_1.1.13     gDRtestData_1.1.10 gDRimport_1.1.6    BiocStyle_2.30.0   #>  #> loaded via a namespace (and not attached): #>  [1] bitops_1.0-7                fastmap_1.1.1               #>  [3] RCurl_1.98-1.14             BumpyMatrix_1.10.0          #>  [5] TH.data_1.1-2               digest_0.6.34               #>  [7] lifecycle_1.0.4             gDRutils_1.1.8              #>  [9] survival_3.5-5              magrittr_2.0.3              #> [11] compiler_4.3.0              rlang_1.1.3                 #> [13] sass_0.4.8                  drc_3.0-1                   #> [15] tools_4.3.0                 plotrix_3.8-4               #> [17] utf8_1.2.4                  yaml_2.3.8                  #> [19] data.table_1.15.0           knitr_1.45                  #> [21] lambda.r_1.2.4              S4Arrays_1.2.0              #> [23] DelayedArray_0.28.0         abind_1.4-5                 #> [25] multcomp_1.4-25             BiocParallel_1.36.0         #> [27] purrr_1.0.2                 BiocGenerics_0.48.1         #> [29] desc_1.4.3                  grid_4.3.0                  #> [31] stats4_4.3.0                fansi_1.0.6                 #> [33] colorspace_2.1-0            scales_1.3.0                #> [35] MASS_7.3-58.4               gtools_3.9.5                #> [37] MultiAssayExperiment_1.28.0 SummarizedExperiment_1.32.0 #> [39] cli_3.6.2                   mvtnorm_1.2-4               #> [41] rmarkdown_2.25              crayon_1.5.2                #> [43] ragg_1.2.7                  readxl_1.4.3                #> [45] cachem_1.0.8                stringr_1.5.1               #> [47] splines_4.3.0               zlibbioc_1.48.0             #> [49] assertthat_0.2.1            parallel_4.3.0              #> [51] BiocManager_1.30.22         formatR_1.14                #> [53] cellranger_1.1.0            XVector_0.42.0              #> [55] matrixStats_1.2.0           vctrs_0.6.5                 #> [57] Matrix_1.6-5                sandwich_3.1-0              #> [59] jsonlite_1.8.8              carData_3.0-5               #> [61] bookdown_0.37               car_3.1-2                   #> [63] IRanges_2.36.0              S4Vectors_0.40.2            #> [65] systemfonts_1.0.5           testthat_3.2.1              #> [67] jquerylib_0.1.4             rematch_2.0.0               #> [69] glue_1.7.0                  pkgdown_2.0.7               #> [71] codetools_0.2-19            stringi_1.8.3               #> [73] futile.logger_1.4.3         GenomeInfoDb_1.38.6         #> [75] GenomicRanges_1.54.1        munsell_0.5.0               #> [77] tibble_3.2.1                pillar_1.9.0                #> [79] htmltools_0.5.7             brio_1.1.4                  #> [81] GenomeInfoDbData_1.2.11     R6_2.5.1                    #> [83] textshaping_0.3.7           evaluate_0.23               #> [85] lattice_0.21-8              Biobase_2.62.0              #> [87] futile.options_1.0.1        backports_1.4.1             #> [89] memoise_2.0.1               bslib_0.6.1                 #> [91] SparseArray_1.2.4           checkmate_2.3.1             #> [93] xfun_0.42                   fs_1.6.3                    #> [95] MatrixGenerics_1.14.0       zoo_1.8-12                  #> [97] pkgconfig_2.0.3"},{"path":"https://gdrplatform.github.io/gDRcore/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Bartosz Czech. Author. Arkadiusz Gladki. Maintainer, author. Marc Hafner. Author. Pawel Piatkowski. Author. Natalia Potocka. Author. Dariusz Scigocki. Author. Janina Smola. Author. Sergiu Mocanu. Author. Marcin Kamianowski. Author. Allison Vuong. Author.","code":""},{"path":"https://gdrplatform.github.io/gDRcore/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Czech B, Gladki , Hafner M, Piatkowski P, Potocka N, Scigocki D, Smola J, Mocanu S, Kamianowski M, Vuong (2024). gDRcore: Processing functions interface process analyze drug dose-response data. https://github.com/gdrplatform/gDRcore, https://gdrplatform.github.io/gDRcore/.","code":"@Manual{,   title = {gDRcore: Processing functions and interface to process and analyze drug dose-response data},   author = {Bartosz Czech and Arkadiusz Gladki and Marc Hafner and Pawel Piatkowski and Natalia Potocka and Dariusz Scigocki and Janina Smola and Sergiu Mocanu and Marcin Kamianowski and Allison Vuong},   year = {2024},   note = {https://github.com/gdrplatform/gDRcore, https://gdrplatform.github.io/gDRcore/}, }"},{"path":"https://gdrplatform.github.io/gDRcore/index.html","id":"gdrcore","dir":"","previous_headings":"","what":"Processing functions and interface to process and analyze drug\n    dose-response data","title":"Processing functions and interface to process and analyze drug\n    dose-response data","text":"Processing drug response data involves merging metadata raw data long DataFrame. followed normalization, averaging, fitting ultimately results drug response fitting metrics.","code":""},{"path":"https://gdrplatform.github.io/gDRcore/index.html","id":"website","dir":"","previous_headings":"","what":"Website","title":"Processing functions and interface to process and analyze drug\n    dose-response data","text":"package website available link.","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/add_CellLine_annotation.html","id":null,"dir":"Reference","previous_headings":"","what":"add_CellLine_annotation — add_CellLine_annotation","title":"add_CellLine_annotation — add_CellLine_annotation","text":"add cellline annotation data.table metadata","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/add_CellLine_annotation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"add_CellLine_annotation — add_CellLine_annotation","text":"","code":"add_CellLine_annotation(   dt_metadata,   DB_cellid_header = \"cell_line_identifier\",   DB_cell_annotate = c(\"cell_line_name\", \"primary_tissue\", \"doubling_time\",     \"parental_identifier\", \"subtype\"),   fname = \"cell_lines.csv\",   fill = \"unknown\",   annotationPackage = if (\"gDRinternal\" %in% .packages(all.available = TRUE)) {          \"gDRinternal\"  } else {      \"gDRtestData\"  } )"},{"path":"https://gdrplatform.github.io/gDRcore/reference/add_CellLine_annotation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"add_CellLine_annotation — add_CellLine_annotation","text":"dt_metadata data.table metadata DB_cellid_header string colnames cell line identifier annotation file DB_cell_annotate character vector mandatory colnames used annotation file fname string file name annotation fill string indicating unknown cell lines filled DB annotationPackage string indication name package containing cellline annotation","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/add_CellLine_annotation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"add_CellLine_annotation — add_CellLine_annotation","text":"data.table metadata annotated cell lines","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/add_CellLine_annotation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"add_CellLine_annotation — add_CellLine_annotation","text":"logic adding celline annotation dt_metadata based annotation file stored gDRtestData. fields set \"unknown\". approach corrected implement final solution adding cell lines.","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/add_CellLine_annotation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"add_CellLine_annotation — add_CellLine_annotation","text":"","code":"add_CellLine_annotation(   data.table::data.table(     clid = \"123\",      CellLineName = \"name of the cell line\") ) #> INFO [2024-02-28 14:46:17] Merge with Cell line info #>      clid CellLineName  Tissue ReferenceDivisionTime parental_identifier #>    <char>       <char>  <char>                 <num>              <char> #> 1:    123          123 unknown                    NA                 123 #>    subtype        i.CellLineName #>     <char>                <char> #> 1: unknown name of the cell line"},{"path":"https://gdrplatform.github.io/gDRcore/reference/add_Drug_annotation.html","id":null,"dir":"Reference","previous_headings":"","what":"add_Drug_annotation — add_Drug_annotation","title":"add_Drug_annotation — add_Drug_annotation","text":"add drug annotation data.table metadata","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/add_Drug_annotation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"add_Drug_annotation — add_Drug_annotation","text":"","code":"add_Drug_annotation(   dt_metadata,   fname = \"drugs.csv\",   fill = \"unknown\",   annotationPackage = if (\"gDRinternal\" %in% .packages(all.available = TRUE)) {          \"gDRinternal\"  } else {      \"gDRtestData\"  } )"},{"path":"https://gdrplatform.github.io/gDRcore/reference/add_Drug_annotation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"add_Drug_annotation — add_Drug_annotation","text":"dt_metadata data.table metadata fname string file name annotation fill string indicating unknown cell lines filled DB annotationPackage string indication name package containing drug annotation","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/add_Drug_annotation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"add_Drug_annotation — add_Drug_annotation","text":"data.table metadata annotated drugs","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/add_Drug_annotation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"add_Drug_annotation — add_Drug_annotation","text":"logic adding drug annotation dt_metadata based annotation file stored gDRtestData.","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/add_Drug_annotation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"add_Drug_annotation — add_Drug_annotation","text":"","code":"add_Drug_annotation(   data.table::data.table(     Gnumber = \"drug_id\",      DrugName = \"name of the drug\") ) #>    Gnumber DrugName drug_moa #>     <char>   <char>   <char> #> 1: drug_id  drug_id  unknown"},{"path":"https://gdrplatform.github.io/gDRcore/reference/add_intermediate_data.html","id":null,"dir":"Reference","previous_headings":"","what":"add intermediate data (qs files) for given ma — add_intermediate_data","title":"add intermediate data (qs files) for given ma — add_intermediate_data","text":"add intermediate data (qs files) given ma","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/add_intermediate_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"add intermediate data (qs files) for given ma — add_intermediate_data","text":"","code":"add_intermediate_data(mae, data_dir, steps = get_pipeline_steps())"},{"path":"https://gdrplatform.github.io/gDRcore/reference/add_intermediate_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"add intermediate data (qs files) for given ma — add_intermediate_data","text":"mae mae dose-response data data_dir output directory steps character vector pipeline steps intermediate data saved","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/add_intermediate_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"add intermediate data (qs files) for given ma — add_intermediate_data","text":"NULL","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/calculate_GR_value.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate a GR value. — calculate_GR_value","title":"Calculate a GR value. — calculate_GR_value","text":"Calculate GR value given set dose response values.","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/calculate_GR_value.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate a GR value. — calculate_GR_value","text":"","code":"calculate_GR_value(   rel_viability,   corrected_readout,   day0_readout,   untrt_readout,   ndigit_rounding,   duration,   ref_div_time,   cap = 1.25 )  calculate_time_dep_GR_value(   corrected_readout,   day0_readout,   untrt_readout,   ndigit_rounding )  calculate_endpt_GR_value(   rel_viability,   duration,   ref_div_time,   cap = 1.25,   ndigit_rounding )"},{"path":"https://gdrplatform.github.io/gDRcore/reference/calculate_GR_value.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate a GR value. — calculate_GR_value","text":"rel_viability numeric vector representing Relative Viability. corrected_readout numeric vector containing corrected readout. day0_readout numeric vector containing day 0 readout. untrt_readout numeric vector containing untreated readout. ndigit_rounding integer specifying number digits use calculation rounding. duration numeric value specifying length time cells treated (hours). ref_div_time numeric value specifying reference division time cell line experiment. cap numeric value representing value cap highest allowed relative viability .","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/calculate_GR_value.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate a GR value. — calculate_GR_value","text":"numeric vector containing GR values, one value element input vectors.","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/calculate_GR_value.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate a GR value. — calculate_GR_value","text":"Note function expects numeric vectors length. calculate_GR_value try greedily calculate GR value. day 0 readouts available, duration ref_div_time used try back-calculate day 0 value order produce GR value. case calculating reference GR value multiple reference readout values, vectorized calculation performed resulting vector averaged outside function. Note expected ref_div_time duration reported units.","code":""},{"path":[]},{"path":"https://gdrplatform.github.io/gDRcore/reference/calculate_GR_value.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate a GR value. — calculate_GR_value","text":"","code":"duration <- 144 rv <- seq(0.1, 1, 0.1) corrected <- seq(41000, 50000, 1000) day0 <- seq(91000, 95500, 500) untrt <- rep(c(115000, 118000), 5)  calculate_GR_value(   rel_viability = rv,   corrected_readout = corrected,   day0_readout = day0,   untrt_readout = untrt,   ndigit_rounding = 4,   duration = duration,   ref_div_time = duration / 2 ) #>  [1] -0.9057 -0.8802 -0.9058 -0.8794 -0.9065 -0.8791 -0.9077 -0.8793 -0.9095 #> [10] -0.8800  readouts <- rep(10000, 5) calculate_time_dep_GR_value(readouts, readouts * 1.32, readouts * 2, 2) #> [1] -0.37 -0.37 -0.37 -0.37 -0.37  readouts <- rep(10000, 5) calculate_endpt_GR_value(readouts, 72, 1, ndigit_rounding = 2) #> [1] 1.01 1.01 1.01 1.01 1.01"},{"path":"https://gdrplatform.github.io/gDRcore/reference/calculate_excess.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the difference between values in two data.tables — calculate_excess","title":"Calculate the difference between values in two data.tables — calculate_excess","text":"Calculate difference values, likely representing metric, two data.tables.","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/calculate_excess.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the difference between values in two data.tables — calculate_excess","text":"","code":"calculate_excess(   metric,   measured,   series_identifiers,   metric_col,   measured_col )"},{"path":"https://gdrplatform.github.io/gDRcore/reference/calculate_excess.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the difference between values in two data.tables — calculate_excess","text":"metric data.table often representing readouts derived calculating metric. Examples include hsa bliss calculations single-agent data. measured data.table often representing measured data experiment. series_identifiers character vector identifiers measured metric define unique data point. metric_col string column metric use excess calculation. measured_col string column measured use excess calculation.","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/calculate_excess.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the difference between values in two data.tables — calculate_excess","text":"data.table measured, now additional column named excess (positive values synergy/benefit).","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/calculate_excess.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the difference between values in two data.tables — calculate_excess","text":"","code":"metric <- data.table::data.table(   Concentration = c(1, 2, 3, 1, 2, 3),   Concentration_2 = c(1, 1, 1, 2, 2, 2),   GRvalue = c(100, 200, 300, 400, 500, 600) ) measured <- data.table::data.table(   Concentration = c(3, 1, 2, 2, 1, 3),   Concentration_2 = c(1, 1, 1, 2, 2, 2),   testvalue = c(200, 0, 100, 400, 300, 500) ) series_identifiers <- c(\"Concentration\", \"Concentration_2\") metric_col <- \"GRvalue\" measured_col <- \"testvalue\" calculate_excess(   metric,    measured,    series_identifiers,    metric_col,    measured_col ) #>    Concentration Concentration_2     x #>            <num>           <num> <num> #> 1:             3               1   100 #> 2:             1               1   100 #> 3:             2               1   100 #> 4:             2               2   100 #> 5:             1               2   100 #> 6:             3               2   100"},{"path":"https://gdrplatform.github.io/gDRcore/reference/calculate_matrix_metric.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate a metric for combination data. — calculate_matrix_metric","title":"Calculate a metric for combination data. — calculate_matrix_metric","text":"Calculate metric based single-agent values combination screens.","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/calculate_matrix_metric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate a metric for combination data. — calculate_matrix_metric","text":"","code":"calculate_HSA(sa1, series_id1, sa2, series_id2, metric)  calculate_Bliss(   sa1,   series_id1,   sa2,   series_id2,   metric,   measured_col = \"smooth\" )  .calculate_matrix_metric(   sa1,   series_id1,   sa2,   series_id2,   metric,   FXN,   measured_col = \"x\" )"},{"path":"https://gdrplatform.github.io/gDRcore/reference/calculate_matrix_metric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate a metric for combination data. — calculate_matrix_metric","text":"sa1 data.table containing single agent data entries series_id2 0. Columns data.table include identifiers metric interest. Metric stored 'x' column. series_id1 String representing column within sa1 represents id1. sa2 data.table containing single agent data entries series_id1 0. Columns data.table include identifiers metric interest.n Metric stored 'x' column. series_id2 String representing column within sa2 represents id2. metric String specifying metric interest. Usually either 'GRvalue' 'RelativeViability'. measured_col String specyfying measured colname. FXN Function apply single-agent fits calculate metric.","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/calculate_matrix_metric.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate a metric for combination data. — calculate_matrix_metric","text":"data.table containing single row every unique combination two series identifiers corresponding calculated metric row.","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/calculate_matrix_metric.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate a metric for combination data. — calculate_matrix_metric","text":"calculate_HSA takes minimum two single agents readouts. calculate_Bliss performs Bliss additivity calculation based single agent effects, defined 1-x corresponding normalization. See https://www.sciencedirect.com/science/article/pii/S1359644619303460?via%3Dihub#tb0005 details.","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/calculate_matrix_metric.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate a metric for combination data. — calculate_matrix_metric","text":"","code":"n <- 10 sa1 <- data.table::data.table(conc = seq(n), conc2 = rep(0, n), smooth = seq(n)) sa2 <- data.table::data.table(conc = rep(0, n), conc2 = seq(n), smooth = seq(n)) calculate_HSA(sa1, \"conc\", sa2, \"conc2\", \"smooth\") #>       conc conc2 metric1 metric2 metric #>      <int> <int>   <int>   <int>  <int> #>   1:     1     1       1       1      1 #>   2:     2     1       2       1      1 #>   3:     3     1       3       1      1 #>   4:     4     1       4       1      1 #>   5:     5     1       5       1      1 #>   6:     6     1       6       1      1 #>   7:     7     1       7       1      1 #>   8:     8     1       8       1      1 #>   9:     9     1       9       1      1 #>  10:    10     1      10       1      1 #>  11:     1     2       1       2      1 #>  12:     2     2       2       2      2 #>  13:     3     2       3       2      2 #>  14:     4     2       4       2      2 #>  15:     5     2       5       2      2 #>  16:     6     2       6       2      2 #>  17:     7     2       7       2      2 #>  18:     8     2       8       2      2 #>  19:     9     2       9       2      2 #>  20:    10     2      10       2      2 #>  21:     1     3       1       3      1 #>  22:     2     3       2       3      2 #>  23:     3     3       3       3      3 #>  24:     4     3       4       3      3 #>  25:     5     3       5       3      3 #>  26:     6     3       6       3      3 #>  27:     7     3       7       3      3 #>  28:     8     3       8       3      3 #>  29:     9     3       9       3      3 #>  30:    10     3      10       3      3 #>  31:     1     4       1       4      1 #>  32:     2     4       2       4      2 #>  33:     3     4       3       4      3 #>  34:     4     4       4       4      4 #>  35:     5     4       5       4      4 #>  36:     6     4       6       4      4 #>  37:     7     4       7       4      4 #>  38:     8     4       8       4      4 #>  39:     9     4       9       4      4 #>  40:    10     4      10       4      4 #>  41:     1     5       1       5      1 #>  42:     2     5       2       5      2 #>  43:     3     5       3       5      3 #>  44:     4     5       4       5      4 #>  45:     5     5       5       5      5 #>  46:     6     5       6       5      5 #>  47:     7     5       7       5      5 #>  48:     8     5       8       5      5 #>  49:     9     5       9       5      5 #>  50:    10     5      10       5      5 #>  51:     1     6       1       6      1 #>  52:     2     6       2       6      2 #>  53:     3     6       3       6      3 #>  54:     4     6       4       6      4 #>  55:     5     6       5       6      5 #>  56:     6     6       6       6      6 #>  57:     7     6       7       6      6 #>  58:     8     6       8       6      6 #>  59:     9     6       9       6      6 #>  60:    10     6      10       6      6 #>  61:     1     7       1       7      1 #>  62:     2     7       2       7      2 #>  63:     3     7       3       7      3 #>  64:     4     7       4       7      4 #>  65:     5     7       5       7      5 #>  66:     6     7       6       7      6 #>  67:     7     7       7       7      7 #>  68:     8     7       8       7      7 #>  69:     9     7       9       7      7 #>  70:    10     7      10       7      7 #>  71:     1     8       1       8      1 #>  72:     2     8       2       8      2 #>  73:     3     8       3       8      3 #>  74:     4     8       4       8      4 #>  75:     5     8       5       8      5 #>  76:     6     8       6       8      6 #>  77:     7     8       7       8      7 #>  78:     8     8       8       8      8 #>  79:     9     8       9       8      8 #>  80:    10     8      10       8      8 #>  81:     1     9       1       9      1 #>  82:     2     9       2       9      2 #>  83:     3     9       3       9      3 #>  84:     4     9       4       9      4 #>  85:     5     9       5       9      5 #>  86:     6     9       6       9      6 #>  87:     7     9       7       9      7 #>  88:     8     9       8       9      8 #>  89:     9     9       9       9      9 #>  90:    10     9      10       9      9 #>  91:     1    10       1      10      1 #>  92:     2    10       2      10      2 #>  93:     3    10       3      10      3 #>  94:     4    10       4      10      4 #>  95:     5    10       5      10      5 #>  96:     6    10       6      10      6 #>  97:     7    10       7      10      7 #>  98:     8    10       8      10      8 #>  99:     9    10       9      10      9 #> 100:    10    10      10      10     10 #>       conc conc2 metric1 metric2 metric n <- 10 sa1 <- data.table::data.table(conc = seq(n), conc2 = rep(0, n), smooth = seq(n)) sa2 <- data.table::data.table(conc = rep(0, n), conc2 = seq(n), smooth = seq(n)) calculate_Bliss(sa1, \"conc\", sa2, \"conc2\", \"smooth\") #>       conc conc2 metric1 metric2 metric #>      <int> <int>   <int>   <int>  <int> #>   1:     1     1       1       1      1 #>   2:     2     1       2       1      2 #>   3:     3     1       3       1      3 #>   4:     4     1       4       1      4 #>   5:     5     1       5       1      5 #>   6:     6     1       6       1      6 #>   7:     7     1       7       1      7 #>   8:     8     1       8       1      8 #>   9:     9     1       9       1      9 #>  10:    10     1      10       1     10 #>  11:     1     2       1       2      2 #>  12:     2     2       2       2      4 #>  13:     3     2       3       2      6 #>  14:     4     2       4       2      8 #>  15:     5     2       5       2     10 #>  16:     6     2       6       2     12 #>  17:     7     2       7       2     14 #>  18:     8     2       8       2     16 #>  19:     9     2       9       2     18 #>  20:    10     2      10       2     20 #>  21:     1     3       1       3      3 #>  22:     2     3       2       3      6 #>  23:     3     3       3       3      9 #>  24:     4     3       4       3     12 #>  25:     5     3       5       3     15 #>  26:     6     3       6       3     18 #>  27:     7     3       7       3     21 #>  28:     8     3       8       3     24 #>  29:     9     3       9       3     27 #>  30:    10     3      10       3     30 #>  31:     1     4       1       4      4 #>  32:     2     4       2       4      8 #>  33:     3     4       3       4     12 #>  34:     4     4       4       4     16 #>  35:     5     4       5       4     20 #>  36:     6     4       6       4     24 #>  37:     7     4       7       4     28 #>  38:     8     4       8       4     32 #>  39:     9     4       9       4     36 #>  40:    10     4      10       4     40 #>  41:     1     5       1       5      5 #>  42:     2     5       2       5     10 #>  43:     3     5       3       5     15 #>  44:     4     5       4       5     20 #>  45:     5     5       5       5     25 #>  46:     6     5       6       5     30 #>  47:     7     5       7       5     35 #>  48:     8     5       8       5     40 #>  49:     9     5       9       5     45 #>  50:    10     5      10       5     50 #>  51:     1     6       1       6      6 #>  52:     2     6       2       6     12 #>  53:     3     6       3       6     18 #>  54:     4     6       4       6     24 #>  55:     5     6       5       6     30 #>  56:     6     6       6       6     36 #>  57:     7     6       7       6     42 #>  58:     8     6       8       6     48 #>  59:     9     6       9       6     54 #>  60:    10     6      10       6     60 #>  61:     1     7       1       7      7 #>  62:     2     7       2       7     14 #>  63:     3     7       3       7     21 #>  64:     4     7       4       7     28 #>  65:     5     7       5       7     35 #>  66:     6     7       6       7     42 #>  67:     7     7       7       7     49 #>  68:     8     7       8       7     56 #>  69:     9     7       9       7     63 #>  70:    10     7      10       7     70 #>  71:     1     8       1       8      8 #>  72:     2     8       2       8     16 #>  73:     3     8       3       8     24 #>  74:     4     8       4       8     32 #>  75:     5     8       5       8     40 #>  76:     6     8       6       8     48 #>  77:     7     8       7       8     56 #>  78:     8     8       8       8     64 #>  79:     9     8       9       8     72 #>  80:    10     8      10       8     80 #>  81:     1     9       1       9      9 #>  82:     2     9       2       9     18 #>  83:     3     9       3       9     27 #>  84:     4     9       4       9     36 #>  85:     5     9       5       9     45 #>  86:     6     9       6       9     54 #>  87:     7     9       7       9     63 #>  88:     8     9       8       9     72 #>  89:     9     9       9       9     81 #>  90:    10     9      10       9     90 #>  91:     1    10       1      10     10 #>  92:     2    10       2      10     20 #>  93:     3    10       3      10     30 #>  94:     4    10       4      10     40 #>  95:     5    10       5      10     50 #>  96:     6    10       6      10     60 #>  97:     7    10       7      10     70 #>  98:     8    10       8      10     80 #>  99:     9    10       9      10     90 #> 100:    10    10      10      10    100 #>       conc conc2 metric1 metric2 metric"},{"path":"https://gdrplatform.github.io/gDRcore/reference/cleanup_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"cleanup_metadata — cleanup_metadata","title":"cleanup_metadata — cleanup_metadata","text":"Cleanup data.table metadata","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/cleanup_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"cleanup_metadata — cleanup_metadata","text":"","code":"cleanup_metadata(df_metadata)"},{"path":"https://gdrplatform.github.io/gDRcore/reference/cleanup_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"cleanup_metadata — cleanup_metadata","text":"df_metadata data.table metadata","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/cleanup_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"cleanup_metadata — cleanup_metadata","text":"data.table cleaned metadata","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/cleanup_metadata.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"cleanup_metadata — cleanup_metadata","text":"Adds annotations check whether user provided correct input data.","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/cleanup_metadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"cleanup_metadata — cleanup_metadata","text":"","code":"df <- data.table::data.table(   clid = \"CELL_LINE\",   Gnumber = \"DRUG_1\",   Concentration = c(0, 1),   Duration = 72 ) cleanup_df <- cleanup_metadata(df) #> INFO [2024-02-28 14:46:19] Merge with Cell line info"},{"path":"https://gdrplatform.github.io/gDRcore/reference/convert_mae_to_raw_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform mae into raw data — convert_mae_to_raw_data","title":"Transform mae into raw data — convert_mae_to_raw_data","text":"Transform mae raw data","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/convert_mae_to_raw_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform mae into raw data — convert_mae_to_raw_data","text":"","code":"convert_mae_to_raw_data(mae)"},{"path":"https://gdrplatform.github.io/gDRcore/reference/convert_mae_to_raw_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform mae into raw data — convert_mae_to_raw_data","text":"mae MultiAssayExperiment object SummarizedExperiments containing \"RawTreated\" \"Controls\" assays","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/convert_mae_to_raw_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform mae into raw data — convert_mae_to_raw_data","text":"data.table raw data","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/convert_mae_to_raw_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform mae into raw data — convert_mae_to_raw_data","text":"","code":"mae <- gDRutils::get_synthetic_data(\"finalMAE_small\") #> Loading required package: MultiAssayExperiment #> Loading required package: SummarizedExperiment #> Loading required package: MatrixGenerics #> Loading required package: matrixStats #>  #> Attaching package: ‘MatrixGenerics’ #> The following objects are masked from ‘package:matrixStats’: #>  #>     colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse, #>     colCounts, colCummaxs, colCummins, colCumprods, colCumsums, #>     colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs, #>     colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats, #>     colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds, #>     colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads, #>     colWeightedMeans, colWeightedMedians, colWeightedSds, #>     colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet, #>     rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods, #>     rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps, #>     rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins, #>     rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks, #>     rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars, #>     rowWeightedMads, rowWeightedMeans, rowWeightedMedians, #>     rowWeightedSds, rowWeightedVars #> Loading required package: GenomicRanges #> Loading required package: stats4 #> Loading required package: BiocGenerics #>  #> Attaching package: ‘BiocGenerics’ #> The following objects are masked from ‘package:stats’: #>  #>     IQR, mad, sd, var, xtabs #> The following objects are masked from ‘package:base’: #>  #>     Filter, Find, Map, Position, Reduce, anyDuplicated, aperm, append, #>     as.data.frame, basename, cbind, colnames, dirname, do.call, #>     duplicated, eval, evalq, get, grep, grepl, intersect, is.unsorted, #>     lapply, mapply, match, mget, order, paste, pmax, pmax.int, pmin, #>     pmin.int, rank, rbind, rownames, sapply, setdiff, sort, table, #>     tapply, union, unique, unsplit, which.max, which.min #> Loading required package: S4Vectors #>  #> Attaching package: ‘S4Vectors’ #> The following object is masked from ‘package:utils’: #>  #>     findMatches #> The following objects are masked from ‘package:base’: #>  #>     I, expand.grid, unname #> Loading required package: IRanges #> Loading required package: GenomeInfoDb #> Loading required package: Biobase #> Welcome to Bioconductor #>  #>     Vignettes contain introductory material; view with #>     'browseVignettes()'. To cite Bioconductor, see #>     'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'. #>  #> Attaching package: ‘Biobase’ #> The following object is masked from ‘package:MatrixGenerics’: #>  #>     rowMedians #> The following objects are masked from ‘package:matrixStats’: #>  #>     anyMissing, rowMedians convert_mae_to_raw_data(mae) #> Loading required package: BumpyMatrix #>       Barcode Concentration masked ReadoutValue Gnumber DrugName drug_moa #>        <char>         <num> <lgcl>        <num>  <char>   <char>   <char> #>    1: plate_1             0  FALSE         95.7 vehicle  vehicle  vehicle #>    2: plate_1             0  FALSE        100.2 vehicle  vehicle  vehicle #>    3: plate_1             0  FALSE        102.6 vehicle  vehicle  vehicle #>    4: plate_1             0  FALSE        101.6 vehicle  vehicle  vehicle #>    5: plate_1             0  FALSE         99.9 vehicle  vehicle  vehicle #>   ---                                                                     #> 3296: plate_3            10  FALSE         57.7  G00011 drug_011    moa_B #> 3297: plate_3            10  FALSE         37.7  G00011 drug_011    moa_B #> 3298: plate_3            10  FALSE         28.6  G00011 drug_011    moa_B #> 3299: plate_3            10  FALSE         29.6  G00011 drug_011    moa_B #> 3300: plate_3            10  FALSE         11.0  G00011 drug_011    moa_B #>       Duration    clid CellLineName   Tissue ReferenceDivisionTime #>          <num>  <char>       <char>   <char>                 <num> #>    1:       72 CL00011  cellline_BA tissue_x                    26 #>    2:       72 CL00012  cellline_CA tissue_x                    30 #>    3:       72 CL00013  cellline_DA tissue_x                    34 #>    4:       72 CL00014  cellline_EA tissue_x                    38 #>    5:       72 CL00015  cellline_FA tissue_x                    42 #>   ---                                                              #> 3296:       72 CL00016  cellline_GB tissue_y                    46 #> 3297:       72 CL00017  cellline_HB tissue_y                    50 #> 3298:       72 CL00018  cellline_IB tissue_y                    54 #> 3299:       72 CL00019  cellline_JB tissue_z                    58 #> 3300:       72 CL00020  cellline_KB tissue_z                    62"},{"path":"https://gdrplatform.github.io/gDRcore/reference/convert_se_to_raw_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform se into raw_data — convert_se_to_raw_data","title":"Transform se into raw_data — convert_se_to_raw_data","text":"Transform se raw_data","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/convert_se_to_raw_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform se into raw_data — convert_se_to_raw_data","text":"","code":"convert_se_to_raw_data(se)"},{"path":"https://gdrplatform.github.io/gDRcore/reference/convert_se_to_raw_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform se into raw_data — convert_se_to_raw_data","text":"se SummarizedExperiment object \"RawTreated\" \"Controls\" assays","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/convert_se_to_raw_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform se into raw_data — convert_se_to_raw_data","text":"data.table raw data","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/convert_se_to_raw_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform se into raw_data — convert_se_to_raw_data","text":"","code":"mae <- gDRutils::get_synthetic_data(\"finalMAE_small\") se <- mae[[1]] convert_se_to_raw_data(se) #>       Barcode Concentration BackgroundValue record_id masked ReadoutValue #>        <char>         <num>           <num>     <int> <lgcl>        <num> #>    1: plate_1   0.001000000               0       601  FALSE         93.5 #>    2: plate_1   0.003162278               0       901  FALSE         74.8 #>    3: plate_1   0.010000000               0      1201  FALSE         40.1 #>    4: plate_1   0.031622777               0      1501  FALSE         33.2 #>    5: plate_1   0.100000000               0      1801  FALSE         31.5 #>   ---                                                                     #> 8696: plate_2   0.000000000               0       110  FALSE        104.0 #> 8697: plate_2   0.000000000               0       190  FALSE        104.1 #> 8698: plate_1   0.000000000               0        80  FALSE        104.4 #> 8699: plate_3   0.000000000               0       560  FALSE        104.6 #> 8700: plate_3   0.000000000               0       570  FALSE        104.7 #>       Gnumber DrugName drug_moa Duration    clid CellLineName   Tissue #>        <char>   <char>   <char>    <num>  <char>       <char>   <char> #>    1:  G00002 drug_002    moa_A       72 CL00011  cellline_BA tissue_x #>    2:  G00002 drug_002    moa_A       72 CL00011  cellline_BA tissue_x #>    3:  G00002 drug_002    moa_A       72 CL00011  cellline_BA tissue_x #>    4:  G00002 drug_002    moa_A       72 CL00011  cellline_BA tissue_x #>    5:  G00002 drug_002    moa_A       72 CL00011  cellline_BA tissue_x #>   ---                                                                  #> 8696: vehicle  vehicle  vehicle       72 CL00020  cellline_KB tissue_z #> 8697: vehicle  vehicle  vehicle       72 CL00020  cellline_KB tissue_z #> 8698: vehicle  vehicle  vehicle       72 CL00020  cellline_KB tissue_z #> 8699: vehicle  vehicle  vehicle       72 CL00020  cellline_KB tissue_z #> 8700: vehicle  vehicle  vehicle       72 CL00020  cellline_KB tissue_z #>       ReferenceDivisionTime #>                       <num> #>    1:                    26 #>    2:                    26 #>    3:                    26 #>    4:                    26 #>    5:                    26 #>   ---                       #> 8696:                    62 #> 8697:                    62 #> 8698:                    62 #> 8699:                    62 #> 8700:                    62"},{"path":"https://gdrplatform.github.io/gDRcore/reference/data_model.character.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect model of data from experiment name — data_model.character","title":"Detect model of data from experiment name — data_model.character","text":"Detect model data experiment name","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/data_model.character.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect model of data from experiment name — data_model.character","text":"","code":"# S3 method for character data_model(x)"},{"path":"https://gdrplatform.github.io/gDRcore/reference/data_model.character.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect model of data from experiment name — data_model.character","text":"x character experiment name","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/data_model.character.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect model of data from experiment name — data_model.character","text":"string information raw data follows single-agent combination data model","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/data_model.data.table.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect model of data in data.table — data_model.data.table","title":"Detect model of data in data.table — data_model.data.table","text":"Detect model data data.table","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/data_model.data.table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect model of data in data.table — data_model.data.table","text":"","code":"# S3 method for data.table data_model(x)"},{"path":"https://gdrplatform.github.io/gDRcore/reference/data_model.data.table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect model of data in data.table — data_model.data.table","text":"x data.table raw drug response data containing treated untreated values.","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/data_model.data.table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect model of data in data.table — data_model.data.table","text":"string information raw data follows single-agent combination data model","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/data_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect model of data — data_model","title":"Detect model of data — data_model","text":"Detect model data","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/data_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect model of data — data_model","text":"","code":"data_model(x)"},{"path":"https://gdrplatform.github.io/gDRcore/reference/data_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect model of data — data_model","text":"x data.table raw data SummarizedExperiment object gDR assays","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/data_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect model of data — data_model","text":"string information raw data follows single-agent combination data model","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/data_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect model of data — data_model","text":"","code":"data_model(\"single-agent\") #> [1] \"single-agent\""},{"path":"https://gdrplatform.github.io/gDRcore/reference/define_matrix_grid_positions.html","id":null,"dir":"Reference","previous_headings":"","what":"Define matrix grid positions — define_matrix_grid_positions","title":"Define matrix grid positions — define_matrix_grid_positions","text":"Define matrix grid positions","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/define_matrix_grid_positions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define matrix grid positions — define_matrix_grid_positions","text":"","code":"define_matrix_grid_positions(conc1, conc2)"},{"path":"https://gdrplatform.github.io/gDRcore/reference/define_matrix_grid_positions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define matrix grid positions — define_matrix_grid_positions","text":"conc1 drug_1 concentration conc2 drug_2 concentration","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/define_matrix_grid_positions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define matrix grid positions — define_matrix_grid_positions","text":"list axis grid positions","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/define_matrix_grid_positions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Define matrix grid positions — define_matrix_grid_positions","text":"drug_1 diluted along rows y-axis drug_2 diluted along columns x-axis.","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/do_skip_step.html","id":null,"dir":"Reference","previous_headings":"","what":"check if the given step can be skipped if partial run is chosen — do_skip_step","title":"check if the given step can be skipped if partial run is chosen — do_skip_step","text":"check given step can skipped partial run chosen","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/do_skip_step.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check if the given step can be skipped if partial run is chosen — do_skip_step","text":"","code":"do_skip_step(current_step, start_from, steps = get_pipeline_steps())"},{"path":"https://gdrplatform.github.io/gDRcore/reference/do_skip_step.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check if the given step can be skipped if partial run is chosen — do_skip_step","text":"current_step, string step evaluated start_from string indicating pipeline step partial run launched steps charvect available steps","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/do_skip_step.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"check if the given step can be skipped if partial run is chosen — do_skip_step","text":"logical","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/dot-map_references.html","id":null,"dir":"Reference","previous_headings":"","what":"Map references — .map_references","title":"Map references — .map_references","text":"Map references","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/dot-map_references.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map references — .map_references","text":"","code":".map_references(   mat_elem,   rowData_colnames = c(gDRutils::get_env_identifiers(\"duration\"), paste0(c(\"drug\",     \"drug_name\", \"drug_moa\"), \"3\")) )"},{"path":"https://gdrplatform.github.io/gDRcore/reference/dot-map_references.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map references — .map_references","text":"mat_elem input data frame rowData_colnames character vector variables mapping reference treatments","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/dot-map_references.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map references — .map_references","text":"list","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/dot-map_references.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Map references — .map_references","text":"Using given rownames, map treated reference conditions.","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/dot-standardize_conc.html","id":null,"dir":"Reference","previous_headings":"","what":"Standardize concentration values. — .standardize_conc","title":"Standardize concentration values. — .standardize_conc","text":"Standardize concentration values.","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/dot-standardize_conc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standardize concentration values. — .standardize_conc","text":"","code":".standardize_conc(conc)"},{"path":"https://gdrplatform.github.io/gDRcore/reference/dot-standardize_conc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standardize concentration values. — .standardize_conc","text":"conc numeric vector concentrations","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/dot-standardize_conc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Standardize concentration values. — .standardize_conc","text":"vector standardized concentrations","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/dot-standardize_conc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Standardize concentration values. — .standardize_conc","text":"conc passed, NULL returned.","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/dot-standardize_conc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Standardize concentration values. — .standardize_conc","text":"","code":"concs <- 10 ^ (seq(-1, 1, 0.9)) .standardize_conc(concs) #> [1] 0.100 0.794 6.310"},{"path":"https://gdrplatform.github.io/gDRcore/reference/fit_SE.combinations.html","id":null,"dir":"Reference","previous_headings":"","what":"fit_SE for combination screens — fit_SE.combinations","title":"fit_SE for combination screens — fit_SE.combinations","text":"Perform fittings combination screens.","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/fit_SE.combinations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fit_SE for combination screens — fit_SE.combinations","text":"","code":"fit_SE.combinations(   se,   data_type = gDRutils::get_experiment_groups(\"combination\"),   series_identifiers = NULL,   normalization_types = c(\"GR\", \"RV\"),   averaged_assay = \"Averaged\",   metrics_assay = \"Metrics\" )"},{"path":"https://gdrplatform.github.io/gDRcore/reference/fit_SE.combinations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"fit_SE for combination screens — fit_SE.combinations","text":"se SummarizedExperiment object BumpyMatrix assay containing averaged data. data_type single-agent vs combination series_identifiers character vector column names nested DFrame corresponding nested identifiers. normalization_types character vector normalization types used calculating combo matrix. averaged_assay string name averaged assay use input. se. metrics_assay string name metrics assay output returned SummarizedExperiment. whose combination represents unique series fit curves.","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/fit_SE.combinations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"fit_SE for combination screens — fit_SE.combinations","text":"codeSummarizedExperiment object additional assay containing combination metrics.","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/fit_SE.combinations.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"fit_SE for combination screens — fit_SE.combinations","text":"function assumes combination set concentrations nested assay.","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/fit_SE.combinations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"fit_SE for combination screens — fit_SE.combinations","text":"","code":"fmae_cms <- gDRutils::get_synthetic_data(\"finalMAE_combo_matrix_small\")  se1 <- fmae_cms[[gDRutils::get_experiment_groups(\"combination\")]] SummarizedExperiment::assays(se1) <-    SummarizedExperiment::assays(se1)[\"Averaged\"] fit_SE.combinations(se1[1, 1]) #> Warning: overriding original x_0 argument '1' with '1' (only 1 normalized value detected, setting constant fit) #> Warning: overriding original x_0 argument '1' with '1' (only 1 normalized value detected, setting constant fit) #> Warning: overriding original x_0 argument '0.937720959525358' with '0.9563' (only 1 normalized value detected, setting constant fit) #> Warning: overriding original x_0 argument '0.411661143403392' with '0.4075' (only 1 normalized value detected, setting constant fit) #> Warning: overriding original x_0 argument '-0.466087101282658' with '-0.4678' (only 1 normalized value detected, setting constant fit) #> Warning: overriding original x_0 argument '-0.638711813664539' with '-0.5972' (only 1 normalized value detected, setting constant fit) #> Warning: overriding original x_0 argument '-0.65250302581797' with '-0.6296' (only 1 normalized value detected, setting constant fit) #> Warning: overriding original x_0 argument '-0.653485583857411' with '-0.692' (only 1 normalized value detected, setting constant fit) #> Warning: overriding original x_0 argument '-0.653555270837867' with '-0.7039' (only 1 normalized value detected, setting constant fit) #> Warning: overriding original x_0 argument '-0.653560191563928' with '-0.7046' (only 1 normalized value detected, setting constant fit) #> Warning: NaNs produced #> Warning: NaNs produced #> Warning: NaNs produced #> Warning: NaNs produced #> Warning: NaNs produced #> Warning: NaNs produced #> Warning: overriding original x_0 argument '1' with '1' (only 1 normalized value detected, setting constant fit) #> Warning: overriding original x_0 argument '1' with '1' (only 1 normalized value detected, setting constant fit) #> Warning: overriding original x_0 argument '0.960100165903769' with '0.966' (only 1 normalized value detected, setting constant fit) #> Warning: overriding original x_0 argument '0.578859775899146' with '0.577' (only 1 normalized value detected, setting constant fit) #> Warning: overriding original x_0 argument '0.123503648078634' with '0.1259' (only 1 normalized value detected, setting constant fit) #> Warning: overriding original x_0 argument '0.0689925257550951' with '0.0814' (only 1 normalized value detected, setting constant fit) #> Warning: overriding original x_0 argument '0.0658336504167383' with '0.0714' (only 1 normalized value detected, setting constant fit) #> Warning: overriding original x_0 argument '0.0656619818287103' with '0.0535' (only 1 normalized value detected, setting constant fit) #> Warning: overriding original x_0 argument '0.0656526460997796' with '0.0503' (only 1 normalized value detected, setting constant fit) #> Warning: overriding original x_0 argument '0.0656521405542176' with '0.0501' (only 1 normalized value detected, setting constant fit) #> Warning: NaNs produced #> Warning: NaNs produced #> Warning: NaNs produced #> Warning: NaNs produced #> Warning: NaNs produced #> Warning: NaNs produced #> class: SummarizedExperiment  #> dim: 1 1  #> metadata(3): identifiers experiment_metadata Keys #> assays(6): Averaged excess ... scores Metrics #> rownames(1): G00004_drug_004_moa_A_G00021_drug_021_moa_D_72 #> rowData names(7): Gnumber DrugName ... drug_moa_2 Duration #> colnames(1): CL00016_cellline_GB_tissue_y_46 #> colData names(4): clid CellLineName Tissue ReferenceDivisionTime"},{"path":"https://gdrplatform.github.io/gDRcore/reference/gDRcore-package.html","id":null,"dir":"Reference","previous_headings":"","what":"gDRcore: Processing functions and interface to process and analyze drug dose-response data — gDRcore-package","title":"gDRcore: Processing functions and interface to process and analyze drug dose-response data — gDRcore-package","text":"package contains core functions process analyze drug response data. package provides tools normalizing, averaging, calculation gDR metrics data. core functions wrapped pipeline function allowing analyzing data straightforward way.","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/gDRcore-package.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"gDRcore: Processing functions and interface to process and analyze drug dose-response data — gDRcore-package","text":"package help page","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/gDRcore-package.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"gDRcore: Processing functions and interface to process and analyze drug dose-response data — gDRcore-package","text":"learn functions start help(package = \"gDRcore\")","code":""},{"path":[]},{"path":"https://gdrplatform.github.io/gDRcore/reference/gDRcore-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"gDRcore: Processing functions and interface to process and analyze drug dose-response data — gDRcore-package","text":"Maintainer: Arkadiusz Gladki gladki.arkadiusz@gmail.com Authors: Bartosz Czech bartosz.czech@contractors.roche.com Marc Hafner Pawel Piatkowski Natalia Potocka Dariusz Scigocki Janina Smola Sergiu Mocanu Allison Vuong","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/generateCodilution.html","id":null,"dir":"Reference","previous_headings":"","what":"generateCodilution — generateCodilution","title":"generateCodilution — generateCodilution","text":"generateCodilution","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/generateCodilution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generateCodilution — generateCodilution","text":"","code":"generateCodilution(cell_lines, drugs, save = TRUE)"},{"path":"https://gdrplatform.github.io/gDRcore/reference/generateCodilution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"generateCodilution — generateCodilution","text":"data.table raw input data MAE processed data","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/generateCodilutionSmall.html","id":null,"dir":"Reference","previous_headings":"","what":"generateCodilutionSmall — generateCodilutionSmall","title":"generateCodilutionSmall — generateCodilutionSmall","text":"generateCodilutionSmall","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/generateCodilutionSmall.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generateCodilutionSmall — generateCodilutionSmall","text":"","code":"generateCodilutionSmall(cell_lines, drugs, save = TRUE)"},{"path":"https://gdrplatform.github.io/gDRcore/reference/generateCodilutionSmall.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"generateCodilutionSmall — generateCodilutionSmall","text":"data.table raw input data MAE processed data","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/generateComboMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"generateComboMatrix — generateComboMatrix","title":"generateComboMatrix — generateComboMatrix","text":"generateComboMatrix","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/generateComboMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generateComboMatrix — generateComboMatrix","text":"","code":"generateComboMatrix(cell_lines, drugs, save = TRUE)"},{"path":"https://gdrplatform.github.io/gDRcore/reference/generateComboMatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"generateComboMatrix — generateComboMatrix","text":"data.table raw input data MAE processed data","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/generateComboMatrixSmall.html","id":null,"dir":"Reference","previous_headings":"","what":"generateComboMatrixSmall — generateComboMatrixSmall","title":"generateComboMatrixSmall — generateComboMatrixSmall","text":"generateComboMatrixSmall","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/generateComboMatrixSmall.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generateComboMatrixSmall — generateComboMatrixSmall","text":"","code":"generateComboMatrixSmall(cell_lines, drugs, save = TRUE)"},{"path":"https://gdrplatform.github.io/gDRcore/reference/generateComboMatrixSmall.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"generateComboMatrixSmall — generateComboMatrixSmall","text":"data.table raw input data MAE processed data","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/generateComboNoNoiseData.html","id":null,"dir":"Reference","previous_headings":"","what":"generateComboNoNoiseData — generateComboNoNoiseData","title":"generateComboNoNoiseData — generateComboNoNoiseData","text":"generateComboNoNoiseData","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/generateComboNoNoiseData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generateComboNoNoiseData — generateComboNoNoiseData","text":"","code":"generateComboNoNoiseData(cell_lines, drugs, save = TRUE)"},{"path":"https://gdrplatform.github.io/gDRcore/reference/generateComboNoNoiseData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"generateComboNoNoiseData — generateComboNoNoiseData","text":"data.table raw input data MAE processed data","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/generateComboNoNoiseData2.html","id":null,"dir":"Reference","previous_headings":"","what":"generateComboNoNoiseData2 — generateComboNoNoiseData2","title":"generateComboNoNoiseData2 — generateComboNoNoiseData2","text":"generateComboNoNoiseData2","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/generateComboNoNoiseData2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generateComboNoNoiseData2 — generateComboNoNoiseData2","text":"","code":"generateComboNoNoiseData2(cell_lines, drugs, save = TRUE)"},{"path":"https://gdrplatform.github.io/gDRcore/reference/generateComboNoNoiseData2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"generateComboNoNoiseData2 — generateComboNoNoiseData2","text":"data.table raw input data MAE processed data","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/generateComboNoNoiseData3.html","id":null,"dir":"Reference","previous_headings":"","what":"generateComboNoNoiseData3 — generateComboNoNoiseData3","title":"generateComboNoNoiseData3 — generateComboNoNoiseData3","text":"generateComboNoNoiseData3","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/generateComboNoNoiseData3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generateComboNoNoiseData3 — generateComboNoNoiseData3","text":"","code":"generateComboNoNoiseData3(cell_lines, drugs, save = TRUE)"},{"path":"https://gdrplatform.github.io/gDRcore/reference/generateComboNoNoiseData3.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"generateComboNoNoiseData3 — generateComboNoNoiseData3","text":"data.table raw input data MAE processed data","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/generateLigandData.html","id":null,"dir":"Reference","previous_headings":"","what":"generateLigandData — generateLigandData","title":"generateLigandData — generateLigandData","text":"generateLigandData","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/generateLigandData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generateLigandData — generateLigandData","text":"","code":"generateLigandData(cell_lines, drugs, save = TRUE)"},{"path":"https://gdrplatform.github.io/gDRcore/reference/generateLigandData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"generateLigandData — generateLigandData","text":"data.table raw input data MAE processed data","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/generateMediumData.html","id":null,"dir":"Reference","previous_headings":"","what":"generateMediumData — generateMediumData","title":"generateMediumData — generateMediumData","text":"generateMediumData","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/generateMediumData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generateMediumData — generateMediumData","text":"","code":"generateMediumData(cell_lines, drugs, save = TRUE)"},{"path":"https://gdrplatform.github.io/gDRcore/reference/generateMediumData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"generateMediumData — generateMediumData","text":"data.table raw input data MAE processed data","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/generateNoNoiseRawData.html","id":null,"dir":"Reference","previous_headings":"","what":"generateNoNoiseRawData — generateNoNoiseRawData","title":"generateNoNoiseRawData — generateNoNoiseRawData","text":"generateNoNoiseRawData","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/generateNoNoiseRawData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generateNoNoiseRawData — generateNoNoiseRawData","text":"","code":"generateNoNoiseRawData(cell_lines, drugs, save = TRUE)"},{"path":"https://gdrplatform.github.io/gDRcore/reference/generateNoNoiseRawData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"generateNoNoiseRawData — generateNoNoiseRawData","text":"data.table raw input data MAE processed data","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/generateNoiseRawData.html","id":null,"dir":"Reference","previous_headings":"","what":"generateNoiseRawData — generateNoiseRawData","title":"generateNoiseRawData — generateNoiseRawData","text":"generateNoiseRawData","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/generateNoiseRawData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generateNoiseRawData — generateNoiseRawData","text":"","code":"generateNoiseRawData(cell_lines, drugs, save = TRUE)"},{"path":"https://gdrplatform.github.io/gDRcore/reference/generateNoiseRawData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"generateNoiseRawData — generateNoiseRawData","text":"data.table raw input data MAE processed data","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/generateTripleComboMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"generateTripleComboMatrix — generateTripleComboMatrix","title":"generateTripleComboMatrix — generateTripleComboMatrix","text":"generateTripleComboMatrix","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/generateTripleComboMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generateTripleComboMatrix — generateTripleComboMatrix","text":"","code":"generateTripleComboMatrix(cell_lines, drugs, save = TRUE)"},{"path":"https://gdrplatform.github.io/gDRcore/reference/generateTripleComboMatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"generateTripleComboMatrix — generateTripleComboMatrix","text":"data.table raw input data MAE processed data","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/get_assays_per_pipeline_step.html","id":null,"dir":"Reference","previous_headings":"","what":"get info about created/present assays in SE at the given pipeline step — get_assays_per_pipeline_step","title":"get info about created/present assays in SE at the given pipeline step — get_assays_per_pipeline_step","text":"get info created/present assays SE given pipeline step","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/get_assays_per_pipeline_step.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get info about created/present assays in SE at the given pipeline step — get_assays_per_pipeline_step","text":"","code":"get_assays_per_pipeline_step(   step,   data_model,   status = c(\"created\", \"present\") )"},{"path":"https://gdrplatform.github.io/gDRcore/reference/get_assays_per_pipeline_step.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get info about created/present assays in SE at the given pipeline step — get_assays_per_pipeline_step","text":"step string pipeline step data_model single-agent vs combination status string return vector assays created present given step?","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/get_assays_per_pipeline_step.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get info about created/present assays in SE at the given pipeline step — get_assays_per_pipeline_step","text":"assay","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/get_default_nested_identifiers.html","id":null,"dir":"Reference","previous_headings":"","what":"Get default nested identifiers — get_default_nested_identifiers","title":"Get default nested identifiers — get_default_nested_identifiers","text":"Get default nested identifiers","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/get_default_nested_identifiers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get default nested identifiers — get_default_nested_identifiers","text":"","code":"get_default_nested_identifiers(x, data_model = NULL)  # S3 method for data.table get_default_nested_identifiers(x, data_model = NULL)  # S3 method for SummarizedExperiment get_default_nested_identifiers(x, data_model = NULL)"},{"path":"https://gdrplatform.github.io/gDRcore/reference/get_default_nested_identifiers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get default nested identifiers — get_default_nested_identifiers","text":"x data.table raw data SummarizedExperiment object gDR assays data_model single-agent vs combination","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/get_default_nested_identifiers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get default nested identifiers — get_default_nested_identifiers","text":"vector nested identifiers","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/get_default_nested_identifiers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get default nested identifiers — get_default_nested_identifiers","text":"","code":"get_default_nested_identifiers(data.table::data.table()) #> $`single-agent` #> [1] \"Concentration\" #>  #> $combination #> [1] \"Concentration\"   \"Concentration_2\" #>"},{"path":"https://gdrplatform.github.io/gDRcore/reference/get_mae_from_intermediate_data.html","id":null,"dir":"Reference","previous_headings":"","what":"get mae dataset from intermediate data — get_mae_from_intermediate_data","title":"get mae dataset from intermediate data — get_mae_from_intermediate_data","text":"get mae dataset intermediate data","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/get_mae_from_intermediate_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get mae dataset from intermediate data — get_mae_from_intermediate_data","text":"","code":"get_mae_from_intermediate_data(data_dir)"},{"path":"https://gdrplatform.github.io/gDRcore/reference/get_mae_from_intermediate_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get mae dataset from intermediate data — get_mae_from_intermediate_data","text":"data_dir directory intermediate data","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/get_mae_from_intermediate_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get mae dataset from intermediate data — get_mae_from_intermediate_data","text":"MAE object","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/get_pipeline_steps.html","id":null,"dir":"Reference","previous_headings":"","what":"get pipeline steps — get_pipeline_steps","title":"get pipeline steps — get_pipeline_steps","text":"get pipeline steps","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/get_pipeline_steps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get pipeline steps — get_pipeline_steps","text":"","code":"get_pipeline_steps()"},{"path":"https://gdrplatform.github.io/gDRcore/reference/get_pipeline_steps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get pipeline steps — get_pipeline_steps","text":"vector steps","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/grr_matches.html","id":null,"dir":"Reference","previous_headings":"","what":"Value Matching — grr_matches","title":"Value Matching — grr_matches","text":"Returns lookup table list positions matches first argument second vice versa. Similar match, though function returns first match.","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/grr_matches.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Value Matching — grr_matches","text":"","code":"grr_matches(   x,   y,   all.x = TRUE,   all.y = TRUE,   list = FALSE,   indexes = TRUE,   nomatch = NA )"},{"path":"https://gdrplatform.github.io/gDRcore/reference/grr_matches.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Value Matching — grr_matches","text":"x vector.  values matched.  Long vectors currently supported. y vector.  values matched.  Long vectors currently supported. .x logical; TRUE, value x included even matching values y .y logical; TRUE, value y included even matching values x list logical.  TRUE, result returned list vectors, vector matching values y. FALSE, result returned data.table repeated values match. indexes logical.  Whether return indices matches actual values. nomatch value returned case match found. provided indexes=TRUE, items match represented NA.  set NULL, items match set index value length+1.  indexes=FALSE, default NA.","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/grr_matches.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Value Matching — grr_matches","text":"data.table","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/grr_matches.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Value Matching — grr_matches","text":"behavior can imitated using joins create lookup tables, matches simpler faster: usually faster best joins packages thousands times faster built merge. .x/.y correspond four types database joins following way: left .x=TRUE, .y=FALSE right .x=FALSE, .y=TRUE inner .x=FALSE, .y=FALSE full .x=TRUE, .y=TRUE Note NA values match NA values. Source function: https://github.com/cran/grr/blob/master/R/grr.R","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/grr_matches.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Value Matching — grr_matches","text":"","code":"mat_elem <- data.table::data.table(   DrugName = rep(c(\"untreated\", \"drugA\", \"drugB\", \"untreated\"), 2),   DrugName_2 = rep(c(\"untreated\", \"vehicle\", \"drugA\", \"drugB\"), 2),   clid = rep(c(\"C1\", \"C2\"), each = 4) ) untreated_tag <- gDRutils::get_env_identifiers(\"untreated_tag\") ref_idx <- which(   mat_elem$DrugName %in% untreated_tag |    mat_elem$DrugName_2 %in% untreated_tag ) ref <- mat_elem[ref_idx, ] treated <- mat_elem[-ref_idx, ] valid <- c(\"DrugName\", \"DrugName_2\") trt <- lapply(valid, function(x) {   colnames <- c(\"clid\", x)    treated[, colnames, with = FALSE] }) trt <- do.call(paste,    do.call(rbind, lapply(trt, function(x) setNames(x, names(trt[[1]])))) ) ref <- lapply(valid, function(x) {   colnames <- c(\"clid\", x)    ref[, colnames, with = FALSE] }) ref <- do.call(paste,    do.call(rbind, lapply(ref, function(x) setNames(x, names(ref[[1]])))) ) grr_matches(trt, ref, list = FALSE, all.y = FALSE) #>        x     y #>    <int> <int> #> 1:     3     2 #> 2:     1     9 #> 3:     4     5 #> 4:     2    12"},{"path":"https://gdrplatform.github.io/gDRcore/reference/identify_data_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify type of data — identify_data_type","title":"Identify type of data — identify_data_type","text":"Identify type data","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/identify_data_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify type of data — identify_data_type","text":"","code":"identify_data_type(df, codilution_conc = 2, matrix_conc = 1)"},{"path":"https://gdrplatform.github.io/gDRcore/reference/identify_data_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify type of data — identify_data_type","text":"df data.table raw drug response data containing treated untreated values codilution_conc integer maximum number concentration ratio co-treatment classify codilution data type; defaults 2 matrix_conc integer minimum number concentration pairs co-treatment classify co-treatment matrix data type; defaults 1","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/identify_data_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify type of data — identify_data_type","text":"data.table raw drug response data additional column type info data type given row data.table","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/identify_data_type.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Identify type of data — identify_data_type","text":"Bartosz Czech bartosz.czech@contractors.roche.com","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/identify_data_type.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identify type of data — identify_data_type","text":"","code":"conc <- rep(seq(0, 0.3, 0.1), 2) ctrl_df <- S4Vectors::DataFrame(   ReadoutValue = c(2, 2, 1, 1, 2, 1),   Concentration = rep(0, 6),   masked = FALSE,   DrugName = rep(c(\"DRUG_10\", \"vehicle\", \"DRUG_8\"), 2),   CellLineName = \"CELL1\" )  trt_df <- S4Vectors::DataFrame(   ReadoutValue = rep(seq(1, 4, 1), 2),   Concentration = conc,   masked = rep(FALSE, 8),   DrugName = c(\"DRUG_10\", \"DRUG_8\"),   CellLineName = \"CELL1\" ) input_df <- data.table::as.data.table(rbind(ctrl_df, trt_df)) input_df$Duration <- 72 input_df$CorrectedReadout2 <- input_df$ReadoutValue identify_data_type(input_df) #>     ReadoutValue Concentration masked DrugName CellLineName Duration #>            <num>         <num> <lgcl>   <char>       <char>    <num> #>  1:            2           0.0  FALSE  DRUG_10        CELL1       72 #>  2:            2           0.0  FALSE  vehicle        CELL1       72 #>  3:            1           0.0  FALSE   DRUG_8        CELL1       72 #>  4:            1           0.0  FALSE  DRUG_10        CELL1       72 #>  5:            2           0.0  FALSE  vehicle        CELL1       72 #>  6:            1           0.0  FALSE   DRUG_8        CELL1       72 #>  7:            1           0.0  FALSE  DRUG_10        CELL1       72 #>  8:            2           0.1  FALSE   DRUG_8        CELL1       72 #>  9:            3           0.2  FALSE  DRUG_10        CELL1       72 #> 10:            4           0.3  FALSE   DRUG_8        CELL1       72 #> 11:            1           0.0  FALSE  DRUG_10        CELL1       72 #> 12:            2           0.1  FALSE   DRUG_8        CELL1       72 #> 13:            3           0.2  FALSE  DRUG_10        CELL1       72 #> 14:            4           0.3  FALSE   DRUG_8        CELL1       72 #>     CorrectedReadout2 record_id         type #>                 <num>     <int>       <char> #>  1:                 2         1      control #>  2:                 2         2      control #>  3:                 1         3      control #>  4:                 1         4      control #>  5:                 2         5      control #>  6:                 1         6      control #>  7:                 1         7      control #>  8:                 2         8 single-agent #>  9:                 3         9 single-agent #> 10:                 4        10 single-agent #> 11:                 1        11      control #> 12:                 2        12 single-agent #> 13:                 3        13 single-agent #> 14:                 4        14 single-agent"},{"path":"https://gdrplatform.github.io/gDRcore/reference/identify_keys.html","id":null,"dir":"Reference","previous_headings":"","what":"identify_keys — identify_keys","title":"identify_keys — identify_keys","text":"Group columns data.table correspond different","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/identify_keys.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"identify_keys — identify_keys","text":"","code":"identify_keys(   df_,   nested_keys = NULL,   override_untrt_controls = NULL,   identifiers = gDRutils::get_env_identifiers() )"},{"path":"https://gdrplatform.github.io/gDRcore/reference/identify_keys.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"identify_keys — identify_keys","text":"df_ data.table identify keys . nested_keys character vector keys exclude returned list. keys discarded identical keys third dimension SummarizedExperiment. Defaults \"Barcode\" masked identifier. override_untrt_controls named list containing defining factors treatments. Defaults NULL. identifiers named list containing identifiers use processing. default, value obtained environment.","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/identify_keys.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"identify_keys — identify_keys","text":"named list key types corresponding key values.","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/identify_keys.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"identify_keys — identify_keys","text":"likely used provenance tracking placed SummarizedExperiment metadata downstream analyses reference.","code":""},{"path":[]},{"path":"https://gdrplatform.github.io/gDRcore/reference/identify_keys.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"identify_keys — identify_keys","text":"","code":"n <- 64 md_df <- data.table::data.table(   Gnumber = rep(c(\"vehicle\", \"untreated\", paste0(\"G\", seq(2))), each = 16),    DrugName = rep(c(\"vehicle\", \"untreated\", paste0(\"GN\", seq(2))), each = 16),    clid = paste0(\"C\", rep_len(seq(4), n)),   CellLineName = paste0(\"N\", rep_len(seq(4), n)),   replicates = rep_len(paste0(\"R\", rep(seq(4), each = 4)), 64),   drug_moa = \"inhibitor\",   ReferenceDivisionTime = rep_len(c(120, 60), n),   Tissue = \"Lung\",   parental_identifier = \"CL12345\",   Duration = 160 ) md_df <- unique(md_df) ref <- md_df$Gnumber %in% c(\"vehicle\", \"untreated\") trt_df <- md_df[!ref, ] identify_keys(trt_df) #> $Trt #> [1] \"Gnumber\"             \"DrugName\"            \"clid\"                #> [4] \"CellLineName\"        \"replicates\"          \"drug_moa\"            #> [7] \"Tissue\"              \"parental_identifier\" \"Duration\"            #>  #> $ref_Endpoint #> [1] \"clid\"                \"CellLineName\"        \"replicates\"          #> [4] \"Tissue\"              \"parental_identifier\" \"Duration\"            #>  #> $untrt_Endpoint #> [1] \"clid\"                \"CellLineName\"        \"replicates\"          #> [4] \"Tissue\"              \"parental_identifier\" \"Duration\"            #>  #> $Day0 #> character(0) #>  #> $nested_keys #> NULL #>  #> $masked_tag #> [1] \"masked\" #>  #> $cellline_name #> [1] \"CellLineName\" #>  #> $cellline_ref_div_time #> [1] \"ReferenceDivisionTime\" #>  #> $duration #> [1] \"Duration\" #>  #> $untreated_tag #> [1] \"vehicle\"   \"untreated\" #>"},{"path":"https://gdrplatform.github.io/gDRcore/reference/is_preceding_step.html","id":null,"dir":"Reference","previous_headings":"","what":"check if the given step is preceding the step chosen in the partial run — is_preceding_step","title":"check if the given step is preceding the step chosen in the partial run — is_preceding_step","text":"check given step preceding step chosen partial run","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/is_preceding_step.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check if the given step is preceding the step chosen in the partial run — is_preceding_step","text":"","code":"is_preceding_step(current_step, start_from, steps = get_pipeline_steps())"},{"path":"https://gdrplatform.github.io/gDRcore/reference/is_preceding_step.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check if the given step is preceding the step chosen in the partial run — is_preceding_step","text":"current_step, string step evaluated start_from string indicating pipeline step partial run launched steps charvect available steps","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/is_preceding_step.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"check if the given step is preceding the step chosen in the partial run — is_preceding_step","text":"logical","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/map_conc_to_standardized_conc.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a mapping of concentrations to standardized concentrations. — map_conc_to_standardized_conc","title":"Create a mapping of concentrations to standardized concentrations. — map_conc_to_standardized_conc","text":"Create mapping concentrations standardized concentrations.","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/map_conc_to_standardized_conc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a mapping of concentrations to standardized concentrations. — map_conc_to_standardized_conc","text":"","code":"map_conc_to_standardized_conc(conc1, conc2)"},{"path":"https://gdrplatform.github.io/gDRcore/reference/map_conc_to_standardized_conc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a mapping of concentrations to standardized concentrations. — map_conc_to_standardized_conc","text":"conc1 numeric vector concentrations drug 1. conc2 numeric vector concentrations drug 2.","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/map_conc_to_standardized_conc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a mapping of concentrations to standardized concentrations. — map_conc_to_standardized_conc","text":"data.table 2 columns named \"concs\" \"rconcs\" containing original concentrations closest matched standardized concentrations respectively. new standardized concentrations.","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/map_conc_to_standardized_conc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a mapping of concentrations to standardized concentrations. — map_conc_to_standardized_conc","text":"concentrations standardized contain regularly spaced dilutions close values rounded.","code":""},{"path":[]},{"path":"https://gdrplatform.github.io/gDRcore/reference/map_conc_to_standardized_conc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a mapping of concentrations to standardized concentrations. — map_conc_to_standardized_conc","text":"","code":"ratio <- 0.5 conc1 <- c(0, 10 ^ (seq(-3, 1, ratio)))  shorter_range <- conc1[-1] noise <- runif(length(shorter_range), 1e-12, 1e-11) conc2 <- shorter_range + noise  map_conc_to_standardized_conc(conc1, conc2) #>            concs   rconcs #>            <num>    <num> #>  1:  0.000000000  0.00000 #>  2:  0.001000000  0.00100 #>  3:  0.003162278  0.00316 #>  4:  0.010000000  0.01000 #>  5:  0.031622777  0.03160 #>  6:  0.100000000  0.10000 #>  7:  0.316227766  0.31600 #>  8:  1.000000000  1.00000 #>  9:  3.162277660  3.16000 #> 10: 10.000000000 10.00000 #> 11:  0.001000000  0.00100 #> 12:  0.003162278  0.00316 #> 13:  0.010000000  0.01000 #> 14:  0.031622777  0.03160 #> 15:  0.100000000  0.10000 #> 16:  0.316227766  0.31600 #> 17:  1.000000000  1.00000 #> 18:  3.162277660  3.16000 #> 19: 10.000000000 10.00000"},{"path":"https://gdrplatform.github.io/gDRcore/reference/map_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Map treated conditions to their respective references. — map_df","title":"Map treated conditions to their respective references. — map_df","text":"Map treated conditions respective Day0, untreated, single-agent references using condition metadata.","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/map_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map treated conditions to their respective references. — map_df","text":"","code":"map_df(   trt_md,   ref_md,   override_untrt_controls = NULL,   ref_cols,   ref_type = c(\"Day0\", \"untrt_Endpoint\") )"},{"path":"https://gdrplatform.github.io/gDRcore/reference/map_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map treated conditions to their respective references. — map_df","text":"trt_md data.table treated metadata. ref_md data.table untreated metadata. override_untrt_controls named list indicating treatment metadata fields used control. Defaults NULL. ref_cols character vector names reference columns include. Likely obtained identify_keys(). ref_type string reference type map . one c(\"Day0\", \"untrt_Endpoint\", \"ref_Endpoint\").","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/map_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map treated conditions to their respective references. — map_df","text":"named list mapping treated metadata untreated metadata.","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/map_df.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Map treated conditions to their respective references. — map_df","text":"override_untrt_controls specified, TODO: FILL !","code":""},{"path":[]},{"path":"https://gdrplatform.github.io/gDRcore/reference/map_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map treated conditions to their respective references. — map_df","text":"","code":"n <- 64 md_df <- data.table::data.table(   Gnumber = rep(c(\"vehicle\", \"untreated\", paste0(\"G\", seq(2))), each = 16),    DrugName = rep(c(\"vehicle\", \"untreated\", paste0(\"GN\", seq(2))), each = 16),    clid = paste0(\"C\", rep_len(seq(4), n)),   CellLineName = paste0(\"N\", rep_len(seq(4), n)),   replicates = rep_len(paste0(\"R\", rep(seq(4), each = 4)), 64),   drug_moa = \"inhibitor\",   ReferenceDivisionTime = rep_len(c(120, 60), n),   Tissue = \"Lung\",   parental_identifier = \"CL12345\",   Duration = 160 ) md_df <- unique(md_df) ref <- md_df$Gnumber %in% c(\"vehicle\", \"untreated\") ref_df <- md_df[ref, ] trt_df <- md_df[!ref, ] Keys <- identify_keys(trt_df) ref_type <- \"untrt_Endpoint\" map_df(   trt_df,    ref_df,    ref_cols = Keys[[ref_type]],   ref_type = ref_type ) #> INFO [2024-02-28 14:46:28]  #> [[1]] #> NULL #>  #> [[2]] #> NULL #>  #> [[3]] #> NULL #>  #> [[4]] #> NULL #>  #> [[5]] #> NULL #>  #> [[6]] #> NULL #>  #> [[7]] #> NULL #>  #> [[8]] #> NULL #>  #> [[9]] #> NULL #>  #> [[10]] #> NULL #>  #> [[11]] #> NULL #>  #> [[12]] #> NULL #>  #> [[13]] #> NULL #>  #> [[14]] #> NULL #>  #> [[15]] #> NULL #>  #> [[16]] #> NULL #>  #> [[17]] #> NULL #>  #> [[18]] #> NULL #>  #> [[19]] #> NULL #>  #> [[20]] #> NULL #>  #> [[21]] #> NULL #>  #> [[22]] #> NULL #>  #> [[23]] #> NULL #>  #> [[24]] #> NULL #>  #> [[25]] #> NULL #>  #> [[26]] #> NULL #>  #> [[27]] #> NULL #>  #> [[28]] #> NULL #>  #> [[29]] #> NULL #>  #> [[30]] #> NULL #>  #> [[31]] #> NULL #>  #> [[32]] #> NULL #>"},{"path":"https://gdrplatform.github.io/gDRcore/reference/map_ids_to_fits.html","id":null,"dir":"Reference","previous_headings":"","what":"Get predicted values for a given fit and input. — map_ids_to_fits","title":"Get predicted values for a given fit and input. — map_ids_to_fits","text":"Map fittings identifiers compute predicted values corresponding fits.","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/map_ids_to_fits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get predicted values for a given fit and input. — map_ids_to_fits","text":"","code":"map_ids_to_fits(pred, match_col, fittings, fitting_id_col)"},{"path":"https://gdrplatform.github.io/gDRcore/reference/map_ids_to_fits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get predicted values for a given fit and input. — map_ids_to_fits","text":"pred numeric vector want predictions. match_col vector match fittings get correct fit. fittings data.table fit metrics. fitting_id_col string column name fittings used match match_col .","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/map_ids_to_fits.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get predicted values for a given fit and input. — map_ids_to_fits","text":"Numeric vector predicted values given pred inputs fittings values.","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/map_ids_to_fits.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get predicted values for a given fit and input. — map_ids_to_fits","text":"","code":"pred <- c(1, 5, 5) match_col <- c(1, 1, 2) fitting_id_col <- \"match_on_me\"  fit1 <- data.table::data.table(h = 2.09, x_inf = 0.68, x_0 = 1, ec50 = 0.003) fit2 <- data.table::data.table(h = 0.906, x_inf = 0.46, x_0 = 1, ec50 = 0.001) fittings <- do.call(rbind, list(fit1, fit2)) fittings[[fitting_id_col]] <- c(1, 2)  map_ids_to_fits(pred, match_col, fittings, fitting_id_col) #> [1] 0.6800017 0.6800001 0.4602404"},{"path":"https://gdrplatform.github.io/gDRcore/reference/map_untreated.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify untreated rows based on Drug treatment alone — map_untreated","title":"Identify untreated rows based on Drug treatment alone — map_untreated","text":"Identify untreated rows based Drug treatment alone","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/map_untreated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify untreated rows based on Drug treatment alone — map_untreated","text":"","code":"map_untreated(mat_elem)"},{"path":"https://gdrplatform.github.io/gDRcore/reference/map_untreated.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify untreated rows based on Drug treatment alone — map_untreated","text":"mat_elem input data frame","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/map_untreated.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify untreated rows based on Drug treatment alone — map_untreated","text":"list","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/map_untreated.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Identify untreated rows based on Drug treatment alone — map_untreated","text":"Using given rownames, map untreated conditions","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/merge_data.html","id":null,"dir":"Reference","previous_headings":"","what":"merge_data — merge_data","title":"merge_data — merge_data","text":"Merge input data single data.table","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/merge_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"merge_data — merge_data","text":"","code":"merge_data(manifest, treatments, data)"},{"path":"https://gdrplatform.github.io/gDRcore/reference/merge_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"merge_data — merge_data","text":"manifest data.table manifest info treatments data.table treaatments info data data.table raw data info","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/merge_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"merge_data — merge_data","text":"data.table merged data metadata.","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/merge_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"merge_data — merge_data","text":"","code":"td <- gDRimport::get_test_data() l_tbl <- gDRimport::load_data(   manifest_file = gDRimport::manifest_path(td),    df_template_files = gDRimport::template_path(td),    results_file = gDRimport::result_path(td) ) #> INFO [2024-02-28 14:46:29] Manifest loaded successfully #> INFO [2024-02-28 14:46:29] Reading Template_7daytreated.xlsx with load_templates_xlsx #> INFO [2024-02-28 14:46:29] Loading Template_7daytreated.xlsx #> INFO [2024-02-28 14:46:29] Loading Template_Untreated.xlsx #> INFO [2024-02-28 14:46:29] Templates loaded successfully! #> INFO [2024-02-28 14:46:29] Reading file /usr/local/lib/R/site-library/gDRimport/extdata/data1/RawData_day0.xlsx, sheet Readout_0077vs0068_day7 #> New names: #> • `` -> `...1` #> • `` -> `...2` #> • `` -> `...3` #> • `` -> `...4` #> • `` -> `...5` #> • `` -> `...6` #> • `` -> `...7` #> • `` -> `...8` #> • `` -> `...9` #> • `` -> `...10` #> • `` -> `...11` #> • `` -> `...12` #> • `` -> `...13` #> • `` -> `...14` #> • `` -> `...15` #> • `` -> `...16` #> • `` -> `...17` #> • `` -> `...18` #> • `` -> `...19` #> • `` -> `...20` #> • `` -> `...21` #> • `` -> `...22` #> • `` -> `...23` #> • `` -> `...24` #> • `` -> `...25` #> INFO [2024-02-28 14:46:29] Plate 201904190a read; 384 wells #> INFO [2024-02-28 14:46:29] Plate 201904190b read; 384 wells #> INFO [2024-02-28 14:46:29] Plate 201904190c read; 384 wells #> INFO [2024-02-28 14:46:29] Plate 201904190d read; 384 wells #> INFO [2024-02-28 14:46:29] Plate 201904190e read; 384 wells #> INFO [2024-02-28 14:46:29] Plate 201904190f read; 384 wells #> INFO [2024-02-28 14:46:29] File done #> INFO [2024-02-28 14:46:29] Reading file /usr/local/lib/R/site-library/gDRimport/extdata/data1/RawData_day7.xlsx, sheet Readout_0077vs0068_day7 #> New names: #> • `` -> `...1` #> • `` -> `...2` #> • `` -> `...3` #> • `` -> `...4` #> • `` -> `...5` #> • `` -> `...6` #> • `` -> `...7` #> • `` -> `...8` #> • `` -> `...9` #> • `` -> `...10` #> • `` -> `...11` #> • `` -> `...12` #> • `` -> `...13` #> • `` -> `...14` #> • `` -> `...15` #> • `` -> `...16` #> • `` -> `...17` #> • `` -> `...18` #> • `` -> `...19` #> • `` -> `...20` #> • `` -> `...21` #> • `` -> `...22` #> • `` -> `...23` #> • `` -> `...24` #> • `` -> `...25` #> INFO [2024-02-28 14:46:29] Plate 201904197a read; 384 wells #> INFO [2024-02-28 14:46:29] Plate 201904197b read; 384 wells #> INFO [2024-02-28 14:46:29] Plate 201904197c read; 384 wells #> INFO [2024-02-28 14:46:29] Plate 201904197d read; 384 wells #> INFO [2024-02-28 14:46:29] Plate 201904197e read; 384 wells #> INFO [2024-02-28 14:46:29] Plate 201904197f read; 384 wells #> INFO [2024-02-28 14:46:29] File done merge_data(   l_tbl$manifest,    l_tbl$treatments,    l_tbl$data ) #> INFO [2024-02-28 14:46:29] Merging data #> INFO [2024-02-28 14:46:29] Merging the metadata (manifest and treatment files) #> WARN [2024-02-28 14:46:29] 4608 well loaded, 768 wells discarded for lack of annotation,  #>     3840 data point selected #>  #> INFO [2024-02-28 14:46:29] Merge with Cell line info #>       CellLineName Tissue Duration DrugName Concentration DrugName_2 #>             <char> <char>    <num>   <char>         <num>     <char> #>    1:  cellline_BA breast        0  vehicle             0    vehicle #>    2:  cellline_BA breast        0  vehicle             0    vehicle #>    3:  cellline_BA breast        0  vehicle             0    vehicle #>    4:  cellline_BA breast        0  vehicle             0    vehicle #>    5:  cellline_BA breast        0  vehicle             0    vehicle #>   ---                                                                #> 3836:  cellline_IB breast      168  vehicle             0    vehicle #> 3837:  cellline_IB breast      168  vehicle             0    vehicle #> 3838:  cellline_IB breast      168  vehicle             0    vehicle #> 3839:  cellline_IB breast      168  vehicle             0    vehicle #> 3840:  cellline_IB breast      168  vehicle             0    vehicle #>       Concentration_2 drug_moa_2 drug_moa parental_identifier subtype #>                 <num>     <char>   <char>              <char>  <char> #>    1:               0    vehicle  vehicle         cellline_BA unknown #>    2:               0    vehicle  vehicle         cellline_BA unknown #>    3:               0    vehicle  vehicle         cellline_BA unknown #>    4:               0    vehicle  vehicle         cellline_BA unknown #>    5:               0    vehicle  vehicle         cellline_BA unknown #>   ---                                                                 #> 3836:               0    vehicle  vehicle         cellline_IB unknown #> 3837:               0    vehicle  vehicle         cellline_IB unknown #> 3838:               0    vehicle  vehicle         cellline_IB unknown #> 3839:               0    vehicle  vehicle         cellline_IB unknown #> 3840:               0    vehicle  vehicle         cellline_IB unknown #>          Barcode                  Template ReadoutValue BackgroundValue #>           <char>                    <char>        <num>           <num> #>    1: 201904190a   Template_Untreated.xlsx        91452             570 #>    2: 201904190a   Template_Untreated.xlsx       126448             570 #>    3: 201904190a   Template_Untreated.xlsx        91461             570 #>    4: 201904190a   Template_Untreated.xlsx       126449             570 #>    5: 201904190a   Template_Untreated.xlsx        91459             570 #>   ---                                                                   #> 3836: 201904197f Template_7daytreated.xlsx       788743             395 #> 3837: 201904197f Template_7daytreated.xlsx       359748             395 #> 3838: 201904197f Template_7daytreated.xlsx       405491             395 #> 3839: 201904197f Template_7daytreated.xlsx       575063             395 #> 3840: 201904197f Template_7daytreated.xlsx       854686             395 #>       ReferenceDivisionTime    clid Gnumber Gnumber_2 WellRow WellColumn #>                       <num>  <char>  <char>    <char>  <char>     <char> #>    1:                    26 CL00011 vehicle   vehicle       A          3 #>    2:                    26 CL00011 vehicle   vehicle       B          3 #>    3:                    26 CL00011 vehicle   vehicle       C          3 #>    4:                    26 CL00011 vehicle   vehicle       D          3 #>    5:                    26 CL00011 vehicle   vehicle       E          3 #>   ---                                                                    #> 3836:                    54 CL00018 vehicle   vehicle       D         22 #> 3837:                    54 CL00018 vehicle   vehicle       I         22 #> 3838:                    54 CL00018 vehicle   vehicle       J         22 #> 3839:                    54 CL00018 vehicle   vehicle       K         22 #> 3840:                    54 CL00018 vehicle   vehicle       L         22"},{"path":"https://gdrplatform.github.io/gDRcore/reference/order_result_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Order_result_df — order_result_df","title":"Order_result_df — order_result_df","text":"Order data.table results","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/order_result_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Order_result_df — order_result_df","text":"","code":"order_result_df(df_)"},{"path":"https://gdrplatform.github.io/gDRcore/reference/order_result_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Order_result_df — order_result_df","text":"df_ data.table results","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/order_result_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Order_result_df — order_result_df","text":"ordered data.table results","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/prepare_input.MultiAssayExperiment.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare input data common for all experiments — prepare_input.MultiAssayExperiment","title":"Prepare input data common for all experiments — prepare_input.MultiAssayExperiment","text":"Current steps refining nested confounders refining nested identifiers splitting df_ (per experiment) df_list","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/prepare_input.MultiAssayExperiment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare input data common for all experiments — prepare_input.MultiAssayExperiment","text":"","code":"# S3 method for MultiAssayExperiment prepare_input(   x,   nested_confounders = gDRutils::get_SE_identifiers(x[[1]], \"barcode\"),   nested_identifiers_l = .get_default_nested_identifiers(x[[1]]),   raw_data_field = \"experiment_raw_data\",   split_data = TRUE,   ... )"},{"path":"https://gdrplatform.github.io/gDRcore/reference/prepare_input.MultiAssayExperiment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare input data common for all experiments — prepare_input.MultiAssayExperiment","text":"x MAE object dose-reponse data nested_confounders Character vector nested_confounders given assay. nested_keys character vector column names include data.tables assays resulting SummarizedExperiment object. Defaults nested_identifiers nested_confounders passed nested_identifiers_l list nested_identifiers(character vectors) single-agent (optionally) combination data raw_data_field metadata field raw data split_data Boolean indicating need splitting data experiment types ... additional parameters","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/prepare_input.MultiAssayExperiment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare input data common for all experiments — prepare_input.MultiAssayExperiment","text":"list input data","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/prepare_input.data.table.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare input data common for all experiments — prepare_input.data.table","title":"Prepare input data common for all experiments — prepare_input.data.table","text":"Current steps refining nested confounders refining nested identifiers splitting df_ (per experiment) df_list","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/prepare_input.data.table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare input data common for all experiments — prepare_input.data.table","text":"","code":"# S3 method for data.table prepare_input(   x,   nested_confounders = gDRutils::get_env_identifiers(\"barcode\"),   nested_identifiers_l = .get_default_nested_identifiers(),   ... )"},{"path":"https://gdrplatform.github.io/gDRcore/reference/prepare_input.data.table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare input data common for all experiments — prepare_input.data.table","text":"x data.table raw data nested_confounders Character vector nested_confounders given assay. nested_keys character vector column names include data.tables assays resulting SummarizedExperiment object. Defaults nested_identifiers nested_confounders passed nested_identifiers_l list nested_identifiers(character vectors) single-agent (optionally) combination data ... additional parameters","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/prepare_input.data.table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare input data common for all experiments — prepare_input.data.table","text":"list input data","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/prepare_input.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare input data common for all experiments — prepare_input","title":"Prepare input data common for all experiments — prepare_input","text":"Current steps refining nested confounders refining nested identifiers splitting df_ (per experiment) df_list","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/prepare_input.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare input data common for all experiments — prepare_input","text":"","code":"prepare_input(x, ...)"},{"path":"https://gdrplatform.github.io/gDRcore/reference/prepare_input.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare input data common for all experiments — prepare_input","text":"x data.table raw data MAE object dose-reponse data ... additional parameters","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/prepare_input.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare input data common for all experiments — prepare_input","text":"list input data","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/prepare_input.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare input data common for all experiments — prepare_input","text":"","code":"td <- gDRimport::get_test_data() l_tbl <- gDRimport::load_data(   manifest_file = gDRimport::manifest_path(td),    df_template_files = gDRimport::template_path(td),    results_file = gDRimport::result_path(td) ) #> INFO [2024-02-28 14:46:30] Manifest loaded successfully #> INFO [2024-02-28 14:46:30] Reading Template_7daytreated.xlsx with load_templates_xlsx #> INFO [2024-02-28 14:46:30] Loading Template_7daytreated.xlsx #> INFO [2024-02-28 14:46:30] Loading Template_Untreated.xlsx #> INFO [2024-02-28 14:46:30] Templates loaded successfully! #> INFO [2024-02-28 14:46:30] Reading file /usr/local/lib/R/site-library/gDRimport/extdata/data1/RawData_day0.xlsx, sheet Readout_0077vs0068_day7 #> New names: #> • `` -> `...1` #> • `` -> `...2` #> • `` -> `...3` #> • `` -> `...4` #> • `` -> `...5` #> • `` -> `...6` #> • `` -> `...7` #> • `` -> `...8` #> • `` -> `...9` #> • `` -> `...10` #> • `` -> `...11` #> • `` -> `...12` #> • `` -> `...13` #> • `` -> `...14` #> • `` -> `...15` #> • `` -> `...16` #> • `` -> `...17` #> • `` -> `...18` #> • `` -> `...19` #> • `` -> `...20` #> • `` -> `...21` #> • `` -> `...22` #> • `` -> `...23` #> • `` -> `...24` #> • `` -> `...25` #> INFO [2024-02-28 14:46:30] Plate 201904190a read; 384 wells #> INFO [2024-02-28 14:46:30] Plate 201904190b read; 384 wells #> INFO [2024-02-28 14:46:30] Plate 201904190c read; 384 wells #> INFO [2024-02-28 14:46:30] Plate 201904190d read; 384 wells #> INFO [2024-02-28 14:46:30] Plate 201904190e read; 384 wells #> INFO [2024-02-28 14:46:30] Plate 201904190f read; 384 wells #> INFO [2024-02-28 14:46:30] File done #> INFO [2024-02-28 14:46:30] Reading file /usr/local/lib/R/site-library/gDRimport/extdata/data1/RawData_day7.xlsx, sheet Readout_0077vs0068_day7 #> New names: #> • `` -> `...1` #> • `` -> `...2` #> • `` -> `...3` #> • `` -> `...4` #> • `` -> `...5` #> • `` -> `...6` #> • `` -> `...7` #> • `` -> `...8` #> • `` -> `...9` #> • `` -> `...10` #> • `` -> `...11` #> • `` -> `...12` #> • `` -> `...13` #> • `` -> `...14` #> • `` -> `...15` #> • `` -> `...16` #> • `` -> `...17` #> • `` -> `...18` #> • `` -> `...19` #> • `` -> `...20` #> • `` -> `...21` #> • `` -> `...22` #> • `` -> `...23` #> • `` -> `...24` #> • `` -> `...25` #> INFO [2024-02-28 14:46:31] Plate 201904197a read; 384 wells #> INFO [2024-02-28 14:46:31] Plate 201904197b read; 384 wells #> INFO [2024-02-28 14:46:31] Plate 201904197c read; 384 wells #> INFO [2024-02-28 14:46:31] Plate 201904197d read; 384 wells #> INFO [2024-02-28 14:46:31] Plate 201904197e read; 384 wells #> INFO [2024-02-28 14:46:31] Plate 201904197f read; 384 wells #> INFO [2024-02-28 14:46:31] File done df_ <- merge_data(   l_tbl$manifest,    l_tbl$treatments,    l_tbl$data ) #> INFO [2024-02-28 14:46:31] Merging data #> INFO [2024-02-28 14:46:31] Merging the metadata (manifest and treatment files) #> WARN [2024-02-28 14:46:31] 4608 well loaded, 768 wells discarded for lack of annotation,  #>     3840 data point selected #>  #> INFO [2024-02-28 14:46:31] Merge with Cell line info nested_confounders = intersect(   names(df_),    gDRutils::get_env_identifiers(\"barcode\") ) prepare_input(df_, nested_confounders, NULL) #> $df_ #>       CellLineName Tissue Duration DrugName Concentration DrugName_2 #>             <char> <char>    <num>   <char>         <num>     <char> #>    1:  cellline_BA breast        0  vehicle             0    vehicle #>    2:  cellline_BA breast        0  vehicle             0    vehicle #>    3:  cellline_BA breast        0  vehicle             0    vehicle #>    4:  cellline_BA breast        0  vehicle             0    vehicle #>    5:  cellline_BA breast        0  vehicle             0    vehicle #>   ---                                                                #> 3836:  cellline_IB breast      168  vehicle             0    vehicle #> 3837:  cellline_IB breast      168  vehicle             0    vehicle #> 3838:  cellline_IB breast      168  vehicle             0    vehicle #> 3839:  cellline_IB breast      168  vehicle             0    vehicle #> 3840:  cellline_IB breast      168  vehicle             0    vehicle #>       Concentration_2 drug_moa_2 drug_moa parental_identifier subtype #>                 <num>     <char>   <char>              <char>  <char> #>    1:               0    vehicle  vehicle         cellline_BA unknown #>    2:               0    vehicle  vehicle         cellline_BA unknown #>    3:               0    vehicle  vehicle         cellline_BA unknown #>    4:               0    vehicle  vehicle         cellline_BA unknown #>    5:               0    vehicle  vehicle         cellline_BA unknown #>   ---                                                                 #> 3836:               0    vehicle  vehicle         cellline_IB unknown #> 3837:               0    vehicle  vehicle         cellline_IB unknown #> 3838:               0    vehicle  vehicle         cellline_IB unknown #> 3839:               0    vehicle  vehicle         cellline_IB unknown #> 3840:               0    vehicle  vehicle         cellline_IB unknown #>          Barcode                  Template ReadoutValue BackgroundValue #>           <char>                    <char>        <num>           <num> #>    1: 201904190a   Template_Untreated.xlsx        91452             570 #>    2: 201904190a   Template_Untreated.xlsx       126448             570 #>    3: 201904190a   Template_Untreated.xlsx        91461             570 #>    4: 201904190a   Template_Untreated.xlsx       126449             570 #>    5: 201904190a   Template_Untreated.xlsx        91459             570 #>   ---                                                                   #> 3836: 201904197f Template_7daytreated.xlsx       788743             395 #> 3837: 201904197f Template_7daytreated.xlsx       359748             395 #> 3838: 201904197f Template_7daytreated.xlsx       405491             395 #> 3839: 201904197f Template_7daytreated.xlsx       575063             395 #> 3840: 201904197f Template_7daytreated.xlsx       854686             395 #>       ReferenceDivisionTime    clid Gnumber Gnumber_2 WellRow WellColumn #>                       <num>  <char>  <char>    <char>  <char>     <char> #>    1:                    26 CL00011 vehicle   vehicle       A          3 #>    2:                    26 CL00011 vehicle   vehicle       B          3 #>    3:                    26 CL00011 vehicle   vehicle       C          3 #>    4:                    26 CL00011 vehicle   vehicle       D          3 #>    5:                    26 CL00011 vehicle   vehicle       E          3 #>   ---                                                                    #> 3836:                    54 CL00018 vehicle   vehicle       D         22 #> 3837:                    54 CL00018 vehicle   vehicle       I         22 #> 3838:                    54 CL00018 vehicle   vehicle       J         22 #> 3839:                    54 CL00018 vehicle   vehicle       K         22 #> 3840:                    54 CL00018 vehicle   vehicle       L         22 #>       record_id    type #>           <int>  <char> #>    1:         1 control #>    2:         2 control #>    3:         3 control #>    4:         4 control #>    5:         5 control #>   ---                   #> 3836:      3836 control #> 3837:      3837 control #> 3838:      3838 control #> 3839:      3839 control #> 3840:      3840 control #>  #> $df_list #> $df_list$combination #>       CellLineName Tissue Duration DrugName Concentration DrugName_2 #>             <char> <char>    <num>   <char>         <num>     <char> #>    1:  cellline_BA breast      168 drug_002   0.001524158   drug_011 #>    2:  cellline_BA breast      168 drug_002   0.001524158   drug_011 #>    3:  cellline_BA breast      168 drug_002   0.001524158   drug_011 #>    4:  cellline_BA breast      168 drug_002   0.001524158   drug_011 #>    5:  cellline_BA breast      168 drug_002   0.001524158   drug_011 #>   ---                                                                #> 3836:  cellline_IB breast      168 drug_011   0.149999911    vehicle #> 3837:  cellline_IB breast      168 drug_011   0.149999911    vehicle #> 3838:  cellline_IB breast      168 drug_011   0.149999911    vehicle #> 3839:  cellline_IB breast      168 drug_011   0.149999911    vehicle #> 3840:  cellline_IB breast      168 drug_011   0.149999911    vehicle #>       Concentration_2 drug_moa_2 drug_moa parental_identifier subtype #>                 <num>     <char>   <char>              <char>  <char> #>    1:       0.1499999      moa_B    moa_A         cellline_BA unknown #>    2:       0.1499999      moa_B    moa_A         cellline_BA unknown #>    3:       0.1499999      moa_B    moa_A         cellline_BA unknown #>    4:       0.1499999      moa_B    moa_A         cellline_BA unknown #>    5:       0.1499999      moa_B    moa_A         cellline_BA unknown #>   ---                                                                 #> 3836:       0.0000000    vehicle    moa_B         cellline_IB unknown #> 3837:       0.0000000    vehicle    moa_B         cellline_IB unknown #> 3838:       0.0000000    vehicle    moa_B         cellline_IB unknown #> 3839:       0.0000000    vehicle    moa_B         cellline_IB unknown #> 3840:       0.0000000    vehicle    moa_B         cellline_IB unknown #>          Barcode                  Template ReadoutValue BackgroundValue #>           <char>                    <char>        <num>           <num> #>    1: 201904197a Template_7daytreated.xlsx       102301             570 #>    2: 201904197a Template_7daytreated.xlsx        76966             570 #>    3: 201904197a Template_7daytreated.xlsx       461220             570 #>    4: 201904197a Template_7daytreated.xlsx       497047             570 #>    5: 201904197a Template_7daytreated.xlsx        64611             570 #>   ---                                                                   #> 3836: 201904197f Template_7daytreated.xlsx       383366             395 #> 3837: 201904197f Template_7daytreated.xlsx       133207             395 #> 3838: 201904197f Template_7daytreated.xlsx       204959             395 #> 3839: 201904197f Template_7daytreated.xlsx       323669             395 #> 3840: 201904197f Template_7daytreated.xlsx       387380             395 #>       ReferenceDivisionTime    clid Gnumber Gnumber_2 WellRow WellColumn #>                       <num>  <char>  <char>    <char>  <char>     <char> #>    1:                    26 CL00011  G00002    G00011       E         19 #>    2:                    26 CL00011  G00002    G00011       F         19 #>    3:                    26 CL00011  G00002    G00011       G         19 #>    4:                    26 CL00011  G00002    G00011       H         19 #>    5:                    26 CL00011  G00002    G00011       E         20 #>   ---                                                                    #> 3836:                    54 CL00018  G00011   vehicle       H         22 #> 3837:                    54 CL00018  G00011   vehicle       M         22 #> 3838:                    54 CL00018  G00011   vehicle       N         22 #> 3839:                    54 CL00018  G00011   vehicle       O         22 #> 3840:                    54 CL00018  G00011   vehicle       P         22 #>       record_id #>           <int> #>    1:       321 #>    2:       322 #>    3:       323 #>    4:       324 #>    5:       325 #>   ---           #> 3836:      3820 #> 3837:      3821 #> 3838:      3822 #> 3839:      3823 #> 3840:      3824 #>  #> $df_list$`single-agent` #>       CellLineName Tissue Duration DrugName Concentration drug_moa #>             <char> <char>    <num>   <char>         <num>   <char> #>    1:  cellline_BA breast      168 drug_002   0.001524158    moa_A #>    2:  cellline_BA breast      168 drug_002   0.001524158    moa_A #>    3:  cellline_BA breast      168 drug_002   0.001524158    moa_A #>    4:  cellline_BA breast      168 drug_002   0.001524158    moa_A #>    5:  cellline_BA breast      168 drug_002   0.001524158    moa_A #>   ---                                                              #> 2972:  cellline_IB breast      168  vehicle   0.000000000  vehicle #> 2973:  cellline_IB breast      168  vehicle   0.000000000  vehicle #> 2974:  cellline_IB breast      168  vehicle   0.000000000  vehicle #> 2975:  cellline_IB breast      168  vehicle   0.000000000  vehicle #> 2976:  cellline_IB breast      168  vehicle   0.000000000  vehicle #>       parental_identifier subtype    Barcode                  Template #>                    <char>  <char>     <char>                    <char> #>    1:         cellline_BA unknown 201904197a Template_7daytreated.xlsx #>    2:         cellline_BA unknown 201904197a Template_7daytreated.xlsx #>    3:         cellline_BA unknown 201904197a Template_7daytreated.xlsx #>    4:         cellline_BA unknown 201904197a Template_7daytreated.xlsx #>    5:         cellline_BA unknown 201904197a Template_7daytreated.xlsx #>   ---                                                                  #> 2972:         cellline_IB unknown 201904197f Template_7daytreated.xlsx #> 2973:         cellline_IB unknown 201904197f Template_7daytreated.xlsx #> 2974:         cellline_IB unknown 201904197f Template_7daytreated.xlsx #> 2975:         cellline_IB unknown 201904197f Template_7daytreated.xlsx #> 2976:         cellline_IB unknown 201904197f Template_7daytreated.xlsx #>       ReadoutValue BackgroundValue ReferenceDivisionTime    clid Gnumber #>              <num>           <num>                 <num>  <char>  <char> #>    1:       159679             570                    26 CL00011  G00002 #>    2:       165488             570                    26 CL00011  G00002 #>    3:      1169641             570                    26 CL00011  G00002 #>    4:      1346753             570                    26 CL00011  G00002 #>    5:       112168             570                    26 CL00011  G00002 #>   ---                                                                    #> 2972:       788743             395                    54 CL00018 vehicle #> 2973:       359748             395                    54 CL00018 vehicle #> 2974:       405491             395                    54 CL00018 vehicle #> 2975:       575063             395                    54 CL00018 vehicle #> 2976:       854686             395                    54 CL00018 vehicle #>       WellRow WellColumn record_id #>        <char>     <char>     <int> #>    1:       A         19       329 #>    2:       B         19       330 #>    3:       C         19       331 #>    4:       D         19       332 #>    5:       A         20       333 #>   ---                              #> 2972:       D         22      3836 #> 2973:       I         22      3837 #> 2974:       J         22      3838 #> 2975:       K         22      3839 #> 2976:       L         22      3840 #>  #>  #> $nested_confounders #> [1] \"Barcode\" #>  #> $nested_identifiers_l #> $nested_identifiers_l$`single-agent` #> [1] \"Concentration\" #>  #> $nested_identifiers_l$combination #> [1] \"Concentration\"   \"Concentration_2\" #>  #>  #> $exps #> $exps$combination #> NULL #>  #> $exps$`single-agent` #> NULL #>  #>"},{"path":"https://gdrplatform.github.io/gDRcore/reference/read_intermediate_data.html","id":null,"dir":"Reference","previous_headings":"","what":"read intermediate data for the given experiment and step to qs file — read_intermediate_data","title":"read intermediate data for the given experiment and step to qs file — read_intermediate_data","text":"read intermediate data given experiment step qs file","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/read_intermediate_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"read intermediate data for the given experiment and step to qs file — read_intermediate_data","text":"","code":"read_intermediate_data(path, step, experiment)"},{"path":"https://gdrplatform.github.io/gDRcore/reference/read_intermediate_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"read intermediate data for the given experiment and step to qs file — read_intermediate_data","text":"path string input directory qs file step, string step name experiment string experiment name","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/read_intermediate_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"read intermediate data for the given experiment and step to qs file — read_intermediate_data","text":"se","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/remove_drug_batch.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove batch from Gnumber — remove_drug_batch","title":"Remove batch from Gnumber — remove_drug_batch","text":"Remove batch Gnumber","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/remove_drug_batch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove batch from Gnumber — remove_drug_batch","text":"","code":"remove_drug_batch(drug)"},{"path":"https://gdrplatform.github.io/gDRcore/reference/remove_drug_batch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove batch from Gnumber — remove_drug_batch","text":"drug drug name","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/remove_drug_batch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove batch from Gnumber — remove_drug_batch","text":"Gnumber without batch","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/remove_drug_batch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove batch from Gnumber — remove_drug_batch","text":"","code":"remove_drug_batch(\"DRUG.123\") #> [1] \"DRUG\""},{"path":"https://gdrplatform.github.io/gDRcore/reference/replace_conc_with_standardized_conc.html","id":null,"dir":"Reference","previous_headings":"","what":"Standardize concentrations. — replace_conc_with_standardized_conc","title":"Standardize concentrations. — replace_conc_with_standardized_conc","text":"Utilize map standardize concentrations.","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/replace_conc_with_standardized_conc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standardize concentrations. — replace_conc_with_standardized_conc","text":"","code":"replace_conc_with_standardized_conc(   original_concs,   conc_map,   original_conc_col,   standardized_conc_col )"},{"path":"https://gdrplatform.github.io/gDRcore/reference/replace_conc_with_standardized_conc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standardize concentrations. — replace_conc_with_standardized_conc","text":"original_concs numeric vector concentrations replace using conc_map. conc_map data.table two columns named original_conc_col standardized_conc_col. original_conc_col string name column conc_map containing original concentrations replace. standardized_conc_col string name column conc_map containing standardized concentrations use replacement.","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/replace_conc_with_standardized_conc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Standardize concentrations. — replace_conc_with_standardized_conc","text":"numeric vector standardized concentrations.","code":""},{"path":[]},{"path":"https://gdrplatform.github.io/gDRcore/reference/replace_conc_with_standardized_conc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Standardize concentrations. — replace_conc_with_standardized_conc","text":"","code":"conc_map <- data.table::data.table(   orig = c(0.99, 0.6, 0.456, 0.4),    std = c(1, 0.6, 0.46, 0.4) ) original_concs <- c(0.456, 0.456, 0.4, 0.99) exp <- c(0.46, 0.46, 0.4, 1) obs <- replace_conc_with_standardized_conc(   original_concs,    conc_map,   original_conc_col = \"orig\",    standardized_conc_col = \"std\" )"},{"path":"https://gdrplatform.github.io/gDRcore/reference/round_concentration.html","id":null,"dir":"Reference","previous_headings":"","what":"Round concentration to ndigit significant digits — round_concentration","title":"Round concentration to ndigit significant digits — round_concentration","text":"Round concentration ndigit significant digits","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/round_concentration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Round concentration to ndigit significant digits — round_concentration","text":"","code":"round_concentration(x, ndigit = 3)"},{"path":"https://gdrplatform.github.io/gDRcore/reference/round_concentration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Round concentration to ndigit significant digits — round_concentration","text":"x value rounded. ndigit number significant digits (default = 4).","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/round_concentration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Round concentration to ndigit significant digits — round_concentration","text":"rounded x","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/round_concentration.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Round concentration to ndigit significant digits — round_concentration","text":"","code":"round_concentration(x = c(0.00175,0.00324,0.0091), ndigit = 1) #> [1] 0.002 0.003 0.010"},{"path":"https://gdrplatform.github.io/gDRcore/reference/runDrugResponseProcessingPipelineFxns.html","id":null,"dir":"Reference","previous_headings":"","what":"Run drug response processing pipeline — average_SE","title":"Run drug response processing pipeline — average_SE","text":"Run different components gDR drug response processing pipeline. Either: create SummarizedExperiment normalize raw treated control data (create_and_normalize_SE), average data (average_SE), fit processed data (fit_SE). See details -depth explanations.","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/runDrugResponseProcessingPipelineFxns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run drug response processing pipeline — average_SE","text":"","code":"average_SE(   se,   data_type,   series_identifiers = NULL,   override_masked = FALSE,   normalized_assay = \"Normalized\",   averaged_assay = \"Averaged\" )  create_SE(   df_,   data_type,   readout = \"ReadoutValue\",   nested_identifiers = NULL,   nested_confounders = intersect(names(df_), gDRutils::get_env_identifiers(\"barcode\")),   override_untrt_controls = NULL )  fit_SE(   se,   data_type = \"single-agent\",   nested_identifiers = NULL,   averaged_assay = \"Averaged\",   metrics_assay = \"Metrics\",   n_point_cutoff = 4,   range_conc = c(0.005, 5),   force_fit = FALSE,   pcutoff = 0.05,   cap = 0.1,   curve_type = c(\"GR\", \"RV\") )  normalize_SE(   se,   data_type,   nested_identifiers = NULL,   nested_confounders = gDRutils::get_SE_identifiers(se, \"barcode\", simplify = TRUE),   control_mean_fxn = function(x) {      mean(x, trim = 0.25)  },   control_assay = \"Controls\",   raw_treated_assay = \"RawTreated\",   normalized_assay = \"Normalized\",   ndigit_rounding = 4 )  create_and_normalize_SE(   df_,   data_type,   readout = \"ReadoutValue\",   control_mean_fxn = function(x) {      mean(x, trim = 0.25)  },   nested_identifiers = NULL,   nested_confounders = intersect(names(df_), gDRutils::get_env_identifiers(\"barcode\")),   override_untrt_controls = NULL,   ndigit_rounding = 4,   control_assay = \"Controls\",   raw_treated_assay = \"RawTreated\",   normalized_assay = \"Normalized\" )  runDrugResponseProcessingPipeline(   x,   readout = \"ReadoutValue\",   control_mean_fxn = function(x) {      mean(x, trim = 0.25)  },   nested_identifiers_l = NULL,   nested_confounders = gDRutils::get_env_identifiers(\"barcode\"),   override_untrt_controls = NULL,   override_masked = FALSE,   ndigit_rounding = 4,   n_point_cutoff = 4,   control_assay = \"Controls\",   raw_treated_assay = \"RawTreated\",   normalized_assay = \"Normalized\",   averaged_assay = \"Averaged\",   metrics_assay = \"Metrics\",   split_data = TRUE,   data_dir = NULL,   partial_run = FALSE,   start_from = get_pipeline_steps()[1],   selected_experiments = NULL )"},{"path":"https://gdrplatform.github.io/gDRcore/reference/runDrugResponseProcessingPipelineFxns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run drug response processing pipeline — average_SE","text":"se SummarizedExperiment object. data_type single-agent vs combination series_identifiers character vector identifiers measured metric define unique data point. override_masked boolean indicating whether override masked wells averaging include wells. Defaults FALSE. normalized_assay string assay name containing normalized data. Defaults \"Normalized\". averaged_assay string name averaged assay SummarizedExperiment. Defaults \"Averaged\". df_ data.table raw drug response data containing treated untreated values. column called \"BackgroundValue\" exists df_, removed readout column. readout string name containing cell viability readout values. nested_identifiers character vector nested_identifiers given SE given data_type nested_confounders Character vector nested_confounders given assay. nested_keys character vector column names include data.tables assays resulting SummarizedExperiment object. Defaults nested_identifiers nested_confounders passed create_and_normalize_SE runDrugResponseProcessingPipeline. override_untrt_controls named list containing defining factors treatments. Defaults NULL. metrics_assay string name metrics assay output returned SummarizedExperiment Defaults \"Metrics\". n_point_cutoff integer many points considered minimum required try fit curve. Defaults 4. range_conc vector concetrations range values. force_fit boolean indicating whether force fit. pcutoff numeric cutoff value. cap numeric value representing value cap highest allowed relative viability . curve_type vector curve type values. control_mean_fxn function indicating average controls. Defaults mean(x, trim = 0.25). control_assay string containing name assay representing controls se. Defaults \"Controls\". raw_treated_assay string containing name assay representing raw treated data se. Defaults \"RawTreated\". ndigit_rounding integer indicating number digits round calculations. Defaults 4. x data.table MAE drug response data nested_identifiers_l list nested_identifiers(character v ectors) single-agent (optionally) combination data split_data boolean indicating whether data provided MultiAssayExperiment split appropriate data types data_dir string path directory intermediate data experiments (qs files). set NULL (default) intermediate data saved/read . partial_run logical flag indicating pipeline run partially (step defined start_from) start_from string indicating pipeline step partial run launched selected_experiments character vector experiments pipeline run. option works pipeline run partially (.e. partial_run flag set TRUE)","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/runDrugResponseProcessingPipelineFxns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run drug response processing pipeline — average_SE","text":"MAE object","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/runDrugResponseProcessingPipelineFxns.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run drug response processing pipeline — average_SE","text":"runDrugResponseProcessingPipeline made 3 separate steps: \"create_and_normalize_SE\" \"average_SE\" \"fit_SE\" create_and_normalize_SE, creates SummarizedExperiment object data.table, data.table contains treatments rows, conditions columns. SummarizedExperiment object containing two asssays created: treated readouts live assay called \"RawTreated\", reference readouts live assay called \"Controls\". Subsequently, treated control elements normalized output two metrics: average_SE, take normalized assay average nested DataFrames across uniquenested_identifiers. fit_SE, take averaged assay fit curves obtain metrics, one set metrics normalization type set. Pipeline can run partially partial_run flag set TRUE. start_from string defines step pipeline launched. However, partial run pipeline possible whole pipeline launched least defined data_dir intermediate data saved qs files data_dir. Pipeline can run selected experiments changing default value selected_experiments param. scenario works partial_run enabled.","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/runDrugResponseProcessingPipelineFxns.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run drug response processing pipeline — average_SE","text":"","code":"d <- rep(seq(0.1, 0.9, 0.1), each = 4) v <- rep(seq(0.1, 0.4, 0.1), 9) df <- S4Vectors::DataFrame(   Concentration = d,   masked = rep(c(TRUE, TRUE, TRUE, FALSE), 9),   normalization_type = rep(c(\"GR\", \"RV\"), length(v) * 2),   x = rep(v, 2) ) normalized <- BumpyMatrix::splitAsBumpyMatrix(row = 1, column = 1, x = df)  keys <- list(Trt = \"Concentration\", \"masked_tag\" = \"masked\") assays <- list(\"Normalized\" = normalized) se <- SummarizedExperiment::SummarizedExperiment(assays = assays) se <- gDRutils::set_SE_keys(se, keys) se <- gDRutils::set_SE_identifiers(se, gDRutils::get_env_identifiers()) se1 <- average_SE(   se,   data_type = \"single-agent\",   override_masked = FALSE,   normalized_assay = \"Normalized\",   averaged_assay = \"Averaged\" ) #> Loading required namespace: testthat   td <- gDRimport::get_test_data() l_tbl <- gDRimport::load_data(   manifest_file = gDRimport::manifest_path(td),    df_template_files = gDRimport::template_path(td),    results_file = gDRimport::result_path(td) ) #> INFO [2024-02-28 14:46:32] Manifest loaded successfully #> INFO [2024-02-28 14:46:32] Reading Template_7daytreated.xlsx with load_templates_xlsx #> INFO [2024-02-28 14:46:32] Loading Template_7daytreated.xlsx #> INFO [2024-02-28 14:46:32] Loading Template_Untreated.xlsx #> INFO [2024-02-28 14:46:32] Templates loaded successfully! #> INFO [2024-02-28 14:46:32] Reading file /usr/local/lib/R/site-library/gDRimport/extdata/data1/RawData_day0.xlsx, sheet Readout_0077vs0068_day7 #> New names: #> • `` -> `...1` #> • `` -> `...2` #> • `` -> `...3` #> • `` -> `...4` #> • `` -> `...5` #> • `` -> `...6` #> • `` -> `...7` #> • `` -> `...8` #> • `` -> `...9` #> • `` -> `...10` #> • `` -> `...11` #> • `` -> `...12` #> • `` -> `...13` #> • `` -> `...14` #> • `` -> `...15` #> • `` -> `...16` #> • `` -> `...17` #> • `` -> `...18` #> • `` -> `...19` #> • `` -> `...20` #> • `` -> `...21` #> • `` -> `...22` #> • `` -> `...23` #> • `` -> `...24` #> • `` -> `...25` #> INFO [2024-02-28 14:46:32] Plate 201904190a read; 384 wells #> INFO [2024-02-28 14:46:32] Plate 201904190b read; 384 wells #> INFO [2024-02-28 14:46:32] Plate 201904190c read; 384 wells #> INFO [2024-02-28 14:46:32] Plate 201904190d read; 384 wells #> INFO [2024-02-28 14:46:32] Plate 201904190e read; 384 wells #> INFO [2024-02-28 14:46:32] Plate 201904190f read; 384 wells #> INFO [2024-02-28 14:46:32] File done #> INFO [2024-02-28 14:46:32] Reading file /usr/local/lib/R/site-library/gDRimport/extdata/data1/RawData_day7.xlsx, sheet Readout_0077vs0068_day7 #> New names: #> • `` -> `...1` #> • `` -> `...2` #> • `` -> `...3` #> • `` -> `...4` #> • `` -> `...5` #> • `` -> `...6` #> • `` -> `...7` #> • `` -> `...8` #> • `` -> `...9` #> • `` -> `...10` #> • `` -> `...11` #> • `` -> `...12` #> • `` -> `...13` #> • `` -> `...14` #> • `` -> `...15` #> • `` -> `...16` #> • `` -> `...17` #> • `` -> `...18` #> • `` -> `...19` #> • `` -> `...20` #> • `` -> `...21` #> • `` -> `...22` #> • `` -> `...23` #> • `` -> `...24` #> • `` -> `...25` #> INFO [2024-02-28 14:46:32] Plate 201904197a read; 384 wells #> INFO [2024-02-28 14:46:32] Plate 201904197b read; 384 wells #> INFO [2024-02-28 14:46:32] Plate 201904197c read; 384 wells #> INFO [2024-02-28 14:46:32] Plate 201904197d read; 384 wells #> INFO [2024-02-28 14:46:32] Plate 201904197e read; 384 wells #> INFO [2024-02-28 14:46:32] Plate 201904197f read; 384 wells #> INFO [2024-02-28 14:46:32] File done imported_data <- merge_data(   l_tbl$manifest,    l_tbl$treatments,    l_tbl$data ) #> INFO [2024-02-28 14:46:32] Merging data #> INFO [2024-02-28 14:46:32] Merging the metadata (manifest and treatment files) #> WARN [2024-02-28 14:46:32] 4608 well loaded, 768 wells discarded for lack of annotation,  #>     3840 data point selected #>  #> INFO [2024-02-28 14:46:32] Merge with Cell line info  se <- purrr::quietly(create_SE)(imported_data, data_type = \"single-agent\")   td <- gDRimport::get_test_data() l_tbl <- gDRimport::load_data(   manifest_file = gDRimport::manifest_path(td),    df_template_files = gDRimport::template_path(td),    results_file = gDRimport::result_path(td) ) #> INFO [2024-02-28 14:46:33] Manifest loaded successfully #> INFO [2024-02-28 14:46:33] Reading Template_7daytreated.xlsx with load_templates_xlsx #> INFO [2024-02-28 14:46:33] Loading Template_7daytreated.xlsx #> INFO [2024-02-28 14:46:33] Loading Template_Untreated.xlsx #> INFO [2024-02-28 14:46:33] Templates loaded successfully! #> INFO [2024-02-28 14:46:33] Reading file /usr/local/lib/R/site-library/gDRimport/extdata/data1/RawData_day0.xlsx, sheet Readout_0077vs0068_day7 #> New names: #> • `` -> `...1` #> • `` -> `...2` #> • `` -> `...3` #> • `` -> `...4` #> • `` -> `...5` #> • `` -> `...6` #> • `` -> `...7` #> • `` -> `...8` #> • `` -> `...9` #> • `` -> `...10` #> • `` -> `...11` #> • `` -> `...12` #> • `` -> `...13` #> • `` -> `...14` #> • `` -> `...15` #> • `` -> `...16` #> • `` -> `...17` #> • `` -> `...18` #> • `` -> `...19` #> • `` -> `...20` #> • `` -> `...21` #> • `` -> `...22` #> • `` -> `...23` #> • `` -> `...24` #> • `` -> `...25` #> INFO [2024-02-28 14:46:33] Plate 201904190a read; 384 wells #> INFO [2024-02-28 14:46:33] Plate 201904190b read; 384 wells #> INFO [2024-02-28 14:46:33] Plate 201904190c read; 384 wells #> INFO [2024-02-28 14:46:33] Plate 201904190d read; 384 wells #> INFO [2024-02-28 14:46:33] Plate 201904190e read; 384 wells #> INFO [2024-02-28 14:46:33] Plate 201904190f read; 384 wells #> INFO [2024-02-28 14:46:33] File done #> INFO [2024-02-28 14:46:33] Reading file /usr/local/lib/R/site-library/gDRimport/extdata/data1/RawData_day7.xlsx, sheet Readout_0077vs0068_day7 #> New names: #> • `` -> `...1` #> • `` -> `...2` #> • `` -> `...3` #> • `` -> `...4` #> • `` -> `...5` #> • `` -> `...6` #> • `` -> `...7` #> • `` -> `...8` #> • `` -> `...9` #> • `` -> `...10` #> • `` -> `...11` #> • `` -> `...12` #> • `` -> `...13` #> • `` -> `...14` #> • `` -> `...15` #> • `` -> `...16` #> • `` -> `...17` #> • `` -> `...18` #> • `` -> `...19` #> • `` -> `...20` #> • `` -> `...21` #> • `` -> `...22` #> • `` -> `...23` #> • `` -> `...24` #> • `` -> `...25` #> INFO [2024-02-28 14:46:33] Plate 201904197a read; 384 wells #> INFO [2024-02-28 14:46:33] Plate 201904197b read; 384 wells #> INFO [2024-02-28 14:46:33] Plate 201904197c read; 384 wells #> INFO [2024-02-28 14:46:33] Plate 201904197d read; 384 wells #> INFO [2024-02-28 14:46:33] Plate 201904197e read; 384 wells #> INFO [2024-02-28 14:46:33] Plate 201904197f read; 384 wells #> INFO [2024-02-28 14:46:33] File done imported_data <- merge_data(   l_tbl$manifest,    l_tbl$treatments,    l_tbl$data ) #> INFO [2024-02-28 14:46:33] Merging data #> INFO [2024-02-28 14:46:33] Merging the metadata (manifest and treatment files) #> WARN [2024-02-28 14:46:33] 4608 well loaded, 768 wells discarded for lack of annotation,  #>     3840 data point selected #>  #> INFO [2024-02-28 14:46:33] Merge with Cell line info  inl <- prepare_input(imported_data) #> Warning: 'Plate' nested confounder(s) is/are not present in the data. #>     Switching into 'Barcode' nested confounder(s). se <- create_SE(  inl$df_list[[\"single-agent\"]],  data_type = \"single-agent\",  nested_confounders = inl$nested_confounders) #> INFO [2024-02-28 14:46:34]  #> INFO [2024-02-28 14:46:34]    normalize_SE(se, data_type = \"single-agent\") #> class: SummarizedExperiment  #> dim: 3 6  #> metadata(3): identifiers experiment_metadata Keys #> assays(3): RawTreated Controls Normalized #> rownames(3): G00002_drug_002_moa_A_168 G00004_drug_004_moa_A_168 #>   G00011_drug_011_moa_B_168 #> rowData names(4): Gnumber DrugName drug_moa Duration #> colnames(6): CL00011_cellline_BA_breast_cellline_BA_unknown_26 #>   CL00012_cellline_CA_breast_cellline_CA_unknown_30 ... #>   CL00015_cellline_FA_breast_cellline_FA_unknown_42 #>   CL00018_cellline_IB_breast_cellline_IB_unknown_54 #> colData names(6): clid CellLineName ... subtype ReferenceDivisionTime p_dir <- file.path(tempdir(), \"pcheck\") dir.create(p_dir)  td <- gDRimport::get_test_data() l_tbl <- gDRimport::load_data(   manifest_file = gDRimport::manifest_path(td),    df_template_files = gDRimport::template_path(td),    results_file = gDRimport::result_path(td) ) #> INFO [2024-02-28 14:46:34] Manifest loaded successfully #> INFO [2024-02-28 14:46:34] Reading Template_7daytreated.xlsx with load_templates_xlsx #> INFO [2024-02-28 14:46:34] Loading Template_7daytreated.xlsx #> INFO [2024-02-28 14:46:34] Loading Template_Untreated.xlsx #> INFO [2024-02-28 14:46:34] Templates loaded successfully! #> INFO [2024-02-28 14:46:34] Reading file /usr/local/lib/R/site-library/gDRimport/extdata/data1/RawData_day0.xlsx, sheet Readout_0077vs0068_day7 #> New names: #> • `` -> `...1` #> • `` -> `...2` #> • `` -> `...3` #> • `` -> `...4` #> • `` -> `...5` #> • `` -> `...6` #> • `` -> `...7` #> • `` -> `...8` #> • `` -> `...9` #> • `` -> `...10` #> • `` -> `...11` #> • `` -> `...12` #> • `` -> `...13` #> • `` -> `...14` #> • `` -> `...15` #> • `` -> `...16` #> • `` -> `...17` #> • `` -> `...18` #> • `` -> `...19` #> • `` -> `...20` #> • `` -> `...21` #> • `` -> `...22` #> • `` -> `...23` #> • `` -> `...24` #> • `` -> `...25` #> INFO [2024-02-28 14:46:34] Plate 201904190a read; 384 wells #> INFO [2024-02-28 14:46:34] Plate 201904190b read; 384 wells #> INFO [2024-02-28 14:46:34] Plate 201904190c read; 384 wells #> INFO [2024-02-28 14:46:34] Plate 201904190d read; 384 wells #> INFO [2024-02-28 14:46:34] Plate 201904190e read; 384 wells #> INFO [2024-02-28 14:46:34] Plate 201904190f read; 384 wells #> INFO [2024-02-28 14:46:34] File done #> INFO [2024-02-28 14:46:34] Reading file /usr/local/lib/R/site-library/gDRimport/extdata/data1/RawData_day7.xlsx, sheet Readout_0077vs0068_day7 #> New names: #> • `` -> `...1` #> • `` -> `...2` #> • `` -> `...3` #> • `` -> `...4` #> • `` -> `...5` #> • `` -> `...6` #> • `` -> `...7` #> • `` -> `...8` #> • `` -> `...9` #> • `` -> `...10` #> • `` -> `...11` #> • `` -> `...12` #> • `` -> `...13` #> • `` -> `...14` #> • `` -> `...15` #> • `` -> `...16` #> • `` -> `...17` #> • `` -> `...18` #> • `` -> `...19` #> • `` -> `...20` #> • `` -> `...21` #> • `` -> `...22` #> • `` -> `...23` #> • `` -> `...24` #> • `` -> `...25` #> INFO [2024-02-28 14:46:35] Plate 201904197a read; 384 wells #> INFO [2024-02-28 14:46:35] Plate 201904197b read; 384 wells #> INFO [2024-02-28 14:46:35] Plate 201904197c read; 384 wells #> INFO [2024-02-28 14:46:35] Plate 201904197d read; 384 wells #> INFO [2024-02-28 14:46:35] Plate 201904197e read; 384 wells #> INFO [2024-02-28 14:46:35] Plate 201904197f read; 384 wells #> INFO [2024-02-28 14:46:35] File done imported_data <- merge_data(   l_tbl$manifest,    l_tbl$treatments,    l_tbl$data ) #> INFO [2024-02-28 14:46:35] Merging data #> INFO [2024-02-28 14:46:35] Merging the metadata (manifest and treatment files) #> WARN [2024-02-28 14:46:35] 4608 well loaded, 768 wells discarded for lack of annotation,  #>     3840 data point selected #>  #> INFO [2024-02-28 14:46:35] Merge with Cell line info runDrugResponseProcessingPipeline(   imported_data,    data_dir = p_dir ) #> Warning: 'Plate' nested confounder(s) is/are not present in the data. #>     Switching into 'Barcode' nested confounder(s). #> Processing combination #> Warning: mapping original concentration '0.00457247142398638' to '0.00437' #> not enough data points (1 < 4) to perform fitting #> method L-BFGS-B uses 'factr' (and 'pgtol') instead of 'reltol' and 'abstol' #> method L-BFGS-B uses 'factr' (and 'pgtol') instead of 'reltol' and 'abstol' #> method L-BFGS-B uses 'factr' (and 'pgtol') instead of 'reltol' and 'abstol' #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> method L-BFGS-B uses 'factr' (and 'pgtol') instead of 'reltol' and 'abstol' #> method L-BFGS-B uses 'factr' (and 'pgtol') instead of 'reltol' and 'abstol' #> method L-BFGS-B uses 'factr' (and 'pgtol') instead of 'reltol' and 'abstol' #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> mapping original concentration '0.00457247142398638' to '0.00437' #> not enough data points (1 < 4) to perform fitting #> NaNs produced #> method L-BFGS-B uses 'factr' (and 'pgtol') instead of 'reltol' and 'abstol' #> method L-BFGS-B uses 'factr' (and 'pgtol') instead of 'reltol' and 'abstol' #> method L-BFGS-B uses 'factr' (and 'pgtol') instead of 'reltol' and 'abstol' #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> method L-BFGS-B uses 'factr' (and 'pgtol') instead of 'reltol' and 'abstol' #> method L-BFGS-B uses 'factr' (and 'pgtol') instead of 'reltol' and 'abstol' #> method L-BFGS-B uses 'factr' (and 'pgtol') instead of 'reltol' and 'abstol' #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> mapping original concentration '0.00457247142398638' to '0.00437' #> not enough data points (1 < 4) to perform fitting #> NaNs produced #> method L-BFGS-B uses 'factr' (and 'pgtol') instead of 'reltol' and 'abstol' #> NaNs produced #> method L-BFGS-B uses 'factr' (and 'pgtol') instead of 'reltol' and 'abstol' #> NaNs produced #> method L-BFGS-B uses 'factr' (and 'pgtol') instead of 'reltol' and 'abstol' #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> method L-BFGS-B uses 'factr' (and 'pgtol') instead of 'reltol' and 'abstol' #> method L-BFGS-B uses 'factr' (and 'pgtol') instead of 'reltol' and 'abstol' #> method L-BFGS-B uses 'factr' (and 'pgtol') instead of 'reltol' and 'abstol' #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> mapping original concentration '0.00457247142398638' to '0.00437' #> not enough data points (1 < 4) to perform fitting #> NaNs produced #> method L-BFGS-B uses 'factr' (and 'pgtol') instead of 'reltol' and 'abstol' #> method L-BFGS-B uses 'factr' (and 'pgtol') instead of 'reltol' and 'abstol' #> method L-BFGS-B uses 'factr' (and 'pgtol') instead of 'reltol' and 'abstol' #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> method L-BFGS-B uses 'factr' (and 'pgtol') instead of 'reltol' and 'abstol' #> method L-BFGS-B uses 'factr' (and 'pgtol') instead of 'reltol' and 'abstol' #> method L-BFGS-B uses 'factr' (and 'pgtol') instead of 'reltol' and 'abstol' #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> mapping original concentration '0.00457247142398638' to '0.00437' #> not enough data points (1 < 4) to perform fitting #> NaNs produced #> method L-BFGS-B uses 'factr' (and 'pgtol') instead of 'reltol' and 'abstol' #> method L-BFGS-B uses 'factr' (and 'pgtol') instead of 'reltol' and 'abstol' #> method L-BFGS-B uses 'factr' (and 'pgtol') instead of 'reltol' and 'abstol' #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> method L-BFGS-B uses 'factr' (and 'pgtol') instead of 'reltol' and 'abstol' #> method L-BFGS-B uses 'factr' (and 'pgtol') instead of 'reltol' and 'abstol' #> method L-BFGS-B uses 'factr' (and 'pgtol') instead of 'reltol' and 'abstol' #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitt #> Processing single-agent #> Warning: method L-BFGS-B uses 'factr' (and 'pgtol') instead of 'reltol' and 'abstol' #> method L-BFGS-B uses 'factr' (and 'pgtol') instead of 'reltol' and 'abstol' #> method L-BFGS-B uses 'factr' (and 'pgtol') instead of 'reltol' and 'abstol' #> method L-BFGS-B uses 'factr' (and 'pgtol') instead of 'reltol' and 'abstol' #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> method L-BFGS-B uses 'factr' (and 'pgtol') instead of 'reltol' and 'abstol' #> NaNs produced #> method L-BFGS-B uses 'factr' (and 'pgtol') instead of 'reltol' and 'abstol' #> method L-BFGS-B uses 'factr' (and 'pgtol') instead of 'reltol' and 'abstol' #> method L-BFGS-B uses 'factr' (and 'pgtol') instead of 'reltol' and 'abstol' #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> method L-BFGS-B uses 'factr' (and 'pgtol') instead of 'reltol' and 'abstol' #> method L-BFGS-B uses 'factr' (and 'pgtol') instead of 'reltol' and 'abstol' #> method L-BFGS-B uses 'factr' (and 'pgtol') instead of 'reltol' and 'abstol' #> method L-BFGS-B uses 'factr' (and 'pgtol') instead of 'reltol' and 'abstol' #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> method L-BFGS-B uses 'factr' (and 'pgtol') instead of 'reltol' and 'abstol' #> overriding original x_0 argument '1' with '1.08355555555556' (fit is not statistically significant (p=1.00), setting constant fit) #> overriding original x_0 argument '1' with '1.1' (only 1 normalized value detected, setting constant fit) #> method L-BFGS-B uses 'factr' (and 'pgtol') instead of 'reltol' and 'abstol' #> overriding original x_0 argument '1' with '1.09306666666667' (fit is not statistically significant (p=1.00), setting constant fit) #> overriding original x_0 argument '1' with '1.1' (only 1 normalized value detected, setting constant fit) #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> method L-BFGS-B uses 'factr' (and 'pgtol') instead of 'reltol' and 'abstol' #> method L-BFGS-B uses 'factr' (and 'pgtol') instead of 'reltol' and 'abstol' #> method L-BFGS-B uses 'factr' (and 'pgtol') instead of 'reltol' and 'abstol' #> method L-BFGS-B uses 'factr' (and 'pgtol') instead of 'reltol' and 'abstol' #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> method L-BFGS-B uses 'factr' (and 'pgtol') instead of 'reltol' and 'abstol' #> NaNs produced #> method L-BFGS-B uses 'factr' (and 'pgtol') instead of 'reltol' and 'abstol' #> method L-BFGS-B uses 'factr' (and 'pgtol') instead of 'reltol' and 'abstol' #> method L-BFGS-B uses 'factr' (and 'pgtol') instead of 'reltol' and 'abstol' #> not enough data points (1 < 4) to perform fitting #> not enough data points (1 < 4) to perform fitting #> A MultiAssayExperiment object of 2 listed #>  experiments with user-defined names and respective classes. #>  Containing an ExperimentList class object of length 2: #>  [1] combination: SummarizedExperiment with 2 rows and 6 columns #>  [2] single-agent: SummarizedExperiment with 3 rows and 6 columns #> Functionality: #>  experiments() - obtain the ExperimentList instance #>  colData() - the primary/phenotype DataFrame #>  sampleMap() - the sample coordination DataFrame #>  `$`, `[`, `[[` - extract colData columns, subset, or experiment #>  *Format() - convert into a long or wide DataFrame #>  assays() - convert ExperimentList to a SimpleList of matrices #>  exportClass() - save data to flat files"},{"path":"https://gdrplatform.github.io/gDRcore/reference/save_intermediate_data.html","id":null,"dir":"Reference","previous_headings":"","what":"save intermediate data for the given experiment and step to qs file — save_intermediate_data","title":"save intermediate data for the given experiment and step to qs file — save_intermediate_data","text":"save intermediate data given experiment step qs file","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/save_intermediate_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"save intermediate data for the given experiment and step to qs file — save_intermediate_data","text":"","code":"save_intermediate_data(path, step, experiment, se)"},{"path":"https://gdrplatform.github.io/gDRcore/reference/save_intermediate_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"save intermediate data for the given experiment and step to qs file — save_intermediate_data","text":"path string save directory qs file step, string step name experiment string experiment name se output se","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/save_intermediate_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"save intermediate data for the given experiment and step to qs file — save_intermediate_data","text":"NULL","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/split_raw_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Split raw data into list based on the data types — split_raw_data","title":"Split raw data into list based on the data types — split_raw_data","text":"Split raw data list based data types","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/split_raw_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split raw data into list based on the data types — split_raw_data","text":"","code":"split_raw_data(df, type_col = \"type\")"},{"path":"https://gdrplatform.github.io/gDRcore/reference/split_raw_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split raw data into list based on the data types — split_raw_data","text":"df data.table raw drug response data containing treated untreated values column specified type_col argument. type_col string column names df info data type. Defaults \"type\".","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/split_raw_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split raw data into list based on the data types — split_raw_data","text":"list split data based data type","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/split_raw_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Split raw data into list based on the data types — split_raw_data","text":"Bartosz Czech bartosz.czech@contractors.roche.com","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/split_raw_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split raw data into list based on the data types — split_raw_data","text":"","code":"cell_lines <- gDRtestData::create_synthetic_cell_lines() drugs <- gDRtestData::create_synthetic_drugs() df_layout <- drugs[4:6, as.list(cell_lines[7:8, ]), names(drugs)] df_layout <- gDRtestData::add_data_replicates(df_layout) df_layout <- gDRtestData::add_concentration(   df_layout,   concentrations = 10 ^ (seq(-3, .5, .5)) )  df_2 <-    drugs[c(21, 26), as.list(cell_lines[which(cell_lines$clid %in% df_layout$clid)]), names(drugs)] df_2 <- gDRtestData::add_data_replicates(df_2) df_2 <- gDRtestData::add_concentration(   df_2,   concentrations = 10 ^ (seq(-3, .5, .5)) ) colnames(df_2)[colnames(df_2) %in% c(colnames(drugs), \"Concentration\")] <-   paste0(     colnames(df_2)[colnames(df_2) %in% c(colnames(drugs), \"Concentration\")],     \"_2\"   ) df_layout_2 <- df_layout[df_2, on = intersect(names(df_layout), names(df_2)),                          allow.cartesian = TRUE] df_merged_data <- gDRtestData::generate_response_data(df_layout_2, 0) df <- identify_data_type(df_merged_data) split_raw_data(df) #> $combination #>       Barcode Gnumber DrugName drug_moa    clid CellLineName   Tissue #>        <char>  <char>   <char>   <char>  <char>       <char>   <char> #>    1: plate_1  G00004 drug_004    moa_A CL00016  cellline_GB tissue_y #>    2: plate_1  G00005 drug_005    moa_A CL00016  cellline_GB tissue_y #>    3: plate_1  G00006 drug_006    moa_A CL00016  cellline_GB tissue_y #>    4: plate_1  G00004 drug_004    moa_A CL00016  cellline_GB tissue_y #>    5: plate_1  G00005 drug_005    moa_A CL00016  cellline_GB tissue_y #>   ---                                                                 #> 3596: plate_3  G00026 drug_026    moa_E CL00017  cellline_HB tissue_y #> 3597: plate_3  G00026 drug_026    moa_E CL00017  cellline_HB tissue_y #> 3598: plate_3  G00026 drug_026    moa_E CL00017  cellline_HB tissue_y #> 3599: plate_3  G00026 drug_026    moa_E CL00017  cellline_HB tissue_y #> 3600: plate_3  G00026 drug_026    moa_E CL00017  cellline_HB tissue_y #>       ReferenceDivisionTime Concentration Gnumber_2 DrugName_2 drug_moa_2 #>                       <num>         <num>    <char>     <char>     <char> #>    1:                    46   0.001000000    G00021   drug_021      moa_D #>    2:                    46   0.001000000    G00021   drug_021      moa_D #>    3:                    46   0.001000000    G00021   drug_021      moa_D #>    4:                    46   0.003162278    G00021   drug_021      moa_D #>    5:                    46   0.003162278    G00021   drug_021      moa_D #>   ---                                                                     #> 3596:                    50   3.162277660   vehicle    vehicle    vehicle #> 3597:                    50   3.162277660   vehicle    vehicle    vehicle #> 3598:                    50   3.162277660   vehicle    vehicle    vehicle #> 3599:                    50   3.162277660   vehicle    vehicle    vehicle #> 3600:                    50   3.162277660   vehicle    vehicle    vehicle #>       Concentration_2 ReadoutValue BackgroundValue Duration record_id #>                 <num>        <num>           <num>    <num>     <int> #>    1:           0.001     98.29017               0       72       727 #>    2:           0.001     95.09049               0       72       728 #>    3:           0.001     99.79002               0       72       729 #>    4:           0.001     78.78972               0       72       730 #>    5:           0.001     55.22270               0       72       731 #>   ---                                                                 #> 3596:           0.000    100.00000               0       72      3572 #> 3597:           0.000    100.00000               0       72      3573 #> 3598:           0.000    100.00000               0       72      3574 #> 3599:           0.000    100.00000               0       72      3575 #> 3600:           0.000    100.00000               0       72      3576 #>  #> $`single-agent` #>       Barcode Gnumber DrugName drug_moa    clid CellLineName   Tissue #>        <char>  <char>   <char>   <char>  <char>       <char>   <char> #>    1: plate_1  G00004 drug_004    moa_A CL00016  cellline_GB tissue_y #>    2: plate_1  G00005 drug_005    moa_A CL00016  cellline_GB tissue_y #>    3: plate_1  G00006 drug_006    moa_A CL00016  cellline_GB tissue_y #>    4: plate_1  G00004 drug_004    moa_A CL00016  cellline_GB tissue_y #>    5: plate_1  G00005 drug_005    moa_A CL00016  cellline_GB tissue_y #>   ---                                                                 #> 1292: plate_3 vehicle  vehicle  vehicle CL00017  cellline_HB tissue_y #> 1293: plate_3 vehicle  vehicle  vehicle CL00017  cellline_HB tissue_y #> 1294: plate_3 vehicle  vehicle  vehicle CL00017  cellline_HB tissue_y #> 1295: plate_3 vehicle  vehicle  vehicle CL00017  cellline_HB tissue_y #> 1296: plate_3 vehicle  vehicle  vehicle CL00017  cellline_HB tissue_y #>       ReferenceDivisionTime Concentration ReadoutValue BackgroundValue Duration #>                       <num>         <num>        <num>           <num>    <num> #>    1:                    46   0.001000000     98.29017               0       72 #>    2:                    46   0.001000000     95.09049               0       72 #>    3:                    46   0.001000000     99.79002               0       72 #>    4:                    46   0.003162278     78.78972               0       72 #>    5:                    46   0.003162278     55.22270               0       72 #>   ---                                                                           #> 1292:                    50   0.000000000    100.00000               0       72 #> 1293:                    50   0.000000000    100.00000               0       72 #> 1294:                    50   0.000000000    100.00000               0       72 #> 1295:                    50   0.000000000    100.00000               0       72 #> 1296:                    50   0.000000000    100.00000               0       72 #>       record_id #>           <int> #>    1:         7 #>    2:         8 #>    3:         9 #>    4:        10 #>    5:        11 #>   ---           #> 1292:       692 #> 1293:       693 #> 1294:       694 #> 1295:       695 #> 1296:       696 #>   conc <- rep(seq(0, 0.3, 0.1), 2) ctrl_df <- S4Vectors::DataFrame(   ReadoutValue = c(2, 2, 1, 1, 2, 1),   Concentration = rep(0, 6),   masked = FALSE,   DrugName = rep(c(\"DRUG_10\", \"vehicle\", \"DRUG_8\"), 2),   CellLineName = \"CELL1\" )  trt_df <- S4Vectors::DataFrame(   ReadoutValue = rep(seq(1, 4, 1), 2),   Concentration = conc,   masked = rep(FALSE, 8),   DrugName = c(\"DRUG_10\", \"DRUG_8\"),   CellLineName = \"CELL1\" ) input_df <- data.table::as.data.table(rbind(ctrl_df, trt_df)) input_df$Duration <- 72 input_df$CorrectedReadout2 <- input_df$ReadoutValue split_df <- identify_data_type(input_df) split_raw_data(split_df) #> $`single-agent` #>     ReadoutValue Concentration masked DrugName CellLineName Duration #>            <num>         <num> <lgcl>   <char>       <char>    <num> #>  1:            2           0.1  FALSE   DRUG_8        CELL1       72 #>  2:            3           0.2  FALSE  DRUG_10        CELL1       72 #>  3:            4           0.3  FALSE   DRUG_8        CELL1       72 #>  4:            2           0.1  FALSE   DRUG_8        CELL1       72 #>  5:            3           0.2  FALSE  DRUG_10        CELL1       72 #>  6:            4           0.3  FALSE   DRUG_8        CELL1       72 #>  7:            2           0.0  FALSE  DRUG_10        CELL1       72 #>  8:            2           0.0  FALSE  vehicle        CELL1       72 #>  9:            1           0.0  FALSE   DRUG_8        CELL1       72 #> 10:            1           0.0  FALSE  DRUG_10        CELL1       72 #> 11:            2           0.0  FALSE  vehicle        CELL1       72 #> 12:            1           0.0  FALSE   DRUG_8        CELL1       72 #> 13:            1           0.0  FALSE  DRUG_10        CELL1       72 #> 14:            1           0.0  FALSE  DRUG_10        CELL1       72 #>     CorrectedReadout2 record_id #>                 <num>     <int> #>  1:                 2         8 #>  2:                 3         9 #>  3:                 4        10 #>  4:                 2        12 #>  5:                 3        13 #>  6:                 4        14 #>  7:                 2         1 #>  8:                 2         2 #>  9:                 1         3 #> 10:                 1         4 #> 11:                 2         5 #> 12:                 1         6 #> 13:                 1         7 #> 14:                 1        11 #>"},{"path":"https://gdrplatform.github.io/gDRcore/reference/test_synthetic_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Testing synthetic data form gDRtestData package — test_synthetic_data","title":"Testing synthetic data form gDRtestData package — test_synthetic_data","text":"Testing synthetic data form gDRtestData package","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/test_synthetic_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Testing synthetic data form gDRtestData package — test_synthetic_data","text":"","code":"test_synthetic_data(   original,   data,   dataName,   override_untrt_controls = NULL,   assays = c(\"Normalized\", \"Averaged\", \"Metrics\"),   tolerance = 0.001 )"},{"path":"https://gdrplatform.github.io/gDRcore/reference/test_synthetic_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Testing synthetic data form gDRtestData package — test_synthetic_data","text":"original original MAE assay data datase MAE data.table dataName dataset name override_untrt_controls named list containing defining factors treatments assays assays test tolerance tolerance factor","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/test_synthetic_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Testing synthetic data form gDRtestData package — test_synthetic_data","text":"NULL","code":""},{"path":"https://gdrplatform.github.io/gDRcore/reference/test_synthetic_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Testing synthetic data form gDRtestData package — test_synthetic_data","text":"","code":"set.seed(2) cell_lines <- gDRtestData::create_synthetic_cell_lines() drugs <- gDRtestData::create_synthetic_drugs() data <- \"finalMAE_small\" original <- gDRutils::get_synthetic_data(data) test_synthetic_data(original, original, \"test\") #> Test passed 🥇 #> Test passed 🎊 #> Test passed 🎉"},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-1113---2024-02-26","dir":"Changelog","previous_headings":"","what":"gDRcore 1.1.13 - 2024-02-26","title":"gDRcore 1.1.13 - 2024-02-26","text":"improved references valid NEWS.md","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-1112---2024-02-14","dir":"Changelog","previous_headings":"","what":"gDRcore 1.1.12 - 2024-02-14","title":"gDRcore 1.1.12 - 2024-02-14","text":"fix issue retrieving unique records mix control treated samples","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-1111---2024-02-14","dir":"Changelog","previous_headings":"","what":"gDRcore 1.1.11 - 2024-02-14","title":"gDRcore 1.1.11 - 2024-02-14","text":"make documentation compatible pkdgdown rename ‘matches’ ‘grr_matches’","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-1110---2024-02-12","dir":"Changelog","previous_headings":"","what":"gDRcore 1.1.10 - 2024-02-12","title":"gDRcore 1.1.10 - 2024-02-12","text":"fix unit tests GRAN","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-119---2024-02-07","dir":"Changelog","previous_headings":"","what":"gDRcore 1.1.9 - 2024-02-07","title":"gDRcore 1.1.9 - 2024-02-07","text":"simplify logic assays combination data rename matrix combination","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-118---2024-02-06","dir":"Changelog","previous_headings":"","what":"gDRcore 1.1.8 - 2024-02-06","title":"gDRcore 1.1.8 - 2024-02-06","text":"add support internal source annotation","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-117---2024-02-06","dir":"Changelog","previous_headings":"","what":"gDRcore 1.1.7 - 2024-02-06","title":"gDRcore 1.1.7 - 2024-02-06","text":"fix bug converting standardize MAE raw data","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-116---2024-02-05","dir":"Changelog","previous_headings":"","what":"gDRcore 1.1.6 - 2024-02-05","title":"gDRcore 1.1.6 - 2024-02-05","text":"add vignette data model","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-115---2024-02-01","dir":"Changelog","previous_headings":"","what":"gDRcore 1.1.5 - 2024-02-01","title":"gDRcore 1.1.5 - 2024-02-01","text":"update wrappers co-dilution data","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-114---2024-01-22","dir":"Changelog","previous_headings":"","what":"gDRcore 1.1.4 - 2024-01-22","title":"gDRcore 1.1.4 - 2024-01-22","text":"add new description fields","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-113---2024-01-04","dir":"Changelog","previous_headings":"","what":"gDRcore 1.1.3 - 2024-01-04","title":"gDRcore 1.1.3 - 2024-01-04","text":"improve logic normalization identification single-agent matrix data Drug3","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-112---2023-12-15","dir":"Changelog","previous_headings":"","what":"gDRcore 1.1.2 - 2023-12-15","title":"gDRcore 1.1.2 - 2023-12-15","text":"fix issue wrong assignment untreated records","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-111---2023-11-22","dir":"Changelog","previous_headings":"","what":"gDRcore 1.1.1 - 2023-11-22","title":"gDRcore 1.1.1 - 2023-11-22","text":"sync master devel branch add support unifying duplicates combo matrix data add “Treatment” template identifier","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-110---2023-10-24","dir":"Changelog","previous_headings":"","what":"gDRcore 1.1.0 - 2023-10-24","title":"gDRcore 1.1.0 - 2023-10-24","text":"release Bioc 3.18","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-100---2023-10-24","dir":"Changelog","previous_headings":"","what":"gDRcore 1.0.0 - 2023-10-24","title":"gDRcore 1.0.0 - 2023-10-24","text":"prerelease Bioc 3.18","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-09943---2023-10-17","dir":"Changelog","previous_headings":"","what":"gDRcore 0.99.43 - 2023-10-17","title":"gDRcore 0.99.43 - 2023-10-17","text":"adjust NEWS Bioc format","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-09942---2023-10-05","dir":"Changelog","previous_headings":"","what":"gDRcore 0.99.42 - 2023-10-05","title":"gDRcore 0.99.42 - 2023-10-05","text":"bump version gDRtestData fix bug merging controls triple combo additional perturbations","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-09941---2023-09-25","dir":"Changelog","previous_headings":"","what":"gDRcore 0.99.41 - 2023-09-25","title":"gDRcore 0.99.41 - 2023-09-25","text":"add support adding custom annotations inside input files improve performance","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-09940---2023-09-25","dir":"Changelog","previous_headings":"","what":"gDRcore 0.99.40 - 2023-09-25","title":"gDRcore 0.99.40 - 2023-09-25","text":"fix bug subsetting wrong combo matrix value","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-09939---2023-09-19","dir":"Changelog","previous_headings":"","what":"gDRcore 0.99.39 - 2023-09-19","title":"gDRcore 0.99.39 - 2023-09-19","text":"extend logic matching missing controls","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-09938---2023-09-12","dir":"Changelog","previous_headings":"","what":"gDRcore 0.99.38 - 2023-09-12","title":"gDRcore 0.99.38 - 2023-09-12","text":"set Drug3 official tertiary drug experiment","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-09937---2023-09-04","dir":"Changelog","previous_headings":"","what":"gDRcore 0.99.37 - 2023-09-04","title":"gDRcore 0.99.37 - 2023-09-04","text":"fill NA average values match plate","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-09936---2023-09-01","dir":"Changelog","previous_headings":"","what":"gDRcore 0.99.36 - 2023-09-01","title":"gDRcore 0.99.36 - 2023-09-01","text":"fill NA aggregation ref trt data mean","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-09935---2023-08-17","dir":"Changelog","previous_headings":"","what":"gDRcore 0.99.35 - 2023-08-17","title":"gDRcore 0.99.35 - 2023-08-17","text":"fix issue missing subsetting Day0 data","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-09934---2023-08-16","dir":"Changelog","previous_headings":"","what":"gDRcore 0.99.34 - 2023-08-16","title":"gDRcore 0.99.34 - 2023-08-16","text":"update logic supporting manifest template files sharing column","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-09933---2023-08-10","dir":"Changelog","previous_headings":"","what":"gDRcore 0.99.33 - 2023-08-10","title":"gDRcore 0.99.33 - 2023-08-10","text":"update annotation column names cell line annotation per changes gDRutils","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-09932---2023-07-25","dir":"Changelog","previous_headings":"","what":"gDRcore 0.99.32 - 2023-07-25","title":"gDRcore 0.99.32 - 2023-07-25","text":"extend logic supporting cols dash, e.g. additional perturbations “-”","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-09931---2023-07-19","dir":"Changelog","previous_headings":"","what":"gDRcore 0.99.31 - 2023-07-19","title":"gDRcore 0.99.31 - 2023-07-19","text":"update logic handling warnings pipeline","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-09930---2023-07-13","dir":"Changelog","previous_headings":"","what":"gDRcore 0.99.30 - 2023-07-13","title":"gDRcore 0.99.30 - 2023-07-13","text":"fix issue wrong merging data.tables without nested confounders","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-09929---2023-07-07","dir":"Changelog","previous_headings":"","what":"gDRcore 0.99.29 - 2023-07-07","title":"gDRcore 0.99.29 - 2023-07-07","text":"add information source type cases without metric data refactor logic splitting raw data metadata - get rid iterative approach","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-09928---2023-07-05","dir":"Changelog","previous_headings":"","what":"gDRcore 0.99.28 - 2023-07-05","title":"gDRcore 0.99.28 - 2023-07-05","text":"update logic parallel computing","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-09927---2023-06-29","dir":"Changelog","previous_headings":"","what":"gDRcore 0.99.27 - 2023-06-29","title":"gDRcore 0.99.27 - 2023-06-29","text":"optimize unit tests","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-09926---2023-06-29","dir":"Changelog","previous_headings":"","what":"gDRcore 0.99.26 - 2023-06-29","title":"gDRcore 0.99.26 - 2023-06-29","text":"remove backward compatibility old data model","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-09925---2023-06-27","dir":"Changelog","previous_headings":"","what":"gDRcore 0.99.25 - 2023-06-27","title":"gDRcore 0.99.25 - 2023-06-27","text":"fix bug missing rownames normalized assay","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-09924---2023-06-19","dir":"Changelog","previous_headings":"","what":"gDRcore 0.99.24 - 2023-06-19","title":"gDRcore 0.99.24 - 2023-06-19","text":"update logic merging data.table objects","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-09923---2023-06-13","dir":"Changelog","previous_headings":"","what":"gDRcore 0.99.23 - 2023-06-13","title":"gDRcore 0.99.23 - 2023-06-13","text":"replace order data.table::setorder","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-09922---2023-06-09","dir":"Changelog","previous_headings":"","what":"gDRcore 0.99.22 - 2023-06-09","title":"gDRcore 0.99.22 - 2023-06-09","text":"switch merge [[ data.table objects","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-09921---2023-06-06","dir":"Changelog","previous_headings":"","what":"gDRcore 0.99.21 - 2023-06-06","title":"gDRcore 0.99.21 - 2023-06-06","text":"switch aggregate data.table","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-09920---2023-06-07","dir":"Changelog","previous_headings":"","what":"gDRcore 0.99.20 - 2023-06-07","title":"gDRcore 0.99.20 - 2023-06-07","text":"switch zoo::rollmean data.table::frollmean","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-09919---2023-06-06","dir":"Changelog","previous_headings":"","what":"gDRcore 0.99.19 - 2023-06-06","title":"gDRcore 0.99.19 - 2023-06-06","text":"replace reshape2 functions functions data.table","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-09918---2023-05-31","dir":"Changelog","previous_headings":"","what":"gDRcore 0.99.18 - 2023-05-31","title":"gDRcore 0.99.18 - 2023-05-31","text":"fix managing mixed types raw data","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-09917---2023-05-29","dir":"Changelog","previous_headings":"","what":"gDRcore 0.99.17 - 2023-05-29","title":"gDRcore 0.99.17 - 2023-05-29","text":"fix bug subsetting data calculating isobologram","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-09916---2023-05-22","dir":"Changelog","previous_headings":"","what":"gDRcore 0.99.16 - 2023-05-22","title":"gDRcore 0.99.16 - 2023-05-22","text":"format vignette BiocStyle","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-09915---2023-05-16","dir":"Changelog","previous_headings":"","what":"gDRcore 0.99.15 - 2023-05-16","title":"gDRcore 0.99.15 - 2023-05-16","text":"fix related data.table","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-09914---2023-05-15","dir":"Changelog","previous_headings":"","what":"gDRcore 0.99.14 - 2023-05-15","title":"gDRcore 0.99.14 - 2023-05-15","text":"rename excess x unify colnames assay data","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-09913---2023-05-10","dir":"Changelog","previous_headings":"","what":"gDRcore 0.99.13 - 2023-05-10","title":"gDRcore 0.99.13 - 2023-05-10","text":"refactor normalization_types combo-specific assays","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-09912---2023-05-09","dir":"Changelog","previous_headings":"","what":"gDRcore 0.99.12 - 2023-05-09","title":"gDRcore 0.99.12 - 2023-05-09","text":"utilize gDRutils::apply_bumpy_function fit_SE","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-09911---2023-05-05","dir":"Changelog","previous_headings":"","what":"gDRcore 0.99.11 - 2023-05-05","title":"gDRcore 0.99.11 - 2023-05-05","text":"fix bug swapping untreated/vehicle values","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-09910---2023-05-04","dir":"Changelog","previous_headings":"","what":"gDRcore 0.99.10 - 2023-05-04","title":"gDRcore 0.99.10 - 2023-05-04","text":"fix bug data.table","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-0999---2023-04-21","dir":"Changelog","previous_headings":"","what":"gDRcore 0.99.9 - 2023-04-21","title":"gDRcore 0.99.9 - 2023-04-21","text":"utilize gDRutils::apply_bumpy_function average_SE","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-0998---2023-04-20","dir":"Changelog","previous_headings":"","what":"gDRcore 0.99.8 - 2023-04-20","title":"gDRcore 0.99.8 - 2023-04-20","text":"switch OSI license","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-0997---2023-04-19","dir":"Changelog","previous_headings":"","what":"gDRcore 0.99.7 - 2023-04-19","title":"gDRcore 0.99.7 - 2023-04-19","text":"fix bug replacing vehicle untreated values","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-0996---2023-04-19","dir":"Changelog","previous_headings":"","what":"gDRcore 0.99.6 - 2023-04-19","title":"gDRcore 0.99.6 - 2023-04-19","text":"moved wrapper fuctions gDRtestData","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-0995---2023-04-18","dir":"Changelog","previous_headings":"","what":"gDRcore 0.99.5 - 2023-04-18","title":"gDRcore 0.99.5 - 2023-04-18","text":"update dependencies add fix bioc-devel - correct sorting merge test","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-0994---2023-04-17","dir":"Changelog","previous_headings":"","what":"gDRcore 0.99.4 - 2023-04-17","title":"gDRcore 0.99.4 - 2023-04-17","text":"fix namespacing issue examples add R 4.2 dependency fix examples normalize_SE","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-0993---2023-04-12","dir":"Changelog","previous_headings":"","what":"gDRcore 0.99.3 - 2023-04-12","title":"gDRcore 0.99.3 - 2023-04-12","text":"add logic retrieving raw data assay data","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-0992---2023-04-07","dir":"Changelog","previous_headings":"","what":"gDRcore 0.99.2 - 2023-04-07","title":"gDRcore 0.99.2 - 2023-04-07","text":"update maintainer","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-0991---2023-04-04","dir":"Changelog","previous_headings":"","what":"gDRcore 0.99.1 - 2023-04-04","title":"gDRcore 0.99.1 - 2023-04-04","text":"bugfix logic ‘cleanup_metadata’","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-0990---2023-03-24","dir":"Changelog","previous_headings":"","what":"gDRcore 0.99.0 - 2023-03-24","title":"gDRcore 0.99.0 - 2023-03-24","text":"make package Bioc-compatible","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-01322---2023-03-21","dir":"Changelog","previous_headings":"","what":"gDRcore 0.1.3.22 - 2023-03-21","title":"gDRcore 0.1.3.22 - 2023-03-21","text":"improve performance ‘map_df’ refactored logic exact matches","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-01321---2023-03-15","dir":"Changelog","previous_headings":"","what":"gDRcore 0.1.3.21 - 2023-03-15","title":"gDRcore 0.1.3.21 - 2023-03-15","text":"refactor pipeline","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-01320---2023-03-09","dir":"Changelog","previous_headings":"","what":"gDRcore 0.1.3.20 - 2023-03-09","title":"gDRcore 0.1.3.20 - 2023-03-09","text":"address co-treatment fit using matrix data type instead","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-01319---2023-03-07","dir":"Changelog","previous_headings":"","what":"gDRcore 0.1.3.19 - 2023-03-07","title":"gDRcore 0.1.3.19 - 2023-03-07","text":"add support splitting normalization types","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-01318---2023-03-06","dir":"Changelog","previous_headings":"","what":"gDRcore 0.1.3.18 - 2023-03-06","title":"gDRcore 0.1.3.18 - 2023-03-06","text":"improve logic functions used generate isobolograms’ data","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-01317---2023-03-06","dir":"Changelog","previous_headings":"","what":"gDRcore 0.1.3.17 - 2023-03-06","title":"gDRcore 0.1.3.17 - 2023-03-06","text":"remove obsolete code","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-01316---2023-02-21","dir":"Changelog","previous_headings":"","what":"gDRcore 0.1.3.16 - 2023-02-21","title":"gDRcore 0.1.3.16 - 2023-02-21","text":"add support partial pipeline runs","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-01315---2023-02-10","dir":"Changelog","previous_headings":"","what":"gDRcore 0.1.3.15 - 2023-02-10","title":"gDRcore 0.1.3.15 - 2023-02-10","text":"update path annotation data","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-01314---2023-02-10","dir":"Changelog","previous_headings":"","what":"gDRcore 0.1.3.14 - 2023-02-10","title":"gDRcore 0.1.3.14 - 2023-02-10","text":"clean-code","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-01313---2023-01-13","dir":"Changelog","previous_headings":"","what":"gDRcore 0.1.3.13 - 2023-01-13","title":"gDRcore 0.1.3.13 - 2023-01-13","text":"clean-code","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-01312---2023-01-12","dir":"Changelog","previous_headings":"","what":"gDRcore 0.1.3.12 - 2023-01-12","title":"gDRcore 0.1.3.12 - 2023-01-12","text":"refactor mapping function properly handle drug3","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-01311---2022-12-16","dir":"Changelog","previous_headings":"","what":"gDRcore 0.1.3.11 - 2022-12-16","title":"gDRcore 0.1.3.11 - 2022-12-16","text":"replace parallelize function gDRutils::loop","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-01310---2022-12-15","dir":"Changelog","previous_headings":"","what":"gDRcore 0.1.3.10 - 2022-12-15","title":"gDRcore 0.1.3.10 - 2022-12-15","text":"add assert vehicle values input data runDrugResponseProcessingPipeline","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-0139---2022-12-14","dir":"Changelog","previous_headings":"","what":"gDRcore 0.1.3.9 - 2022-12-14","title":"gDRcore 0.1.3.9 - 2022-12-14","text":"fix error-handling conditions average_SE","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-0138---2022-11-07","dir":"Changelog","previous_headings":"","what":"gDRcore 0.1.3.8 - 2022-11-07","title":"gDRcore 0.1.3.8 - 2022-11-07","text":"fix invalid encapsulation tests","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-0137---2022-10-18","dir":"Changelog","previous_headings":"","what":"gDRcore 0.1.3.7 - 2022-10-18","title":"gDRcore 0.1.3.7 - 2022-10-18","text":"add missing namespacing","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-0136---2022-10-10","dir":"Changelog","previous_headings":"","what":"gDRcore 0.1.3.6 - 2022-10-10","title":"gDRcore 0.1.3.6 - 2022-10-10","text":"add support setting number cores BiocParallel based env variable","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-0135---2022-10-07","dir":"Changelog","previous_headings":"","what":"gDRcore 0.1.3.5 - 2022-10-07","title":"gDRcore 0.1.3.5 - 2022-10-07","text":"remove global parameters BiocParallel","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-0134---2022-09-29","dir":"Changelog","previous_headings":"","what":"gDRcore 0.1.3.4 - 2022-09-29","title":"gDRcore 0.1.3.4 - 2022-09-29","text":"change logic using cores BiocParallel","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-0133---2022-09-27","dir":"Changelog","previous_headings":"","what":"gDRcore 0.1.3.3 - 2022-09-27","title":"gDRcore 0.1.3.3 - 2022-09-27","text":"update logic parallel computing","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-0132---2022-08-17","dir":"Changelog","previous_headings":"","what":"gDRcore 0.1.3.2 - 2022-08-17","title":"gDRcore 0.1.3.2 - 2022-08-17","text":"update logic default nested_confounders create_SE function","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-0131---2022-07-08","dir":"Changelog","previous_headings":"","what":"gDRcore 0.1.3.1 - 2022-07-08","title":"gDRcore 0.1.3.1 - 2022-07-08","text":"refactor create_SE support reverse single-agent data","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-0130---2022-06-02","dir":"Changelog","previous_headings":"","what":"gDRcore 0.1.3.0 - 2022-06-02","title":"gDRcore 0.1.3.0 - 2022-06-02","text":"release 1.3.0","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-01139---2022-05-30","dir":"Changelog","previous_headings":"","what":"gDRcore 0.1.1.39 - 2022-05-30","title":"gDRcore 0.1.1.39 - 2022-05-30","text":"add missing namespace get_env_identifiers","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-01138---2022-05-09","dir":"Changelog","previous_headings":"","what":"gDRcore 0.1.1.38 - 2022-05-09","title":"gDRcore 0.1.1.38 - 2022-05-09","text":"replace NA 0 Concentration loaded manifest file","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-01137---2022-05-06","dir":"Changelog","previous_headings":"","what":"gDRcore 0.1.1.37 - 2022-05-06","title":"gDRcore 0.1.1.37 - 2022-05-06","text":"switch data.table data.frame add_annotation* functions","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-01136---2022-04-12","dir":"Changelog","previous_headings":"","what":"gDRcore 0.1.1.36 - 2022-04-12","title":"gDRcore 0.1.1.36 - 2022-04-12","text":"update function adding unknown cell line annotations update logic using nested confounders remove grr dependencies","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-01135---2022-04-07","dir":"Changelog","previous_headings":"","what":"gDRcore 0.1.1.35 - 2022-04-07","title":"gDRcore 0.1.1.35 - 2022-04-07","text":"get rid gDRwrapper","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-01134---2022-03-30","dir":"Changelog","previous_headings":"","what":"gDRcore 0.1.1.34 - 2022-03-30","title":"gDRcore 0.1.1.34 - 2022-03-30","text":"add support additional barcode identifiers","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-01133---2022-03-18","dir":"Changelog","previous_headings":"","what":"gDRcore 0.1.1.33 - 2022-03-18","title":"gDRcore 0.1.1.33 - 2022-03-18","text":"fix documentation calculate_matrix_metric","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-01132---2022-03-17","dir":"Changelog","previous_headings":"","what":"gDRcore 0.1.1.32 - 2022-03-17","title":"gDRcore 0.1.1.32 - 2022-03-17","text":"switch catchr purrr","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-01131---2022-03-02","dir":"Changelog","previous_headings":"","what":"gDRcore 0.1.1.31 - 2022-03-02","title":"gDRcore 0.1.1.31 - 2022-03-02","text":"fix mapping reference values inverted treatments remove duplication single-agent data","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-01130---2022-02-17","dir":"Changelog","previous_headings":"","what":"gDRcore 0.1.1.30 - 2022-02-17","title":"gDRcore 0.1.1.30 - 2022-02-17","text":"wrap SE MAE level runDrugResponseProcessingPipeline","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-01129---2022-02-14","dir":"Changelog","previous_headings":"","what":"gDRcore 0.1.1.29 - 2022-02-14","title":"gDRcore 0.1.1.29 - 2022-02-14","text":"change identifier drugname drug_name","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-01128---2022-02-09","dir":"Changelog","previous_headings":"","what":"gDRcore 0.1.1.28 - 2022-02-09","title":"gDRcore 0.1.1.28 - 2022-02-09","text":"switch gDRinternal gDRinternalData internal annotations","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-01127---2022-02-08","dir":"Changelog","previous_headings":"","what":"gDRcore 0.1.1.27 - 2022-02-08","title":"gDRcore 0.1.1.27 - 2022-02-08","text":"issue subsetting list R 4.2.0","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-01126---2022-02-02","dir":"Changelog","previous_headings":"","what":"gDRcore 0.1.1.26 - 2022-02-02","title":"gDRcore 0.1.1.26 - 2022-02-02","text":"unlist output intersect per R 4.2.0","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-01125---2022-01-31","dir":"Changelog","previous_headings":"","what":"gDRcore 0.1.1.25 - 2022-01-31","title":"gDRcore 0.1.1.25 - 2022-01-31","text":"align version criteria dependencies.yaml DESCRIPTION package versions","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-01124---2022-01-25","dir":"Changelog","previous_headings":"","what":"gDRcore 0.1.1.24 - 2022-01-25","title":"gDRcore 0.1.1.24 - 2022-01-25","text":"standardize/improve CI","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-01123---2022-01-24","dir":"Changelog","previous_headings":"","what":"gDRcore 0.1.1.23 - 2022-01-24","title":"gDRcore 0.1.1.23 - 2022-01-24","text":"switch cores variable detect_cores- function","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-01122---2022-01-24","dir":"Changelog","previous_headings":"","what":"gDRcore 0.1.1.22 - 2022-01-24","title":"gDRcore 0.1.1.22 - 2022-01-24","text":"fix wrong type NUM_CORES env variable","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-01121---2022-01-03","dir":"Changelog","previous_headings":"","what":"gDRcore 0.1.1.21 - 2022-01-03","title":"gDRcore 0.1.1.21 - 2022-01-03","text":"speed-functions mapping treated untreated cases","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-01120---2021-12-30","dir":"Changelog","previous_headings":"","what":"gDRcore 0.1.1.20 - 2021-12-30","title":"gDRcore 0.1.1.20 - 2021-12-30","text":"fix linter issues","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-01119---2021-12-14","dir":"Changelog","previous_headings":"","what":"gDRcore 0.1.1.19 - 2021-12-14","title":"gDRcore 0.1.1.19 - 2021-12-14","text":"use parallel computing alternative loops","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-01118---2021-12-07","dir":"Changelog","previous_headings":"","what":"gDRcore 0.1.1.18 - 2021-12-07","title":"gDRcore 0.1.1.18 - 2021-12-07","text":"update annotation script per new csv annotation files","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-01117---2021-12-07","dir":"Changelog","previous_headings":"","what":"gDRcore 0.1.1.17 - 2021-12-07","title":"gDRcore 0.1.1.17 - 2021-12-07","text":"detect co-trt data treat single-agent","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-01116---2021-11-08","dir":"Changelog","previous_headings":"","what":"gDRcore 0.1.1.16 - 2021-11-08","title":"gDRcore 0.1.1.16 - 2021-11-08","text":"set excess = NA single-agent","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-01115---2021-10-29","dir":"Changelog","previous_headings":"","what":"gDRcore 0.1.1.15 - 2021-10-29","title":"gDRcore 0.1.1.15 - 2021-10-29","text":"solve rounding issues add new bliss metric","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-01114---2021-10-25","dir":"Changelog","previous_headings":"","what":"gDRcore 0.1.1.14 - 2021-10-25","title":"gDRcore 0.1.1.14 - 2021-10-25","text":"refactor isobolograms","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-01113---2021-10-25","dir":"Changelog","previous_headings":"","what":"gDRcore 0.1.1.13 - 2021-10-25","title":"gDRcore 0.1.1.13 - 2021-10-25","text":"move p_trt_keys proper place","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-01112---2021-10-20","dir":"Changelog","previous_headings":"","what":"gDRcore 0.1.1.12 - 2021-10-20","title":"gDRcore 0.1.1.12 - 2021-10-20","text":"add support masked data fit_SE.combinations.R","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-01111---2021-10-14","dir":"Changelog","previous_headings":"","what":"gDRcore 0.1.1.11 - 2021-10-14","title":"gDRcore 0.1.1.11 - 2021-10-14","text":"address issues creating SE combo matrix experiments","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-01110---2021-10-13","dir":"Changelog","previous_headings":"","what":"gDRcore 0.1.1.10 - 2021-10-13","title":"gDRcore 0.1.1.10 - 2021-10-13","text":"refactor logic calculation Loewe Concentration == 0","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-0119---2021-10-12","dir":"Changelog","previous_headings":"","what":"gDRcore 0.1.1.9 - 2021-10-12","title":"gDRcore 0.1.1.9 - 2021-10-12","text":"refactor logic combo data","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-0118---2021-09-27","dir":"Changelog","previous_headings":"","what":"gDRcore 0.1.1.8 - 2021-09-27","title":"gDRcore 0.1.1.8 - 2021-09-27","text":"updated normalization_types ‘calculate_combo_matrix’ ‘fit_SE’","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-0117---2021-09-21","dir":"Changelog","previous_headings":"","what":"gDRcore 0.1.1.7 - 2021-09-21","title":"gDRcore 0.1.1.7 - 2021-09-21","text":"calculate_GR_value removing cl_name param","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-0116---2021-08-25","dir":"Changelog","previous_headings":"","what":"gDRcore 0.1.1.6 - 2021-08-25","title":"gDRcore 0.1.1.6 - 2021-08-25","text":"fix missing nested_identifiers variables creating DataFrame masked values","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-0115---2021-08-04","dir":"Changelog","previous_headings":"","what":"gDRcore 0.1.1.5 - 2021-08-04","title":"gDRcore 0.1.1.5 - 2021-08-04","text":"refactor reading annotations add default parameters","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-0114---2021-07-30","dir":"Changelog","previous_headings":"","what":"gDRcore 0.1.1.4 - 2021-07-30","title":"gDRcore 0.1.1.4 - 2021-07-30","text":"fix bug nested_confounders present ref_df","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-0113---2021-07-27","dir":"Changelog","previous_headings":"","what":"gDRcore 0.1.1.3 - 2021-07-27","title":"gDRcore 0.1.1.3 - 2021-07-27","text":"add support nested_identifiers nested_confounders","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-0112---2021-07-23","dir":"Changelog","previous_headings":"","what":"gDRcore 0.1.1.2 - 2021-07-23","title":"gDRcore 0.1.1.2 - 2021-07-23","text":"remove obsolete dependencies DESCRIPTION:Imports","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-0109---2021-07-01","dir":"Changelog","previous_headings":"","what":"gDRcore 0.1.0.9 - 2021-07-01","title":"gDRcore 0.1.0.9 - 2021-07-01","text":"function testing synthetic data","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-0108---2021-06-25","dir":"Changelog","previous_headings":"","what":"gDRcore 0.1.0.8 - 2021-06-25","title":"gDRcore 0.1.0.8 - 2021-06-25","text":"move functions importing template files gDRimport package","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-0107---2021-06-23","dir":"Changelog","previous_headings":"","what":"gDRcore 0.1.0.7 - 2021-06-23","title":"gDRcore 0.1.0.7 - 2021-06-23","text":"add linter remove obsolete functions test.utils.R","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-0106---2021-06-22","dir":"Changelog","previous_headings":"","what":"gDRcore 0.1.0.6 - 2021-06-22","title":"gDRcore 0.1.0.6 - 2021-06-22","text":"move importing functions gDRimport package","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-0105---2021-06-14","dir":"Changelog","previous_headings":"","what":"gDRcore 0.1.0.5 - 2021-06-14","title":"gDRcore 0.1.0.5 - 2021-06-14","text":"add unit tests synthetic data","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-0104---2021-06-14","dir":"Changelog","previous_headings":"","what":"gDRcore 0.1.0.4 - 2021-06-14","title":"gDRcore 0.1.0.4 - 2021-06-14","text":"remove deprecated functions unit tests","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-0103---2021-06-14","dir":"Changelog","previous_headings":"","what":"gDRcore 0.1.0.3 - 2021-06-14","title":"gDRcore 0.1.0.3 - 2021-06-14","text":"update namespace ‘metadata-’","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-0102---2021-06-10","dir":"Changelog","previous_headings":"","what":"gDRcore 0.1.0.2 - 2021-06-10","title":"gDRcore 0.1.0.2 - 2021-06-10","text":"change package name - gDR => gDRcore","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-0101---2021-06-04","dir":"Changelog","previous_headings":"","what":"gDRcore 0.1.0.1 - 2021-06-04","title":"gDRcore 0.1.0.1 - 2021-06-04","text":"export/update docs ‘standardize_record_values’","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-0100---2021-06-02","dir":"Changelog","previous_headings":"","what":"gDRcore 0.1.0.0 - 2021-06-02","title":"gDRcore 0.1.0.0 - 2021-06-02","text":"release 1.0.0","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-00152---2021-04-29","dir":"Changelog","previous_headings":"","what":"gDRcore 0.0.1.52 - 2021-04-29","title":"gDRcore 0.0.1.52 - 2021-04-29","text":"remove gDRinternal-related files","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-00151---2021-04-27","dir":"Changelog","previous_headings":"","what":"gDRcore 0.0.1.51 - 2021-04-27","title":"gDRcore 0.0.1.51 - 2021-04-27","text":"fix wrong argument name fit_curves","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-00150---2021-04-23","dir":"Changelog","previous_headings":"","what":"gDRcore 0.0.1.50 - 2021-04-23","title":"gDRcore 0.0.1.50 - 2021-04-23","text":"ensure dts assay- se,\"Averaged\" NULL treatments","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-00149---2021-04-20","dir":"Changelog","previous_headings":"","what":"gDRcore 0.0.1.49 - 2021-04-20","title":"gDRcore 0.0.1.49 - 2021-04-20","text":"add processing info metadata SE","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-00148---2021-04-14","dir":"Changelog","previous_headings":"","what":"gDRcore 0.0.1.48 - 2021-04-14","title":"gDRcore 0.0.1.48 - 2021-04-14","text":"improve handling nested_keys override_controls","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-00147---2021-04-09","dir":"Changelog","previous_headings":"","what":"gDRcore 0.0.1.47 - 2021-04-09","title":"gDRcore 0.0.1.47 - 2021-04-09","text":"get rid sorting index columns getMetaData","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-00146---2021-03-31","dir":"Changelog","previous_headings":"","what":"gDRcore 0.0.1.46 - 2021-03-31","title":"gDRcore 0.0.1.46 - 2021-03-31","text":"move SE metadata getters setters gDRutils","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-00145---2021-03-31","dir":"Changelog","previous_headings":"","what":"gDRcore 0.0.1.45 - 2021-03-31","title":"gDRcore 0.0.1.45 - 2021-03-31","text":"fix bug map_df function","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-00144---2021-03-26","dir":"Changelog","previous_headings":"","what":"gDRcore 0.0.1.44 - 2021-03-26","title":"gDRcore 0.0.1.44 - 2021-03-26","text":"refactor processing functions create_SE2, normalize_SE2, average_SE2, fit_SE2 friends","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-00143---2021-02-22","dir":"Changelog","previous_headings":"","what":"gDRcore 0.0.1.43 - 2021-02-22","title":"gDRcore 0.0.1.43 - 2021-02-22","text":"add drug_moa_2 merged df","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-00142---2021-02-17","dir":"Changelog","previous_headings":"","what":"gDRcore 0.0.1.42 - 2021-02-17","title":"gDRcore 0.0.1.42 - 2021-02-17","text":"fix bug adding annotation codrugs","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-00141---2021-02-04","dir":"Changelog","previous_headings":"","what":"gDRcore 0.0.1.41 - 2021-02-04","title":"gDRcore 0.0.1.41 - 2021-02-04","text":"add script benchmarking [normalize/average/metrics]-SE functions","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-00140---2021-02-02","dir":"Changelog","previous_headings":"","what":"gDRcore 0.0.1.40 - 2021-02-02","title":"gDRcore 0.0.1.40 - 2021-02-02","text":"fix unit tests include discard keys info getMetaData rowData","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-00139---2021-01-29","dir":"Changelog","previous_headings":"","what":"gDRcore 0.0.1.39 - 2021-01-29","title":"gDRcore 0.0.1.39 - 2021-01-29","text":"utilize refactored renamed fitting function RVGRfit fit_curves","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-00138---2021-01-27","dir":"Changelog","previous_headings":"","what":"gDRcore 0.0.1.38 - 2021-01-27","title":"gDRcore 0.0.1.38 - 2021-01-27","text":"export functions use gDRutils","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-00137---2021-01-20","dir":"Changelog","previous_headings":"","what":"gDRcore 0.0.1.37 - 2021-01-20","title":"gDRcore 0.0.1.37 - 2021-01-20","text":"move df_to_assay df_to_bm_assay gDRutils","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-00136---2021-01-18","dir":"Changelog","previous_headings":"","what":"gDRcore 0.0.1.36 - 2021-01-18","title":"gDRcore 0.0.1.36 - 2021-01-18","text":"updated rowData colData SE additional columns","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-00135---2021-01-14","dir":"Changelog","previous_headings":"","what":"gDRcore 0.0.1.35 - 2021-01-14","title":"gDRcore 0.0.1.35 - 2021-01-14","text":"update positional header calls explicit identifier calls minor changes comply gDRstyle minor changes use identifiers hard coded DrugName requirements","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-00134---2021-01-12","dir":"Changelog","previous_headings":"","what":"gDRcore 0.0.1.34 - 2021-01-12","title":"gDRcore 0.0.1.34 - 2021-01-12","text":"update scripts related annotation drugs cell lines","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-00133---2021-01-05","dir":"Changelog","previous_headings":"","what":"gDRcore 0.0.1.33 - 2021-01-05","title":"gDRcore 0.0.1.33 - 2021-01-05","text":"anonymize test data","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-00132---2020-12-24","dir":"Changelog","previous_headings":"","what":"gDRcore 0.0.1.32 - 2020-12-24","title":"gDRcore 0.0.1.32 - 2020-12-24","text":"switch GeneDataScreenR gDRinternal QCS gDR functions","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-00131---2020-12-22","dir":"Changelog","previous_headings":"","what":"gDRcore 0.0.1.31 - 2020-12-22","title":"gDRcore 0.0.1.31 - 2020-12-22","text":"make createSE returning assays ‘BumpyMatrix’ objects - previously ‘matrix’ objects add df_to_bm_assay function - returning BumpyMatrix object raw experiment data add initial tests createSE function","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-00130---2020-12-21","dir":"Changelog","previous_headings":"","what":"gDRcore 0.0.1.30 - 2020-12-21","title":"gDRcore 0.0.1.30 - 2020-12-21","text":"minor clean-","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-00129---2020-12-15","dir":"Changelog","previous_headings":"","what":"gDRcore 0.0.1.29 - 2020-12-15","title":"gDRcore 0.0.1.29 - 2020-12-15","text":"remove dplyr use latest version gDRutils","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-00128---2020-12-07","dir":"Changelog","previous_headings":"","what":"gDRcore 0.0.1.28 - 2020-12-07","title":"gDRcore 0.0.1.28 - 2020-12-07","text":"error messages","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-00127---2020-12-02","dir":"Changelog","previous_headings":"","what":"gDRcore 0.0.1.27 - 2020-12-02","title":"gDRcore 0.0.1.27 - 2020-12-02","text":"refactor analyze_data.R taking account codilution combo","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-00126---2020-11-24","dir":"Changelog","previous_headings":"","what":"gDRcore 0.0.1.26 - 2020-11-24","title":"gDRcore 0.0.1.26 - 2020-11-24","text":"bug reading raw data","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-00125---2020-11-08","dir":"Changelog","previous_headings":"","what":"gDRcore 0.0.1.25 - 2020-11-08","title":"gDRcore 0.0.1.25 - 2020-11-08","text":"clean-repository duplicated functions","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-00125---2020-11-06","dir":"Changelog","previous_headings":"","what":"gDRcore 0.0.1.25 - 2020-11-06","title":"gDRcore 0.0.1.25 - 2020-11-06","text":"switch R 4.0","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-00124---2020-10-01","dir":"Changelog","previous_headings":"","what":"gDRcore 0.0.1.24 - 2020-10-01","title":"gDRcore 0.0.1.24 - 2020-10-01","text":"bugs function metrics calculation per QCS dataset QCS data scripts processing pushing QCS data Rosalind","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-00123---2020-09-29","dir":"Changelog","previous_headings":"","what":"gDRcore 0.0.1.23 - 2020-09-29","title":"gDRcore 0.0.1.23 - 2020-09-29","text":"updated README.md","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-00122---2020-09-22","dir":"Changelog","previous_headings":"","what":"gDRcore 0.0.1.22 - 2020-09-22","title":"gDRcore 0.0.1.22 - 2020-09-22","text":"bug update_experiment_metadata","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-00121---2020-09-03","dir":"Changelog","previous_headings":"","what":"gDRcore 0.0.1.21 - 2020-09-03","title":"gDRcore 0.0.1.21 - 2020-09-03","text":"logic per new db model","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-00120---2020-08-26","dir":"Changelog","previous_headings":"","what":"gDRcore 0.0.1.20 - 2020-08-26","title":"gDRcore 0.0.1.20 - 2020-08-26","text":"RDS files GDS data - GDS5, GDS6, GDS7","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-00119---2020-08-03","dir":"Changelog","previous_headings":"","what":"gDRcore 0.0.1.19 - 2020-08-03","title":"gDRcore 0.0.1.19 - 2020-08-03","text":"including masked field able remove masked data averages add function annotate drug combinations - add_codrug_group update tests contained combination experiments accordingly. add new tests GDS data minor refactor use ‘masked’ column. part initial dataframe added automatically - set FALSE","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-00118---2020-07-29","dir":"Changelog","previous_headings":"","what":"gDRcore 0.0.1.18 - 2020-07-29","title":"gDRcore 0.0.1.18 - 2020-07-29","text":"fixed issue update_experiment_metadata.R unit test update_experiment_metadata.R","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-00117---2020-07-14","dir":"Changelog","previous_headings":"","what":"gDRcore 0.0.1.17 - 2020-07-14","title":"gDRcore 0.0.1.17 - 2020-07-14","text":"function updating metadata SE","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-00116---2020-07-14","dir":"Changelog","previous_headings":"","what":"gDRcore 0.0.1.16 - 2020-07-14","title":"gDRcore 0.0.1.16 - 2020-07-14","text":"dependencies: kcloak, gDRwrapper","code":""},{"path":"https://gdrplatform.github.io/gDRcore/news/index.html","id":"gdrcore-00115---2020-07-08","dir":"Changelog","previous_headings":"","what":"gDRcore 0.0.1.15 - 2020-07-08","title":"gDRcore 0.0.1.15 - 2020-07-08","text":"dependencies","code":""}]
