% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/average_SE.R, R/create_SE.R, R/fit_SE.R,
%   R/normalize_SE.R, R/runDrugResponseProcessingPipeline.R
\name{average_SE}
\alias{average_SE}
\alias{create_SE}
\alias{fit_SE}
\alias{normalize_SE}
\alias{runDrugResponseProcessingPipelineFxns}
\alias{create_and_normalize_SE}
\alias{runDrugResponseProcessingPipeline}
\title{Run drug response processing pipeline}
\usage{
average_SE(
  se,
  series_identifiers = NULL,
  override_masked = FALSE,
  normalized_assay = "Normalized",
  averaged_assay = "Averaged"
)

create_SE(
  df_,
  readout = "ReadoutValue",
  control_mean_fxn = function(x) {     mean(x, trim = 0.25) },
  nested_identifiers = NULL,
  nested_confounders = intersect(names(df_), gDRutils::get_env_identifiers("barcode")),
  override_untrt_controls = NULL
)

fit_SE(
  se,
  nested_identifiers = NULL,
  averaged_assay = "Averaged",
  metrics_assay = "Metrics",
  n_point_cutoff = 4,
  range_conc = c(0.005, 5),
  force_fit = FALSE,
  pcutoff = 0.05,
  cap = 0.1,
  curve_type = c("GRvalue", "RelativeViability")
)

normalize_SE(
  se,
  nested_identifiers = NULL,
  nested_confounders = gDRutils::get_SE_identifiers(se, "barcode", simplify = TRUE),
  control_assay = "Controls",
  raw_treated_assay = "RawTreated",
  normalized_assay = "Normalized",
  ndigit_rounding = 4
)

create_and_normalize_SE(
  df_,
  readout = "ReadoutValue",
  control_mean_fxn = function(x) {     mean(x, trim = 0.25) },
  nested_identifiers = NULL,
  nested_confounders = gDRutils::get_env_identifiers("barcode"),
  override_untrt_controls = NULL,
  ndigit_rounding = 4,
  control_assay = "Controls",
  raw_treated_assay = "RawTreated",
  normalized_assay = "Normalized"
)

runDrugResponseProcessingPipeline(
  df_,
  readout = "ReadoutValue",
  control_mean_fxn = function(x) {     mean(x, trim = 0.25) },
  nested_identifiers = NULL,
  nested_confounders = gDRutils::get_env_identifiers("barcode"),
  override_untrt_controls = NULL,
  override_masked = FALSE,
  ndigit_rounding = 4,
  n_point_cutoff = 4,
  control_assay = "Controls",
  raw_treated_assay = "RawTreated",
  normalized_assay = "Normalized",
  averaged_assay = "Averaged",
  metrics_assay = "Metrics",
  add_raw_data = FALSE
)
}
\arguments{
\item{override_masked}{boolean indicating whether or not to override the masked wells
in the averaging and include all wells. 
Defaults to \code{FALSE}.}

\item{normalized_assay}{string of the assay name containing the normalized data.
Defaults to \code{"Normalized"}.}

\item{averaged_assay}{string of the name of the averaged assay in the \linkS4class{SummarizedExperiment}.
Defaults to \code{"Averaged"}.}

\item{df_}{data.frame of raw drug response data containing both treated and untreated values.}

\item{readout}{string of the name containing the cell viability readout values.}

\item{control_mean_fxn}{function indicating how to average controls.
Defaults to \code{mean(x, trim = 0.25)}.}

\item{override_untrt_controls}{named list containing defining factors in the treatments.
Defaults to \code{NULL}.}

\item{metrics_assay}{string of the name of the metrics assay to output
in the returned \linkS4class{SummarizedExperiment}
Defaults to \code{"Metrics"}.}

\item{n_point_cutoff}{integer of how many points should be considered the minimum required to try to fit a curve.
Defaults to \code{4}.}

\item{control_assay}{string containing the name of the assay representing the controls in the \code{se}.
Defaults to \code{"Controls"}.}

\item{raw_treated_assay}{string containing the name of the assay representing the raw treated data in the \code{se}.
Defaults to \code{"RawTreated"}.}

\item{ndigit_rounding}{integer indicating number of digits to round to in calculations.
Defaults to \code{4}.}

\item{add_raw_data}{boolean indicating whether or not to include raw data into experiment metadata.}

\item{nested_keys}{character vector of column names to include in the data.frames
in the assays of the resulting \code{SummarizedExperiment} object.}

\item{Defaults}{to the \code{nested_identifiers} and \code{nested_confounders} if passed through
\code{create_and_normalize_SE} or \code{runDrugResponseProcessingPipeline}.}
}
\description{
Run different components of the gDR drug response processing pipeline.
Either: create a SummarizedExperiment and normalize raw treated and control data (create_and_normalize_SE),
average data (average_SE), or fit the processed data (fit_SE). See details for more in-depth explanations.
}
\details{
\code{runDrugResponseProcessingPipeline} is made up of 3 separate steps:
\itemize{
 \item{"create_and_normalize_SE"}
 \item{"average_SE"}
 \item{"fit_SE"}
}

For create_and_normalize_SE, this creates a SummarizedExperiment object from a data.frame, 
where the data.frame contains treatments on rows, and conditions on columns. 
A \linkS4class{SummarizedExperiment} object containing two asssays is created:
treated readouts will live in an assay called \code{"RawTreated"},
and reference readouts live in an assay called \code{"Controls"}. Subsequently, the treated
and control elements will be normalized to output two metrics: 

For average_SE, take the normalized assay and average the nested \code{DataFrame}s across unique
\code{nested_identifiers}. 

For fit_SE, take the averaged assay and fit curves to obtain metrics, one set of metrics for each
normalization type set.
}
